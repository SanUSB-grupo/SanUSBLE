

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Sat Jul 11 15:11:05 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           	psect	idataCOMRAM
    53  006338                     __pidataCOMRAM:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _R
    57  006338  0FDF               	dw	4063
    58                           
    59                           ;initializer for _Fe
    60  00633A  20                 	db	32
    61                           
    62                           ;initializer for _G
    63  00633B  20                 	db	32
    64                           
    65                           ;initializer for _REG
    66  00633C  0F                 	db	15
    67                           
    68                           ;initializer for _REGad
    69  00633D  DF                 	db	223
    70                           
    71                           ;initializer for _e
    72  00633E  20                 	db	32
    73                           
    74                           ;initializer for _po
    75  00633F  20                 	db	32
    76                           
    77                           ;initializer for _rr
    78  006340  20                 	db	32
    79                           
    80                           ;initializer for _ru
    81  006341  20                 	db	32
    82                           
    83                           	psect	mediumconst
    84  007ED0                     __pmediumconst:
    85                           	opt stack 0
    86  007ED0  00                 	db	0
    87  007ED1                     _icgs:
    88                           	opt stack 0
    89  007ED1  82                 	db	130
    90  007ED2  A8                 	db	168
    91  007ED3  56                 	db	86
    92  007ED4  AA                 	db	170
    93  007ED5  82                 	db	130
    94  007ED6  A4                 	db	164
    95  007ED7  A8                 	db	168
    96  007ED8  7A                 	db	122
    97  007ED9  62                 	db	98
    98  007EDA  72                 	db	114
    99  007EDB  64                 	db	100
   100  007EDC  60                 	db	96
   101  007EDD  60                 	db	96
   102  007EDE  58                 	db	88
   103  007EDF  60                 	db	96
   104  007EE0  58                 	db	88
   105  007EE1  60                 	db	96
   106  007EE2  1A                 	db	26
   107  007EE3  14                 	db	20
   108  007EE4  00                 	db	0
   109  007EE5                     __end_of_icgs:
   110                           	opt stack 0
   111  007EE5                     _icms:
   112                           	opt stack 0
   113  007EE5  82                 	db	130
   114  007EE6  A8                 	db	168
   115  007EE7  56                 	db	86
   116  007EE8  9C                 	db	156
   117  007EE9  82                 	db	130
   118  007EEA  9A                 	db	154
   119  007EEB  8A                 	db	138
   120  007EEC  7A                 	db	122
   121  007EED  A6                 	db	166
   122  007EEE  C2                 	db	194
   123  007EEF  DC                 	db	220
   124  007EF0  AA                 	db	170
   125  007EF1  A6                 	db	166
   126  007EF2  84                 	db	132
   127  007EF3  62                 	db	98
   128  007EF4  6A                 	db	106
   129  007EF5  1A                 	db	26
   130  007EF6  14                 	db	20
   131  007EF7  00                 	db	0
   132  007EF8                     __end_of_icms:
   133                           	opt stack 0
   134  007EF8                     _icn:
   135                           	opt stack 0
   136  007EF8  82                 	db	130
   137  007EF9  A8                 	db	168
   138  007EFA  56                 	db	86
   139  007EFB  9C                 	db	156
   140  007EFC  82                 	db	130
   141  007EFD  9A                 	db	154
   142  007EFE  8A                 	db	138
   143  007EFF  90                 	db	144
   144  007F00  9A                 	db	154
   145  007F01  BE                 	db	190
   146  007F02  A6                 	db	166
   147  007F03  C2                 	db	194
   148  007F04  DC                 	db	220
   149  007F05  AA                 	db	170
   150  007F06  A6                 	db	166
   151  007F07  84                 	db	132
   152  007F08  00                 	db	0
   153  007F09                     __end_of_icn:
   154                           	opt stack 0
   155  007F09                     _icm:
   156                           	opt stack 0
   157  007F09  82                 	db	130
   158  007F0A  A8                 	db	168
   159  007F0B  56                 	db	86
   160  007F0C  9C                 	db	156
   161  007F0D  82                 	db	130
   162  007F0E  9A                 	db	154
   163  007F0F  8A                 	db	138
   164  007F10  A6                 	db	166
   165  007F11  C2                 	db	194
   166  007F12  DC                 	db	220
   167  007F13  AA                 	db	170
   168  007F14  A6                 	db	166
   169  007F15  84                 	db	132
   170  007F16  62                 	db	98
   171  007F17  00                 	db	0
   172  007F18                     __end_of_icm:
   173                           	opt stack 0
   174  007F18                     _icrs:
   175                           	opt stack 0
   176  007F18  82                 	db	130
   177  007F19  A8                 	db	168
   178  007F1A  56                 	db	86
   179  007F1B  A4                 	db	164
   180  007F1C  8A                 	db	138
   181  007F1D  A6                 	db	166
   182  007F1E  8A                 	db	138
   183  007F1F  A8                 	db	168
   184  007F20  1A                 	db	26
   185  007F21  14                 	db	20
   186  007F22  00                 	db	0
   187  007F23                     __end_of_icrs:
   188                           	opt stack 0
   189  007F23                     _icb:
   190                           	opt stack 0
   191  007F23  82                 	db	130
   192  007F24  A8                 	db	168
   193  007F25  56                 	db	86
   194  007F26  84                 	db	132
   195  007F27  82                 	db	130
   196  007F28  AA                 	db	170
   197  007F29  88                 	db	136
   198  007F2A  6A                 	db	106
   199  007F2B  00                 	db	0
   200  007F2C                     __end_of_icb:
   201                           	opt stack 0
   202  007F2C                     _icg:
   203                           	opt stack 0
   204  007F2C  82                 	db	130
   205  007F2D  A8                 	db	168
   206  007F2E  56                 	db	86
   207  007F2F  84                 	db	132
   208  007F30  82                 	db	130
   209  007F31  AA                 	db	170
   210  007F32  88                 	db	136
   211  007F33  6A                 	db	106
   212  007F34  00                 	db	0
   213  007F35                     __end_of_icg:
   214                           	opt stack 0
   215  007F35                     _icr:
   216                           	opt stack 0
   217  007F35  82                 	db	130
   218  007F36  A8                 	db	168
   219  007F37  56                 	db	86
   220  007F38  A4                 	db	164
   221  007F39  8A                 	db	138
   222  007F3A  A6                 	db	166
   223  007F3B  8A                 	db	138
   224  007F3C  A8                 	db	168
   225  007F3D  00                 	db	0
   226  007F3E                     __end_of_icr:
   227                           	opt stack 0
   228  007F3E                     _atc:
   229                           	opt stack 0
   230  007F3E  82                 	db	130
   231  007F3F  A8                 	db	168
   232  007F40  1A                 	db	26
   233  007F41  14                 	db	20
   234  007F42  00                 	db	0
   235  007F43                     __end_of_atc:
   236                           	opt stack 0
   237  007F43                     _icp:
   238                           	opt stack 0
   239  007F43  82                 	db	130
   240  007F44  A8                 	db	168
   241  007F45  00                 	db	0
   242  007F46                     __end_of_icp:
   243                           	opt stack 0
   244  0000                     _ADRES	set	4035
   245  0000                     _ADCON0	set	4034
   246  0000                     _ADCON0bits	set	4034
   247  0000                     _ADCON1	set	4033
   248  0000                     _ADCON2	set	4032
   249  0000                     _ADCON2bits	set	4032
   250  0000                     _ADRESH	set	4036
   251  0000                     _BAUDCON	set	4024
   252  0000                     _BAUDCONbits	set	4024
   253  0000                     _CCP1CON	set	4029
   254  0000                     _CCP2CON	set	4026
   255  0000                     _CCPR1L	set	4030
   256  0000                     _CCPR2L	set	4027
   257  0000                     _EEADR	set	4009
   258  0000                     _EECON1	set	4006
   259  0000                     _EECON1bits	set	4006
   260  0000                     _EECON2	set	4007
   261  0000                     _EEDATA	set	4008
   262  0000                     _INTCON2bits	set	4081
   263  0000                     _INTCON3bits	set	4080
   264  0000                     _INTCONbits	set	4082
   265  0000                     _IPR1bits	set	3999
   266  0000                     _LATA	set	3977
   267  0000                     _LATB	set	3978
   268  0000                     _LATC	set	3979
   269  0000                     _PIE1bits	set	3997
   270  0000                     _PIE2bits	set	4000
   271  0000                     _PIR1bits	set	3998
   272  0000                     _PORTAbits	set	3968
   273  0000                     _PORTBbits	set	3969
   274  0000                     _PORTCbits	set	3970
   275  0000                     _PORTDbits	set	3971
   276  0000                     _PORTEbits	set	3972
   277  0000                     _PR2	set	4043
   278  0000                     _RCONbits	set	4048
   279  0000                     _RCREG	set	4014
   280  0000                     _RCSTA	set	4011
   281  0000                     _RCSTAbits	set	4011
   282  0000                     _SPBRG	set	4015
   283  0000                     _SPBRGH	set	4016
   284  0000                     _T0CON	set	4053
   285  0000                     _T0CONbits	set	4053
   286  0000                     _T1CONbits	set	4045
   287  0000                     _T2CON	set	4042
   288  0000                     _T2CONbits	set	4042
   289  0000                     _T3CONbits	set	4017
   290  0000                     _TMR0H	set	4055
   291  0000                     _TMR0L	set	4054
   292  0000                     _TMR1H	set	4047
   293  0000                     _TMR1L	set	4046
   294  0000                     _TMR3H	set	4019
   295  0000                     _TMR3L	set	4018
   296  0000                     _TRISA	set	3986
   297  0000                     _TRISAbits	set	3986
   298  0000                     _TRISB	set	3987
   299  0000                     _TRISBbits	set	3987
   300  0000                     _TRISC	set	3988
   301  0000                     _TRISCbits	set	3988
   302  0000                     _TRISDbits	set	3989
   303  0000                     _TXREG	set	4013
   304  0000                     _TXSTA	set	4012
   305  0000                     _TXSTAbits	set	4012
   306  0000                     _WDTCONbits	set	4049
   307  007F46                     __stringdata:
   308                           	opt stack 0
   309  007F46                     STR_1:
   310  007F46  68                 	db	104	;'h'
   311  007F47  74                 	db	116	;'t'
   312  007F48  74                 	db	116	;'t'
   313  007F49  70                 	db	112	;'p'
   314  007F4A  73                 	db	115	;'s'
   315  007F4B  3A                 	db	58	;':'
   316  007F4C  2F                 	db	47
   317  007F4D  2F                 	db	47
   318  007F4E  64                 	db	100	;'d'
   319  007F4F  6F                 	db	111	;'o'
   320  007F50  63                 	db	99	;'c'
   321  007F51  73                 	db	115	;'s'
   322  007F52  2E                 	db	46
   323  007F53  67                 	db	103	;'g'
   324  007F54  6F                 	db	111	;'o'
   325  007F55  6F                 	db	111	;'o'
   326  007F56  67                 	db	103	;'g'
   327  007F57  6C                 	db	108	;'l'
   328  007F58  65                 	db	101	;'e'
   329  007F59  2E                 	db	46
   330  007F5A  63                 	db	99	;'c'
   331  007F5B  6F                 	db	111	;'o'
   332  007F5C  6D                 	db	109	;'m'
   333  007F5D  2F                 	db	47
   334  007F5E  66                 	db	102	;'f'
   335  007F5F  6F                 	db	111	;'o'
   336  007F60  72                 	db	114	;'r'
   337  007F61  6D                 	db	109	;'m'
   338  007F62  73                 	db	115	;'s'
   339  007F63  2F                 	db	47
   340  007F64  64                 	db	100	;'d'
   341  007F65  2F                 	db	47
   342  007F66  31                 	db	49	;'1'
   343  007F67  50                 	db	80	;'P'
   344  007F68  5A                 	db	90	;'Z'
   345  007F69  4F                 	db	79	;'O'
   346  007F6A  71                 	db	113	;'q'
   347  007F6B  6A                 	db	106	;'j'
   348  007F6C  6E                 	db	110	;'n'
   349  007F6D  69                 	db	105	;'i'
   350  007F6E  74                 	db	116	;'t'
   351  007F6F  45                 	db	69	;'E'
   352  007F70  52                 	db	82	;'R'
   353  007F71  30                 	db	48	;'0'
   354  007F72  6D                 	db	109	;'m'
   355  007F73  30                 	db	48	;'0'
   356  007F74  33                 	db	51	;'3'
   357  007F75  49                 	db	73	;'I'
   358  007F76  78                 	db	120	;'x'
   359  007F77  34                 	db	52	;'4'
   360  007F78  72                 	db	114	;'r'
   361  007F79  39                 	db	57	;'9'
   362  007F7A  67                 	db	103	;'g'
   363  007F7B  44                 	db	68	;'D'
   364  007F7C  42                 	db	66	;'B'
   365  007F7D  71                 	db	113	;'q'
   366  007F7E  68                 	db	104	;'h'
   367  007F7F  70                 	db	112	;'p'
   368  007F80  37                 	db	55	;'7'
   369  007F81  58                 	db	88	;'X'
   370  007F82  73                 	db	115	;'s'
   371  007F83  31                 	db	49	;'1'
   372  007F84  59                 	db	89	;'Y'
   373  007F85  72                 	db	114	;'r'
   374  007F86  50                 	db	80	;'P'
   375  007F87  6D                 	db	109	;'m'
   376  007F88  6A                 	db	106	;'j'
   377  007F89  4C                 	db	76	;'L'
   378  007F8A  79                 	db	121	;'y'
   379  007F8B  6D                 	db	109	;'m'
   380  007F8C  45                 	db	69	;'E'
   381  007F8D  32                 	db	50	;'2'
   382  007F8E  56                 	db	86	;'V'
   383  007F8F  57                 	db	87	;'W'
   384  007F90  41                 	db	65	;'A'
   385  007F91  55                 	db	85	;'U'
   386  007F92  2F                 	db	47
   387  007F93  66                 	db	102	;'f'
   388  007F94  6F                 	db	111	;'o'
   389  007F95  72                 	db	114	;'r'
   390  007F96  6D                 	db	109	;'m'
   391  007F97  52                 	db	82	;'R'
   392  007F98  65                 	db	101	;'e'
   393  007F99  73                 	db	115	;'s'
   394  007F9A  70                 	db	112	;'p'
   395  007F9B  6F                 	db	111	;'o'
   396  007F9C  6E                 	db	110	;'n'
   397  007F9D  73                 	db	115	;'s'
   398  007F9E  65                 	db	101	;'e'
   399  007F9F  3F                 	db	63	;'?'
   400  007FA0  69                 	db	105	;'i'
   401  007FA1  66                 	db	102	;'f'
   402  007FA2  71                 	db	113	;'q'
   403  007FA3  26                 	db	38
   404  007FA4  65                 	db	101	;'e'
   405  007FA5  6E                 	db	110	;'n'
   406  007FA6  74                 	db	116	;'t'
   407  007FA7  72                 	db	114	;'r'
   408  007FA8  79                 	db	121	;'y'
   409  007FA9  2E                 	db	46
   410  007FAA  39                 	db	57	;'9'
   411  007FAB  36                 	db	54	;'6'
   412  007FAC  32                 	db	50	;'2'
   413  007FAD  30                 	db	48	;'0'
   414  007FAE  32                 	db	50	;'2'
   415  007FAF  33                 	db	51	;'3'
   416  007FB0  30                 	db	48	;'0'
   417  007FB1  38                 	db	56	;'8'
   418  007FB2  39                 	db	57	;'9'
   419  007FB3  3D                 	db	61	;'='
   420  007FB4  00                 	db	0
   421  007FB5                     STR_4:
   422  007FB5  26                 	db	38
   423  007FB6  65                 	db	101	;'e'
   424  007FB7  6E                 	db	110	;'n'
   425  007FB8  74                 	db	116	;'t'
   426  007FB9  72                 	db	114	;'r'
   427  007FBA  79                 	db	121	;'y'
   428  007FBB  2E                 	db	46
   429  007FBC  31                 	db	49	;'1'
   430  007FBD  35                 	db	53	;'5'
   431  007FBE  38                 	db	56	;'8'
   432  007FBF  39                 	db	57	;'9'
   433  007FC0  32                 	db	50	;'2'
   434  007FC1  38                 	db	56	;'8'
   435  007FC2  34                 	db	52	;'4'
   436  007FC3  33                 	db	51	;'3'
   437  007FC4  33                 	db	51	;'3'
   438  007FC5  33                 	db	51	;'3'
   439  007FC6  3D                 	db	61	;'='
   440  007FC7  00                 	db	0
   441  007FC8                     STR_2:
   442  007FC8  26                 	db	38
   443  007FC9  65                 	db	101	;'e'
   444  007FCA  6E                 	db	110	;'n'
   445  007FCB  74                 	db	116	;'t'
   446  007FCC  72                 	db	114	;'r'
   447  007FCD  79                 	db	121	;'y'
   448  007FCE  2E                 	db	46
   449  007FCF  31                 	db	49	;'1'
   450  007FD0  34                 	db	52	;'4'
   451  007FD1  36                 	db	54	;'6'
   452  007FD2  38                 	db	56	;'8'
   453  007FD3  32                 	db	50	;'2'
   454  007FD4  36                 	db	54	;'6'
   455  007FD5  36                 	db	54	;'6'
   456  007FD6  37                 	db	55	;'7'
   457  007FD7  33                 	db	51	;'3'
   458  007FD8  33                 	db	51	;'3'
   459  007FD9  3D                 	db	61	;'='
   460  007FDA  00                 	db	0
   461  007FDB                     STR_3:
   462  007FDB  26                 	db	38
   463  007FDC  65                 	db	101	;'e'
   464  007FDD  6E                 	db	110	;'n'
   465  007FDE  74                 	db	116	;'t'
   466  007FDF  72                 	db	114	;'r'
   467  007FE0  79                 	db	121	;'y'
   468  007FE1  2E                 	db	46
   469  007FE2  31                 	db	49	;'1'
   470  007FE3  36                 	db	54	;'6'
   471  007FE4  30                 	db	48	;'0'
   472  007FE5  39                 	db	57	;'9'
   473  007FE6  39                 	db	57	;'9'
   474  007FE7  30                 	db	48	;'0'
   475  007FE8  34                 	db	52	;'4'
   476  007FE9  39                 	db	57	;'9'
   477  007FEA  35                 	db	53	;'5'
   478  007FEB  37                 	db	55	;'7'
   479  007FEC  3D                 	db	61	;'='
   480  007FED  00                 	db	0
   481  007FEE                     STR_5:
   482  007FEE  26                 	db	38
   483  007FEF  73                 	db	115	;'s'
   484  007FF0  75                 	db	117	;'u'
   485  007FF1  62                 	db	98	;'b'
   486  007FF2  6D                 	db	109	;'m'
   487  007FF3  69                 	db	105	;'i'
   488  007FF4  74                 	db	116	;'t'
   489  007FF5  3D                 	db	61	;'='
   490  007FF6  53                 	db	83	;'S'
   491  007FF7  75                 	db	117	;'u'
   492  007FF8  62                 	db	98	;'b'
   493  007FF9  6D                 	db	109	;'m'
   494  007FFA  69                 	db	105	;'i'
   495  007FFB  74                 	db	116	;'t'
   496  007FFC  2A                 	db	42
   497  007FFD  00                 	db	0
   498  007FFE                     __end_of__stringdata:
   499                           	opt stack 0
   500  007FFE  00                 	db	0	; dummy byte at the end
   501  0000                     
   502                           ; #config settings
   503                           
   504                           	psect	cinit
   505  0064EE                     __pcinit:
   506                           	opt stack 0
   507  0064EE                     start_initialization:
   508                           	opt stack 0
   509  0064EE                     __initialization:
   510                           	opt stack 0
   511                           
   512                           ; Clear objects allocated to BANK0 (72 bytes)
   513  0064EE  EE00  F060         	lfsr	0,__pbssBANK0
   514  0064F2  0E48               	movlw	72
   515  0064F4                     clear_0:
   516  0064F4  6AEE               	clrf	postinc0,c
   517  0064F6  06E8               	decf	wreg,f,c
   518  0064F8  E1FD               	bnz	clear_0
   519                           
   520                           ; Clear objects allocated to COMRAM (31 bytes)
   521  0064FA  EE00  F023         	lfsr	0,__pbssCOMRAM
   522  0064FE  0E1F               	movlw	31
   523  006500                     clear_1:
   524  006500  6AEE               	clrf	postinc0,c
   525  006502  06E8               	decf	wreg,f,c
   526  006504  E1FD               	bnz	clear_1
   527                           
   528                           ; Initialize objects allocated to COMRAM (10 bytes)
   529                           ; load TBLPTR registers with __pidataCOMRAM
   530  006506  0E38               	movlw	low __pidataCOMRAM
   531  006508  6EF6               	movwf	tblptrl,c
   532  00650A  0E63               	movlw	high __pidataCOMRAM
   533  00650C  6EF7               	movwf	tblptrh,c
   534  00650E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   535  006510  6EF8               	movwf	tblptru,c
   536  006512  EE00  F042         	lfsr	0,__pdataCOMRAM
   537  006516  EE10 F00A          	lfsr	1,10
   538  00651A                     copy_data0:
   539  00651A  0009               	tblrd		*+
   540  00651C  CFF5 FFEE          	movff	tablat,postinc0
   541  006520  50E5               	movf	postdec1,w,c
   542  006522  50E1               	movf	fsr1l,w,c
   543  006524  E1FA               	bnz	copy_data0
   544  006526                     end_of_initialization:
   545                           	opt stack 0
   546  006526                     __end_of__initialization:
   547                           	opt stack 0
   548  006526  0E00               	movlw	low (__Lmediumconst shr (0+16))
   549  006528  6EF8               	movwf	tblptru,c
   550  00652A  0100               	movlb	0
   551  00652C  EFDE  F039         	goto	_main	;jump to C main() function
   552                           tblptru	equ	0xFF8
   553                           tblptrh	equ	0xFF7
   554                           tblptrl	equ	0xFF6
   555                           tablat	equ	0xFF5
   556                           postinc0	equ	0xFEE
   557                           wreg	equ	0xFE8
   558                           postdec1	equ	0xFE5
   559                           fsr1l	equ	0xFE1
   560                           
   561                           	psect	bssCOMRAM
   562  000023                     __pbssCOMRAM:
   563                           	opt stack 0
   564  000023                     _c:
   565                           	opt stack 0
   566  000023                     	ds	2
   567  000025                     _chegou:
   568                           	opt stack 0
   569  000025                     	ds	2
   570  000027                     _envia:
   571                           	opt stack 0
   572  000027                     	ds	2
   573  000029                     _flagb:
   574                           	opt stack 0
   575  000029                     	ds	2
   576  00002B                     _flagc:
   577                           	opt stack 0
   578  00002B                     	ds	2
   579  00002D                     _i:
   580                           	opt stack 0
   581  00002D                     	ds	2
   582  00002F                     _temperatura:
   583                           	opt stack 0
   584  00002F                     	ds	2
   585  000031                     _time:
   586                           	opt stack 0
   587  000031                     	ds	2
   588  000033                     _w:
   589                           	opt stack 0
   590  000033                     	ds	2
   591  000035                     _USART_Status:
   592                           	opt stack 0
   593  000035                     	ds	1
   594  000036                     _c1:
   595                           	opt stack 0
   596  000036                     	ds	1
   597  000037                     _endereco:
   598                           	opt stack 0
   599  000037                     	ds	1
   600  000038                     _ind:
   601                           	opt stack 0
   602  000038                     	ds	1
   603  000039                     _k:
   604                           	opt stack 0
   605  000039                     	ds	1
   606  00003A                     _m:
   607                           	opt stack 0
   608  00003A                     	ds	1
   609  00003B                     _n:
   610                           	opt stack 0
   611  00003B                     	ds	1
   612  00003C                     _numquant:
   613                           	opt stack 0
   614  00003C                     	ds	1
   615  00003D                     _temp:
   616                           	opt stack 0
   617  00003D                     	ds	1
   618  00003E                     _valor:
   619                           	opt stack 0
   620  00003E                     	ds	1
   621  00003F                     _valorbcd:
   622                           	opt stack 0
   623  00003F                     	ds	1
   624  000040                     _y:
   625                           	opt stack 0
   626  000040                     	ds	1
   627  000041                     _z:
   628                           	opt stack 0
   629  000041                     	ds	1
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           postdec1	equ	0xFE5
   637                           fsr1l	equ	0xFE1
   638                           
   639                           	psect	dataCOMRAM
   640  000042                     __pdataCOMRAM:
   641                           	opt stack 0
   642  000042                     _R:
   643                           	opt stack 0
   644  000042                     	ds	2
   645  000044                     _Fe:
   646                           	opt stack 0
   647  000044                     	ds	1
   648  000045                     _G:
   649                           	opt stack 0
   650  000045                     	ds	1
   651  000046                     _REG:
   652                           	opt stack 0
   653  000046                     	ds	1
   654  000047                     _REGad:
   655                           	opt stack 0
   656  000047                     	ds	1
   657  000048                     _e:
   658                           	opt stack 0
   659  000048                     	ds	1
   660  000049                     _po:
   661                           	opt stack 0
   662  000049                     	ds	1
   663  00004A                     _rr:
   664                           	opt stack 0
   665  00004A                     	ds	1
   666  00004B                     _ru:
   667                           	opt stack 0
   668  00004B                     	ds	1
   669                           tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           postinc0	equ	0xFEE
   674                           wreg	equ	0xFE8
   675                           postdec1	equ	0xFE5
   676                           fsr1l	equ	0xFE1
   677                           
   678                           	psect	bssBANK0
   679  000060                     __pbssBANK0:
   680                           	opt stack 0
   681  000060                     _comand:
   682                           	opt stack 0
   683  000060                     	ds	30
   684  00007E                     _comando:
   685                           	opt stack 0
   686  00007E                     	ds	30
   687  00009C                     _incrementa:
   688                           	opt stack 0
   689  00009C                     	ds	4
   690  0000A0                     _flag:
   691                           	opt stack 0
   692  0000A0                     	ds	2
   693  0000A2                     _flagNM:
   694                           	opt stack 0
   695  0000A2                     	ds	2
   696  0000A4                     _flagstart:
   697                           	opt stack 0
   698  0000A4                     	ds	2
   699  0000A6                     _vorbei:
   700                           	opt stack 0
   701  0000A6                     	ds	2
   702                           tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           postinc0	equ	0xFEE
   707                           wreg	equ	0xFE8
   708                           postdec1	equ	0xFE5
   709                           fsr1l	equ	0xFE1
   710                           
   711                           	psect	cstackBANK0
   712  0000A8                     __pcstackBANK0:
   713                           	opt stack 0
   714  0000A8                     ?___lwdiv:
   715                           	opt stack 0
   716  0000A8                     ___lwdiv@dividend:
   717                           	opt stack 0
   718  0000A8                     taxa_serial@taxa:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0x0
   722  0000A8                     	ds	2
   723  0000AA                     ___lwdiv@divisor:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x2
   727  0000AA                     	ds	2
   728  0000AC                     ??_taxa_serial:
   729  0000AC                     ___lwdiv@counter:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x4
   733  0000AC                     	ds	1
   734  0000AD                     ___lwdiv@quotient:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x5
   738  0000AD                     	ds	2
   739  0000AF                     ?___lwmod:
   740                           	opt stack 0
   741  0000AF                     ___lwmod@dividend:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x7
   745  0000AF                     	ds	2
   746  0000B1                     ___lwmod@divisor:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x9
   750  0000B1                     	ds	2
   751  0000B3                     ??___lwmod:
   752                           
   753                           ; 0 bytes @ 0xB
   754  0000B3                     	ds	1
   755  0000B4                     ___lwmod@counter:
   756                           	opt stack 0
   757  0000B4                     taxa_serial@baud_sanusb:
   758                           	opt stack 0
   759                           
   760                           ; 4 bytes @ 0xC
   761  0000B4                     	ds	1
   762  0000B5                     sendnum@sannum:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0xD
   766  0000B5                     	ds	3
   767  0000B8                     ??_main:
   768                           
   769                           ; 0 bytes @ 0x10
   770  0000B8                     	ds	1
   771  0000B9                     _main$2576:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x11
   775  0000B9                     	ds	2
   776                           tblptru	equ	0xFF8
   777                           tblptrh	equ	0xFF7
   778                           tblptrl	equ	0xFF6
   779                           tablat	equ	0xFF5
   780                           postinc0	equ	0xFEE
   781                           wreg	equ	0xFE8
   782                           postdec1	equ	0xFE5
   783                           fsr1l	equ	0xFE1
   784                           
   785                           	psect	cstackCOMRAM
   786  000001                     __pcstackCOMRAM:
   787                           	opt stack 0
   788  000001                     ReadUSART@data:
   789                           	opt stack 0
   790  000001                     i2nivel_alto@pino:
   791                           	opt stack 0
   792  000001                     i2nivel_baixo@pino:
   793                           	opt stack 0
   794  000001                     i2inverte_saida@pino:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x0
   798  000001                     	ds	2
   799  000003                     ??i2_nivel_alto:
   800  000003                     ??i2_nivel_baixo:
   801  000003                     ??i2_inverte_saida:
   802                           
   803                           ; 0 bytes @ 0x2
   804  000003                     	ds	2
   805  000005                     ??_interrupcao:
   806                           
   807                           ; 0 bytes @ 0x4
   808  000005                     	ds	16
   809  000015                     ??_sputc:
   810  000015                     ?___awmod:
   811                           	opt stack 0
   812  000015                     ?___wmul:
   813                           	opt stack 0
   814  000015                     ?___lldiv:
   815                           	opt stack 0
   816  000015                     habilita_canal_AD@canal:
   817                           	opt stack 0
   818  000015                     escreve_eeprom@dado:
   819                           	opt stack 0
   820  000015                     le_eeprom@endereco:
   821                           	opt stack 0
   822  000015                     swputc@c:
   823                           	opt stack 0
   824  000015                     Delay1KTCYx@unit:
   825                           	opt stack 0
   826  000015                     habilita_interrupcao@tipo:
   827                           	opt stack 0
   828  000015                     nivel_alto@pino:
   829                           	opt stack 0
   830  000015                     nivel_baixo@pino:
   831                           	opt stack 0
   832  000015                     inverte_saida@pino:
   833                           	opt stack 0
   834  000015                     ___awmod@dividend:
   835                           	opt stack 0
   836  000015                     ___wmul@multiplier:
   837                           	opt stack 0
   838  000015                     ___lldiv@dividend:
   839                           	opt stack 0
   840                           
   841                           ; 4 bytes @ 0x14
   842  000015                     	ds	1
   843  000016                     escreve_eeprom@endereco:
   844                           	opt stack 0
   845  000016                     sendrw@st:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0x15
   849  000016                     	ds	1
   850  000017                     ??_habilita_interrupcao:
   851  000017                     ??_nivel_alto:
   852  000017                     ??_nivel_baixo:
   853  000017                     ??_inverte_saida:
   854  000017                     sputc@c:
   855                           	opt stack 0
   856  000017                     ___awmod@divisor:
   857                           	opt stack 0
   858  000017                     ___wmul@multiplicand:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x16
   862  000017                     	ds	1
   863  000018                     ??_sendrw:
   864  000018                     sendr@st:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x17
   868  000018                     	ds	1
   869  000019                     ??___awmod:
   870  000019                     ___wmul@product:
   871                           	opt stack 0
   872  000019                     ___lldiv@divisor:
   873                           	opt stack 0
   874                           
   875                           ; 4 bytes @ 0x18
   876  000019                     	ds	1
   877  00001A                     ??_sendr:
   878  00001A                     ___awmod@counter:
   879                           	opt stack 0
   880                           
   881                           ; 1 bytes @ 0x19
   882  00001A                     	ds	1
   883  00001B                     ___awmod@sign:
   884                           	opt stack 0
   885  00001B                     tempo_ms@i:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x1A
   889  00001B                     	ds	2
   890  00001D                     ??___lldiv:
   891  00001D                     tempo_ms@k:
   892                           	opt stack 0
   893                           
   894                           ; 2 bytes @ 0x1C
   895  00001D                     	ds	1
   896  00001E                     ___lldiv@quotient:
   897                           	opt stack 0
   898                           
   899                           ; 4 bytes @ 0x1D
   900  00001E                     	ds	1
   901  00001F                     ??_bt_ini:
   902  00001F                     ?_le_AD10bits:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x1E
   906  00001F                     	ds	2
   907  000021                     le_AD10bits@conv:
   908                           	opt stack 0
   909                           
   910                           ; 1 bytes @ 0x20
   911  000021                     	ds	1
   912  000022                     ??___lwdiv:
   913  000022                     ___lldiv@counter:
   914                           	opt stack 0
   915                           
   916                           ; 1 bytes @ 0x21
   917  000022                     	ds	1
   918  000023                     tblptru	equ	0xFF8
   919                           tblptrh	equ	0xFF7
   920                           tblptrl	equ	0xFF6
   921                           tablat	equ	0xFF5
   922                           postinc0	equ	0xFEE
   923                           wreg	equ	0xFE8
   924                           postdec1	equ	0xFE5
   925                           fsr1l	equ	0xFE1
   926                           
   927                           ; 0 bytes @ 0x22
   928 ;;
   929 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   930 ;;
   931 ;; *************** function _main *****************
   932 ;; Defined at:
   933 ;;		line 71 in file "main.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;		None               void
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   947 ;;      Params:         0       0       0       0       0       0       0       0       0
   948 ;;      Locals:         0       2       0       0       0       0       0       0       0
   949 ;;      Temps:          0       1       0       0       0       0       0       0       0
   950 ;;      Totals:         0       3       0       0       0       0       0       0       0
   951 ;;Total ram usage:        3 bytes
   952 ;; Hardware stack levels required when called:    8
   953 ;; This function calls:
   954 ;;		___lwdiv
   955 ;;		___wmul
   956 ;;		_bt_ini
   957 ;;		_clock_int_48MHz
   958 ;;		_habilita_canal_AD
   959 ;;		_habilita_interrupcao
   960 ;;		_inverte_saida
   961 ;;		_le_AD10bits
   962 ;;		_sendnum
   963 ;;		_sendrw
   964 ;;		_taxa_serial
   965 ;;		_tempo_ms
   966 ;; This function is called by:
   967 ;;		Startup code after reset
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text0
   972  0073BC                     __ptext0:
   973                           	opt stack 0
   974  0073BC                     _main:
   975                           	opt stack 23
   976                           
   977                           ;main.c: 73: clock_int_48MHz();
   978                           
   979                           ;incstack = 0
   980  0073BC  ECE8  F032         	call	_clock_int_48MHz	;wreg free
   981                           
   982                           ;main.c: 74: habilita_interrupcao(0x9D20);
   983  0073C0  0E9D               	movlw	157
   984  0073C2  6E16               	movwf	habilita_interrupcao@tipo+1,c
   985  0073C4  0E20               	movlw	32
   986  0073C6  6E15               	movwf	habilita_interrupcao@tipo,c
   987  0073C8  EC09  F035         	call	_habilita_interrupcao	;wreg free
   988                           
   989                           ;main.c: 75: taxa_serial(9600);
   990  0073CC  0E80               	movlw	128
   991  0073CE  0100               	movlb	0	; () banked
   992  0073D0  0100               	movlb	0	; () banked
   993  0073D2  6FA8               	movwf	taxa_serial@taxa& (0+255),b
   994  0073D4  0E25               	movlw	37
   995  0073D6  0100               	movlb	0	; () banked
   996  0073D8  6FA9               	movwf	(taxa_serial@taxa+1)& (0+255),b
   997  0073DA  0E00               	movlw	0
   998  0073DC  0100               	movlb	0	; () banked
   999  0073DE  6FAA               	movwf	(taxa_serial@taxa+2)& (0+255),b
  1000  0073E0  0E00               	movlw	0
  1001  0073E2  0100               	movlb	0	; () banked
  1002  0073E4  6FAB               	movwf	(taxa_serial@taxa+3)& (0+255),b
  1003  0073E6  ECB9  F034         	call	_taxa_serial	;wreg free
  1004                           
  1005                           ;main.c: 76: habilita_canal_AD(0x0D);
  1006  0073EA  0E0D               	movlw	13
  1007  0073EC  ECB2  F031         	call	_habilita_canal_AD
  1008                           
  1009                           ;main.c: 77: bt_ini();
  1010  0073F0  EC31  F03C         	call	_bt_ini	;wreg free
  1011                           
  1012                           ;main.c: 79: T0CON =0B11000001;
  1013  0073F4  0EC1               	movlw	193
  1014  0073F6  6ED5               	movwf	4053,c	;volatile
  1015                           
  1016                           ;main.c: 80: TMR0L = 16;
  1017  0073F8  0E10               	movlw	16
  1018  0073FA  6ED6               	movwf	4054,c	;volatile
  1019                           
  1020                           ;main.c: 81: RCONbits.IPEN = 1;
  1021  0073FC  8ED0               	bsf	4048,7,c	;volatile
  1022                           
  1023                           ;main.c: 82: INTCONbits.GIEH = 1;
  1024  0073FE  8EF2               	bsf	intcon,7,c	;volatile
  1025                           
  1026                           ;main.c: 83: INTCONbits.TMR0IE = 1;
  1027  007400  8AF2               	bsf	intcon,5,c	;volatile
  1028  007402                     l5005:
  1029                           
  1030                           ;main.c: 86: if (PORTEbits.RE3==0){asm(" reset");}
  1031  007402  A684               	btfss	3972,3,c	;volatile
  1032  007404  00FF               	reset		;# 
  1033                           
  1034                           ;main.c: 87: if (envia){
  1035  007406  5028               	movf	_envia+1,w,c
  1036  007408  1027               	iorwf	_envia,w,c
  1037  00740A  B4D8               	btfsc	status,2,c
  1038  00740C  D093               	goto	l5053
  1039                           
  1040                           ;main.c: 88: inverte_saida(31759);tempo_ms (500);
  1041  00740E  0E7C               	movlw	124
  1042  007410  6E16               	movwf	inverte_saida@pino+1,c
  1043  007412  0E0F               	movlw	15
  1044  007414  6E15               	movwf	inverte_saida@pino,c
  1045  007416  EC31  F036         	call	_inverte_saida	;wreg free
  1046  00741A  0E01               	movlw	1
  1047  00741C  6E1C               	movwf	tempo_ms@i+1,c
  1048  00741E  0EF4               	movlw	244
  1049  007420  6E1B               	movwf	tempo_ms@i,c
  1050  007422  EC98  F032         	call	_tempo_ms	;wreg free
  1051                           
  1052                           ;main.c: 89: sendrw((char *)"https://docs.google.com/forms/d/1PZOqjnitER0m03Ix4r9gDBqhp7
      +                          Xs1YrPmjLymE2VWAU/formResponse?ifq&entry.962023089=");
  1053  007426  0E7F               	movlw	high STR_1
  1054  007428  6E17               	movwf	sendrw@st+1,c
  1055  00742A  0E46               	movlw	low STR_1
  1056  00742C  6E16               	movwf	sendrw@st,c
  1057  00742E  EC14  F033         	call	_sendrw	;wreg free
  1058                           
  1059                           ;main.c: 90: sendnum(le_AD10bits(0));
  1060  007432  0E00               	movlw	0
  1061  007434  EC25  F034         	call	_le_AD10bits
  1062  007438  C01F  F0B5         	movff	?_le_AD10bits,sendnum@sannum
  1063  00743C  C020  F0B6         	movff	?_le_AD10bits+1,sendnum@sannum+1
  1064  007440  EC1A  F039         	call	_sendnum	;wreg free
  1065                           
  1066                           ;main.c: 91: sendrw((char *)"&entry.1468266733=");
  1067  007444  0E7F               	movlw	high STR_2
  1068  007446  6E17               	movwf	sendrw@st+1,c
  1069  007448  0EC8               	movlw	low STR_2
  1070  00744A  6E16               	movwf	sendrw@st,c
  1071  00744C  EC14  F033         	call	_sendrw	;wreg free
  1072                           
  1073                           ;main.c: 92: temperatura=(420*le_AD10bits(1))/1023;
  1074  007450  0E01               	movlw	1
  1075  007452  EC25  F034         	call	_le_AD10bits
  1076  007456  C01F  F0B9         	movff	?_le_AD10bits,_main$2576
  1077  00745A  C020  F0BA         	movff	?_le_AD10bits+1,_main$2576+1
  1078                           
  1079                           ;main.c: 92: temperatura=(420*le_AD10bits(1))/1023;
  1080  00745E  0E01               	movlw	1
  1081  007460  6E18               	movwf	___wmul@multiplicand+1,c
  1082  007462  0EA4               	movlw	164
  1083  007464  6E17               	movwf	___wmul@multiplicand,c
  1084  007466  C0B9  F015         	movff	_main$2576,___wmul@multiplier
  1085  00746A  C0BA  F016         	movff	_main$2576+1,___wmul@multiplier+1
  1086  00746E  ECFB  F031         	call	___wmul	;wreg free
  1087  007472  C015  F0A8         	movff	?___wmul,___lwdiv@dividend
  1088  007476  C016  F0A9         	movff	?___wmul+1,___lwdiv@dividend+1
  1089  00747A  0E03               	movlw	3
  1090  00747C  0100               	movlb	0	; () banked
  1091  00747E  0100               	movlb	0	; () banked
  1092  007480  6FAB               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1093  007482  0EFF               	movlw	255
  1094  007484  0100               	movlb	0	; () banked
  1095  007486  6FAA               	movwf	___lwdiv@divisor& (0+255),b
  1096  007488  EC5B  F035         	call	___lwdiv	;wreg free
  1097  00748C  0100               	movlb	0	; () banked
  1098  00748E  C0A8  F02F         	movff	?___lwdiv,_temperatura
  1099  007492  0100               	movlb	0	; () banked
  1100  007494  C0A9  F030         	movff	?___lwdiv+1,_temperatura+1
  1101                           
  1102                           ;main.c: 93: sendnum(temperatura);
  1103  007498  C02F  F0B5         	movff	_temperatura,sendnum@sannum
  1104  00749C  C030  F0B6         	movff	_temperatura+1,sendnum@sannum+1
  1105  0074A0  EC1A  F039         	call	_sendnum	;wreg free
  1106                           
  1107                           ;main.c: 94: sendrw((char *)"&entry.1609904957=");
  1108  0074A4  0E7F               	movlw	high STR_3
  1109  0074A6  6E17               	movwf	sendrw@st+1,c
  1110  0074A8  0EDB               	movlw	low STR_3
  1111  0074AA  6E16               	movwf	sendrw@st,c
  1112  0074AC  EC14  F033         	call	_sendrw	;wreg free
  1113                           
  1114                           ;main.c: 95: sendnum(41);
  1115  0074B0  0E00               	movlw	0
  1116  0074B2  0100               	movlb	0	; () banked
  1117  0074B4  0100               	movlb	0	; () banked
  1118  0074B6  6FB6               	movwf	(sendnum@sannum+1)& (0+255),b
  1119  0074B8  0E29               	movlw	41
  1120  0074BA  0100               	movlb	0	; () banked
  1121  0074BC  6FB5               	movwf	sendnum@sannum& (0+255),b
  1122  0074BE  EC1A  F039         	call	_sendnum	;wreg free
  1123                           
  1124                           ;main.c: 96: sendrw((char *)"&entry.1589284333=");
  1125  0074C2  0E7F               	movlw	high STR_4
  1126  0074C4  6E17               	movwf	sendrw@st+1,c
  1127  0074C6  0EB5               	movlw	low STR_4
  1128  0074C8  6E16               	movwf	sendrw@st,c
  1129  0074CA  EC14  F033         	call	_sendrw	;wreg free
  1130                           
  1131                           ;main.c: 97: sendnum(incrementa);
  1132  0074CE  C09C  F0B5         	movff	_incrementa,sendnum@sannum
  1133  0074D2  C09D  F0B6         	movff	_incrementa+1,sendnum@sannum+1
  1134  0074D6  EC1A  F039         	call	_sendnum	;wreg free
  1135                           
  1136                           ;main.c: 98: sendrw((char *)"&submit=Submit*");
  1137  0074DA  0E7F               	movlw	high STR_5
  1138  0074DC  6E17               	movwf	sendrw@st+1,c
  1139  0074DE  0EEE               	movlw	low STR_5
  1140  0074E0  6E16               	movwf	sendrw@st,c
  1141  0074E2  EC14  F033         	call	_sendrw	;wreg free
  1142                           
  1143                           ;main.c: 99: for (i=0;i<5;i++)
  1144  0074E6  0E00               	movlw	0
  1145  0074E8  6E2E               	movwf	_i+1,c
  1146  0074EA  0E00               	movlw	0
  1147  0074EC  6E2D               	movwf	_i,c
  1148  0074EE  0E05               	movlw	5
  1149  0074F0  5C2D               	subwf	_i,w,c
  1150  0074F2  0E00               	movlw	0
  1151  0074F4  582E               	subwfb	_i+1,w,c
  1152  0074F6  B0D8               	btfsc	status,0,c
  1153  0074F8  D019               	goto	l5051
  1154                           
  1155                           ;main.c: 100: {if (envia){
  1156  0074FA  5028               	movf	_envia+1,w,c
  1157  0074FC  1027               	iorwf	_envia,w,c
  1158  0074FE  B4D8               	btfsc	status,2,c
  1159  007500  D012               	goto	l5047
  1160                           
  1161                           ;main.c: 101: n=0; tempo_ms(100); inverte_saida(31759);}}
  1162  007502  0100               	movlb	0	; () banked
  1163  007504  6FB8               	movwf	??_main& (0+255),b
  1164  007506  0E00               	movlw	0
  1165  007508  6E3B               	movwf	_n,c
  1166  00750A  0100               	movlb	0	; () banked
  1167  00750C  51B8               	movf	??_main& (0+255),w,b
  1168                           
  1169                           ; BSR set to: 0
  1170  00750E  0E00               	movlw	0
  1171  007510  6E1C               	movwf	tempo_ms@i+1,c
  1172  007512  0E64               	movlw	100
  1173  007514  6E1B               	movwf	tempo_ms@i,c
  1174  007516  EC98  F032         	call	_tempo_ms	;wreg free
  1175  00751A  0E7C               	movlw	124
  1176  00751C  6E16               	movwf	inverte_saida@pino+1,c
  1177  00751E  0E0F               	movlw	15
  1178  007520  6E15               	movwf	inverte_saida@pino,c
  1179  007522  EC31  F036         	call	_inverte_saida	;wreg free
  1180  007526                     l5047:
  1181  007526  4A2D               	infsnz	_i,f,c
  1182  007528  2A2E               	incf	_i+1,f,c
  1183  00752A  D7E1               	goto	L1
  1184  00752C                     l5051:
  1185                           
  1186                           ;main.c: 104: envia=0;
  1187  00752C  0E00               	movlw	0
  1188  00752E  6E28               	movwf	_envia+1,c
  1189  007530  0E00               	movlw	0
  1190  007532  6E27               	movwf	_envia,c
  1191  007534                     l5053:
  1192                           
  1193                           ;main.c: 105: }
  1194                           ;main.c: 107: ++incrementa;
  1195  007534  0E01               	movlw	1
  1196  007536  0100               	movlb	0	; () banked
  1197  007538  0100               	movlb	0	; () banked
  1198  00753A  279C               	addwf	_incrementa& (0+255),f,b
  1199  00753C  0E00               	movlw	0
  1200  00753E  0100               	movlb	0	; () banked
  1201  007540  239D               	addwfc	(_incrementa+1)& (0+255),f,b
  1202  007542  0E00               	movlw	0
  1203  007544  0100               	movlb	0	; () banked
  1204  007546  239E               	addwfc	(_incrementa+2)& (0+255),f,b
  1205  007548  0E00               	movlw	0
  1206  00754A  0100               	movlb	0	; () banked
  1207  00754C  239F               	addwfc	(_incrementa+3)& (0+255),f,b
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;main.c: 108: n=0; tempo_ms(300);
  1211  00754E  0100               	movlb	0	; () banked
  1212  007550  6FB8               	movwf	??_main& (0+255),b
  1213  007552  0E00               	movlw	0
  1214  007554  6E3B               	movwf	_n,c
  1215  007556  0100               	movlb	0	; () banked
  1216  007558  51B8               	movf	??_main& (0+255),w,b
  1217                           
  1218                           ; BSR set to: 0
  1219  00755A  0E01               	movlw	1
  1220  00755C  6E1C               	movwf	tempo_ms@i+1,c
  1221  00755E  0E2C               	movlw	44
  1222  007560  6E1B               	movwf	tempo_ms@i,c
  1223  007562  EC98  F032         	call	_tempo_ms	;wreg free
  1224  007566  D74D               	goto	l5005
  1225  007568                     __end_of_main:
  1226                           	opt stack 0
  1227                           tblptru	equ	0xFF8
  1228                           tblptrh	equ	0xFF7
  1229                           tblptrl	equ	0xFF6
  1230                           tablat	equ	0xFF5
  1231                           intcon	equ	0xFF2
  1232                           postinc0	equ	0xFEE
  1233                           wreg	equ	0xFE8
  1234                           postdec1	equ	0xFE5
  1235                           fsr1l	equ	0xFE1
  1236                           status	equ	0xFD8
  1237                           
  1238 ;; *************** function _taxa_serial *****************
  1239 ;; Defined at:
  1240 ;;		line 446 in file "SanUSB48X.h"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  taxa            4    0[BANK0 ] unsigned long 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  baud_sanusb     4   12[BANK0 ] unsigned long 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;		None               void
  1247 ;; Registers used:
  1248 ;;		wreg, status,2, status,0, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1254 ;;      Params:         0       4       0       0       0       0       0       0       0
  1255 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1256 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1257 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1258 ;;Total ram usage:       16 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    3
  1261 ;; This function calls:
  1262 ;;		___lldiv
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text1
  1269  006972                     __ptext1:
  1270                           	opt stack 0
  1271  006972                     _taxa_serial:
  1272                           	opt stack 27
  1273                           
  1274                           ;SanUSB48X.h: 447: unsigned long baud_sanusb;
  1275                           ;SanUSB48X.h: 448: TRISCbits.TRISC7=1;
  1276                           
  1277                           ;incstack = 0
  1278  006972  8E94               	bsf	3988,7,c	;volatile
  1279                           
  1280                           ;SanUSB48X.h: 449: TRISCbits.TRISC6=0;
  1281  006974  9C94               	bcf	3988,6,c	;volatile
  1282                           
  1283                           ;SanUSB48X.h: 450: TXSTA = 0x24;
  1284  006976  0E24               	movlw	36
  1285  006978  6EAC               	movwf	4012,c	;volatile
  1286                           
  1287                           ;SanUSB48X.h: 451: RCSTA = 0x90;
  1288  00697A  0E90               	movlw	144
  1289  00697C  6EAB               	movwf	4011,c	;volatile
  1290                           
  1291                           ;SanUSB48X.h: 452: BAUDCON = 0x08;
  1292  00697E  0E08               	movlw	8
  1293  006980  6EB8               	movwf	4024,c	;volatile
  1294                           
  1295                           ;SanUSB48X.h: 454: baud_sanusb =REG+((48000000/4)/ taxa) - 1;
  1296  006982  0E00               	movlw	0
  1297  006984  6E15               	movwf	___lldiv@dividend,c
  1298  006986  0E1B               	movlw	27
  1299  006988  6E16               	movwf	___lldiv@dividend+1,c
  1300  00698A  0EB7               	movlw	183
  1301  00698C  6E17               	movwf	___lldiv@dividend+2,c
  1302  00698E  0E00               	movlw	0
  1303  006990  6E18               	movwf	___lldiv@dividend+3,c
  1304  006992  C0A8  F019         	movff	taxa_serial@taxa,___lldiv@divisor
  1305  006996  C0A9  F01A         	movff	taxa_serial@taxa+1,___lldiv@divisor+1
  1306  00699A  C0AA  F01B         	movff	taxa_serial@taxa+2,___lldiv@divisor+2
  1307  00699E  C0AB  F01C         	movff	taxa_serial@taxa+3,___lldiv@divisor+3
  1308  0069A2  EC9D  F033         	call	___lldiv	;wreg free
  1309  0069A6  C015  F0AC         	movff	?___lldiv,??_taxa_serial
  1310  0069AA  C016  F0AD         	movff	?___lldiv+1,??_taxa_serial+1
  1311  0069AE  C017  F0AE         	movff	?___lldiv+2,??_taxa_serial+2
  1312  0069B2  C018  F0AF         	movff	?___lldiv+3,??_taxa_serial+3
  1313  0069B6  5046               	movf	_REG,w,c
  1314  0069B8  0100               	movlb	0	; () banked
  1315  0069BA  25AC               	addwf	??_taxa_serial& (0+255),w,b
  1316  0069BC  0100               	movlb	0	; () banked
  1317  0069BE  6FB0               	movwf	(??_taxa_serial+4)& (0+255),b
  1318  0069C0  0E00               	movlw	0
  1319  0069C2  0100               	movlb	0	; () banked
  1320  0069C4  21AD               	addwfc	(??_taxa_serial+1)& (0+255),w,b
  1321  0069C6  0100               	movlb	0	; () banked
  1322  0069C8  6FB1               	movwf	(??_taxa_serial+5)& (0+255),b
  1323  0069CA  0E00               	movlw	0
  1324  0069CC  0100               	movlb	0	; () banked
  1325  0069CE  21AE               	addwfc	(??_taxa_serial+2)& (0+255),w,b
  1326  0069D0  0100               	movlb	0	; () banked
  1327  0069D2  6FB2               	movwf	(??_taxa_serial+6)& (0+255),b
  1328  0069D4  0E00               	movlw	0
  1329  0069D6  0100               	movlb	0	; () banked
  1330  0069D8  21AF               	addwfc	(??_taxa_serial+3)& (0+255),w,b
  1331  0069DA  0100               	movlb	0	; () banked
  1332  0069DC  6FB3               	movwf	(??_taxa_serial+7)& (0+255),b
  1333  0069DE  0EFF               	movlw	255
  1334  0069E0  0100               	movlb	0	; () banked
  1335  0069E2  25B0               	addwf	(??_taxa_serial+4)& (0+255),w,b
  1336  0069E4  0100               	movlb	0	; () banked
  1337  0069E6  0100               	movlb	0	; () banked
  1338  0069E8  6FB4               	movwf	taxa_serial@baud_sanusb& (0+255),b
  1339  0069EA  0EFF               	movlw	255
  1340  0069EC  0100               	movlb	0	; () banked
  1341  0069EE  21B1               	addwfc	(??_taxa_serial+5)& (0+255),w,b
  1342  0069F0  0100               	movlb	0	; () banked
  1343  0069F2  6FB5               	movwf	(taxa_serial@baud_sanusb+1)& (0+255),b
  1344  0069F4  0EFF               	movlw	255
  1345  0069F6  0100               	movlb	0	; () banked
  1346  0069F8  21B2               	addwfc	(??_taxa_serial+6)& (0+255),w,b
  1347  0069FA  0100               	movlb	0	; () banked
  1348  0069FC  6FB6               	movwf	(taxa_serial@baud_sanusb+2)& (0+255),b
  1349  0069FE  0EFF               	movlw	255
  1350  006A00  0100               	movlb	0	; () banked
  1351  006A02  21B3               	addwfc	(??_taxa_serial+7)& (0+255),w,b
  1352  006A04  0100               	movlb	0	; () banked
  1353  006A06  6FB7               	movwf	(taxa_serial@baud_sanusb+3)& (0+255),b
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;SanUSB48X.h: 455: SPBRGH = (unsigned char)(baud_sanusb >> 8);
  1357  006A08  C0B5  FFB0         	movff	taxa_serial@baud_sanusb+1,4016	;volatile
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;SanUSB48X.h: 456: SPBRG = (unsigned char)baud_sanusb;
  1361  006A0C  C0B4  FFAF         	movff	taxa_serial@baud_sanusb,4015	;volatile
  1362                           
  1363                           ; BSR set to: 0
  1364  006A10  0012               	return	
  1365  006A12                     __end_of_taxa_serial:
  1366                           	opt stack 0
  1367                           tblptru	equ	0xFF8
  1368                           tblptrh	equ	0xFF7
  1369                           tblptrl	equ	0xFF6
  1370                           tablat	equ	0xFF5
  1371                           intcon	equ	0xFF2
  1372                           postinc0	equ	0xFEE
  1373                           wreg	equ	0xFE8
  1374                           postdec1	equ	0xFE5
  1375                           fsr1l	equ	0xFE1
  1376                           status	equ	0xFD8
  1377                           
  1378 ;; *************** function ___lldiv *****************
  1379 ;; Defined at:
  1380 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lldiv.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  dividend        4   20[COMRAM] unsigned long 
  1383 ;;  divisor         4   24[COMRAM] unsigned long 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  quotient        4   29[COMRAM] unsigned long 
  1386 ;;  counter         1   33[COMRAM] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  4   20[COMRAM] unsigned long 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1396 ;;      Params:         8       0       0       0       0       0       0       0       0
  1397 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1398 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1399 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1400 ;;Total ram usage:       14 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    2
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_taxa_serial
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text2
  1411  00673A                     __ptext2:
  1412                           	opt stack 0
  1413  00673A                     ___lldiv:
  1414                           	opt stack 27
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;incstack = 0
  1418  00673A  0E00               	movlw	0
  1419  00673C  6E1E               	movwf	___lldiv@quotient,c
  1420  00673E  0E00               	movlw	0
  1421  006740  6E1F               	movwf	___lldiv@quotient+1,c
  1422  006742  0E00               	movlw	0
  1423  006744  6E20               	movwf	___lldiv@quotient+2,c
  1424  006746  0E00               	movlw	0
  1425  006748  6E21               	movwf	___lldiv@quotient+3,c
  1426  00674A  501C               	movf	___lldiv@divisor+3,w,c
  1427  00674C  1019               	iorwf	___lldiv@divisor,w,c
  1428  00674E  101A               	iorwf	___lldiv@divisor+1,w,c
  1429  006750  101B               	iorwf	___lldiv@divisor+2,w,c
  1430  006752  B4D8               	btfsc	status,2,c
  1431  006754  D02C               	goto	l1078
  1432  006756  6E1D               	movwf	??___lldiv& (0+255),c
  1433  006758  0E01               	movlw	1
  1434  00675A  6E22               	movwf	___lldiv@counter,c
  1435  00675C  501D               	movf	??___lldiv& (0+255),w,c
  1436  00675E  D006               	goto	l4449
  1437  006760                     l4447:
  1438  006760  90D8               	bcf	status,0,c
  1439  006762  3619               	rlcf	___lldiv@divisor,f,c
  1440  006764  361A               	rlcf	___lldiv@divisor+1,f,c
  1441  006766  361B               	rlcf	___lldiv@divisor+2,f,c
  1442  006768  361C               	rlcf	___lldiv@divisor+3,f,c
  1443  00676A  2A22               	incf	___lldiv@counter,f,c
  1444  00676C                     l4449:
  1445  00676C  AE1C               	btfss	___lldiv@divisor+3,7,c
  1446  00676E  D7F8               	goto	l4447
  1447  006770                     l4451:
  1448  006770  90D8               	bcf	status,0,c
  1449  006772  361E               	rlcf	___lldiv@quotient,f,c
  1450  006774  361F               	rlcf	___lldiv@quotient+1,f,c
  1451  006776  3620               	rlcf	___lldiv@quotient+2,f,c
  1452  006778  3621               	rlcf	___lldiv@quotient+3,f,c
  1453  00677A  5019               	movf	___lldiv@divisor,w,c
  1454  00677C  5C15               	subwf	___lldiv@dividend,w,c
  1455  00677E  501A               	movf	___lldiv@divisor+1,w,c
  1456  006780  5816               	subwfb	___lldiv@dividend+1,w,c
  1457  006782  501B               	movf	___lldiv@divisor+2,w,c
  1458  006784  5817               	subwfb	___lldiv@dividend+2,w,c
  1459  006786  501C               	movf	___lldiv@divisor+3,w,c
  1460  006788  5818               	subwfb	___lldiv@dividend+3,w,c
  1461  00678A  A0D8               	btfss	status,0,c
  1462  00678C  D009               	goto	l4459
  1463  00678E  5019               	movf	___lldiv@divisor,w,c
  1464  006790  5E15               	subwf	___lldiv@dividend,f,c
  1465  006792  501A               	movf	___lldiv@divisor+1,w,c
  1466  006794  5A16               	subwfb	___lldiv@dividend+1,f,c
  1467  006796  501B               	movf	___lldiv@divisor+2,w,c
  1468  006798  5A17               	subwfb	___lldiv@dividend+2,f,c
  1469  00679A  501C               	movf	___lldiv@divisor+3,w,c
  1470  00679C  5A18               	subwfb	___lldiv@dividend+3,f,c
  1471  00679E  801E               	bsf	___lldiv@quotient,0,c
  1472  0067A0                     l4459:
  1473  0067A0  90D8               	bcf	status,0,c
  1474  0067A2  321C               	rrcf	___lldiv@divisor+3,f,c
  1475  0067A4  321B               	rrcf	___lldiv@divisor+2,f,c
  1476  0067A6  321A               	rrcf	___lldiv@divisor+1,f,c
  1477  0067A8  3219               	rrcf	___lldiv@divisor,f,c
  1478  0067AA  2E22               	decfsz	___lldiv@counter,f,c
  1479  0067AC  D7E1               	goto	l4451
  1480  0067AE                     l1078:
  1481  0067AE  C01E  F015         	movff	___lldiv@quotient,?___lldiv
  1482  0067B2  C01F  F016         	movff	___lldiv@quotient+1,?___lldiv+1
  1483  0067B6  C020  F017         	movff	___lldiv@quotient+2,?___lldiv+2
  1484  0067BA  C021  F018         	movff	___lldiv@quotient+3,?___lldiv+3
  1485  0067BE  0012               	return	
  1486  0067C0                     __end_of___lldiv:
  1487                           	opt stack 0
  1488                           tblptru	equ	0xFF8
  1489                           tblptrh	equ	0xFF7
  1490                           tblptrl	equ	0xFF6
  1491                           tablat	equ	0xFF5
  1492                           intcon	equ	0xFF2
  1493                           postinc0	equ	0xFEE
  1494                           wreg	equ	0xFE8
  1495                           postdec1	equ	0xFE5
  1496                           fsr1l	equ	0xFE1
  1497                           status	equ	0xFD8
  1498                           
  1499 ;; *************** function _sendrw *****************
  1500 ;; Defined at:
  1501 ;;		line 478 in file "SanUSB48X.h"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  st              2   21[COMRAM] PTR unsigned char 
  1504 ;;		 -> STR_5(16), STR_4(19), STR_3(19), STR_2(19), 
  1505 ;;		 -> STR_1(111), 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;		None               void
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1517 ;;      Params:         2       0       0       0       0       0       0       0       0
  1518 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1519 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1520 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1521 ;;Total ram usage:        4 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    3
  1524 ;; This function calls:
  1525 ;;		_swputc
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text3
  1532  006628                     __ptext3:
  1533                           	opt stack 0
  1534  006628                     _sendrw:
  1535                           	opt stack 27
  1536                           
  1537                           ;SanUSB48X.h: 479: for(k=0;st[k]!='\0';k++) {swputc(st[k]);}
  1538                           
  1539                           ;incstack = 0
  1540  006628  6E18               	movwf	??_sendrw& (0+255),c
  1541  00662A  0E00               	movlw	0
  1542  00662C  6E39               	movwf	_k,c
  1543  00662E  5018               	movf	??_sendrw& (0+255),w,c
  1544  006630  D013               	goto	l4581
  1545  006632                     l4577:
  1546  006632  5039               	movf	_k,w,c
  1547  006634  0D01               	mullw	1
  1548  006636  C016  F018         	movff	sendrw@st,??_sendrw
  1549  00663A  C017  F019         	movff	sendrw@st+1,??_sendrw+1
  1550  00663E  50F3               	movf	prodl,w,c
  1551  006640  2618               	addwf	??_sendrw,f,c
  1552  006642  50F4               	movf	prodh,w,c
  1553  006644  2219               	addwfc	??_sendrw+1,f,c
  1554  006646  C018  FFF6         	movff	??_sendrw,tblptrl
  1555  00664A  C019  FFF7         	movff	??_sendrw+1,tblptrh
  1556  00664E  0008               	tblrd		*
  1557  006650  50F5               	movf	tablat,w,c
  1558  006652  ECA1  F031         	call	_swputc
  1559  006656  2A39               	incf	_k,f,c
  1560  006658                     l4581:
  1561  006658  5039               	movf	_k,w,c
  1562  00665A  0D01               	mullw	1
  1563  00665C  C016  F018         	movff	sendrw@st,??_sendrw
  1564  006660  C017  F019         	movff	sendrw@st+1,??_sendrw+1
  1565  006664  50F3               	movf	prodl,w,c
  1566  006666  2618               	addwf	??_sendrw,f,c
  1567  006668  50F4               	movf	prodh,w,c
  1568  00666A  2219               	addwfc	??_sendrw+1,f,c
  1569  00666C  C018  FFF6         	movff	??_sendrw,tblptrl
  1570  006670  C019  FFF7         	movff	??_sendrw+1,tblptrh
  1571  006674  0008               	tblrd		*
  1572  006676  50F5               	movf	tablat,w,c
  1573  006678  0900               	iorlw	0
  1574  00667A  B4D8               	btfsc	status,2,c
  1575  00667C  0012               	return	
  1576  00667E  D7D9               	goto	l4577
  1577  006680                     __end_of_sendrw:
  1578                           	opt stack 0
  1579                           tblptru	equ	0xFF8
  1580                           tblptrh	equ	0xFF7
  1581                           tblptrl	equ	0xFF6
  1582                           tablat	equ	0xFF5
  1583                           prodh	equ	0xFF4
  1584                           prodl	equ	0xFF3
  1585                           intcon	equ	0xFF2
  1586                           postinc0	equ	0xFEE
  1587                           wreg	equ	0xFE8
  1588                           postdec1	equ	0xFE5
  1589                           fsr1l	equ	0xFE1
  1590                           status	equ	0xFD8
  1591                           
  1592 ;; *************** function _sendnum *****************
  1593 ;; Defined at:
  1594 ;;		line 493 in file "SanUSB48X.h"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  sannum          2   13[BANK0 ] unsigned int 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;		None               void
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1608 ;;      Params:         0       2       0       0       0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1611 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1612 ;;Total ram usage:        2 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    3
  1615 ;; This function calls:
  1616 ;;		___lwdiv
  1617 ;;		___lwmod
  1618 ;;		_swputc
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text4
  1625  007234                     __ptext4:
  1626                           	opt stack 0
  1627  007234                     _sendnum:
  1628                           	opt stack 27
  1629                           
  1630                           ;SanUSB48X.h: 495: if(sannum > 9999) {
  1631                           
  1632                           ;incstack = 0
  1633  007234  0E10               	movlw	16
  1634  007236  0100               	movlb	0	; () banked
  1635  007238  0100               	movlb	0	; () banked
  1636  00723A  5DB5               	subwf	sendnum@sannum& (0+255),w,b
  1637  00723C  0E27               	movlw	39
  1638  00723E  0100               	movlb	0	; () banked
  1639  007240  59B6               	subwfb	(sendnum@sannum+1)& (0+255),w,b
  1640  007242  A0D8               	btfss	status,0,c
  1641  007244  D023               	goto	l4587
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;SanUSB48X.h: 496: swputc(((sannum / 10000) % 10)+REG+0x30);
  1645  007246  0E27               	movlw	39
  1646  007248  0100               	movlb	0	; () banked
  1647  00724A  0100               	movlb	0	; () banked
  1648  00724C  6FAB               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1649  00724E  0E10               	movlw	16
  1650  007250  0100               	movlb	0	; () banked
  1651  007252  6FAA               	movwf	___lwdiv@divisor& (0+255),b
  1652  007254  C0B5  F0A8         	movff	sendnum@sannum,___lwdiv@dividend
  1653  007258  C0B6  F0A9         	movff	sendnum@sannum+1,___lwdiv@dividend+1
  1654  00725C  EC5B  F035         	call	___lwdiv	;wreg free
  1655  007260  0100               	movlb	0	; () banked
  1656  007262  C0A8  F0AF         	movff	?___lwdiv,___lwmod@dividend
  1657  007266  0100               	movlb	0	; () banked
  1658  007268  C0A9  F0B0         	movff	?___lwdiv+1,___lwmod@dividend+1
  1659  00726C  0E00               	movlw	0
  1660  00726E  0100               	movlb	0	; () banked
  1661  007270  0100               	movlb	0	; () banked
  1662  007272  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
  1663  007274  0E0A               	movlw	10
  1664  007276  0100               	movlb	0	; () banked
  1665  007278  6FB1               	movwf	___lwmod@divisor& (0+255),b
  1666  00727A  ECE0  F033         	call	___lwmod	;wreg free
  1667  00727E  0100               	movlb	0	; () banked
  1668  007280  0100               	movlb	0	; () banked
  1669  007282  51AF               	movf	?___lwmod& (0+255),w,b
  1670  007284  2446               	addwf	_REG,w,c
  1671  007286  0F30               	addlw	48
  1672  007288  ECA1  F031         	call	_swputc
  1673  00728C                     l4587:
  1674                           
  1675                           ;SanUSB48X.h: 497: }
  1676                           ;SanUSB48X.h: 498: if(sannum > 999) {
  1677  00728C  0EE8               	movlw	232
  1678  00728E  0100               	movlb	0	; () banked
  1679  007290  0100               	movlb	0	; () banked
  1680  007292  5DB5               	subwf	sendnum@sannum& (0+255),w,b
  1681  007294  0E03               	movlw	3
  1682  007296  0100               	movlb	0	; () banked
  1683  007298  59B6               	subwfb	(sendnum@sannum+1)& (0+255),w,b
  1684  00729A  A0D8               	btfss	status,0,c
  1685  00729C  D022               	goto	l4591
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;SanUSB48X.h: 499: swputc(((sannum / 1000) % 10)+0x30);
  1689  00729E  0E03               	movlw	3
  1690  0072A0  0100               	movlb	0	; () banked
  1691  0072A2  0100               	movlb	0	; () banked
  1692  0072A4  6FAB               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1693  0072A6  0EE8               	movlw	232
  1694  0072A8  0100               	movlb	0	; () banked
  1695  0072AA  6FAA               	movwf	___lwdiv@divisor& (0+255),b
  1696  0072AC  C0B5  F0A8         	movff	sendnum@sannum,___lwdiv@dividend
  1697  0072B0  C0B6  F0A9         	movff	sendnum@sannum+1,___lwdiv@dividend+1
  1698  0072B4  EC5B  F035         	call	___lwdiv	;wreg free
  1699  0072B8  0100               	movlb	0	; () banked
  1700  0072BA  C0A8  F0AF         	movff	?___lwdiv,___lwmod@dividend
  1701  0072BE  0100               	movlb	0	; () banked
  1702  0072C0  C0A9  F0B0         	movff	?___lwdiv+1,___lwmod@dividend+1
  1703  0072C4  0E00               	movlw	0
  1704  0072C6  0100               	movlb	0	; () banked
  1705  0072C8  0100               	movlb	0	; () banked
  1706  0072CA  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
  1707  0072CC  0E0A               	movlw	10
  1708  0072CE  0100               	movlb	0	; () banked
  1709  0072D0  6FB1               	movwf	___lwmod@divisor& (0+255),b
  1710  0072D2  ECE0  F033         	call	___lwmod	;wreg free
  1711  0072D6  0100               	movlb	0	; () banked
  1712  0072D8  0100               	movlb	0	; () banked
  1713  0072DA  51AF               	movf	?___lwmod& (0+255),w,b
  1714  0072DC  0F30               	addlw	48
  1715  0072DE  ECA1  F031         	call	_swputc
  1716  0072E2                     l4591:
  1717                           
  1718                           ;SanUSB48X.h: 500: }
  1719                           ;SanUSB48X.h: 501: if(sannum > 99) {
  1720  0072E2  0E64               	movlw	100
  1721  0072E4  0100               	movlb	0	; () banked
  1722  0072E6  0100               	movlb	0	; () banked
  1723  0072E8  5DB5               	subwf	sendnum@sannum& (0+255),w,b
  1724  0072EA  0E00               	movlw	0
  1725  0072EC  0100               	movlb	0	; () banked
  1726  0072EE  59B6               	subwfb	(sendnum@sannum+1)& (0+255),w,b
  1727  0072F0  A0D8               	btfss	status,0,c
  1728  0072F2  D023               	goto	l4595
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;SanUSB48X.h: 502: swputc(((sannum / 100) % 10)+REG+0x30);
  1732  0072F4  0E00               	movlw	0
  1733  0072F6  0100               	movlb	0	; () banked
  1734  0072F8  0100               	movlb	0	; () banked
  1735  0072FA  6FAB               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1736  0072FC  0E64               	movlw	100
  1737  0072FE  0100               	movlb	0	; () banked
  1738  007300  6FAA               	movwf	___lwdiv@divisor& (0+255),b
  1739  007302  C0B5  F0A8         	movff	sendnum@sannum,___lwdiv@dividend
  1740  007306  C0B6  F0A9         	movff	sendnum@sannum+1,___lwdiv@dividend+1
  1741  00730A  EC5B  F035         	call	___lwdiv	;wreg free
  1742  00730E  0100               	movlb	0	; () banked
  1743  007310  C0A8  F0AF         	movff	?___lwdiv,___lwmod@dividend
  1744  007314  0100               	movlb	0	; () banked
  1745  007316  C0A9  F0B0         	movff	?___lwdiv+1,___lwmod@dividend+1
  1746  00731A  0E00               	movlw	0
  1747  00731C  0100               	movlb	0	; () banked
  1748  00731E  0100               	movlb	0	; () banked
  1749  007320  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
  1750  007322  0E0A               	movlw	10
  1751  007324  0100               	movlb	0	; () banked
  1752  007326  6FB1               	movwf	___lwmod@divisor& (0+255),b
  1753  007328  ECE0  F033         	call	___lwmod	;wreg free
  1754  00732C  0100               	movlb	0	; () banked
  1755  00732E  0100               	movlb	0	; () banked
  1756  007330  51AF               	movf	?___lwmod& (0+255),w,b
  1757  007332  2446               	addwf	_REG,w,c
  1758  007334  0F30               	addlw	48
  1759  007336  ECA1  F031         	call	_swputc
  1760  00733A                     l4595:
  1761                           
  1762                           ;SanUSB48X.h: 503: }
  1763                           ;SanUSB48X.h: 504: if(sannum > 9) {
  1764  00733A  0E0A               	movlw	10
  1765  00733C  0100               	movlb	0	; () banked
  1766  00733E  0100               	movlb	0	; () banked
  1767  007340  5DB5               	subwf	sendnum@sannum& (0+255),w,b
  1768  007342  0E00               	movlw	0
  1769  007344  0100               	movlb	0	; () banked
  1770  007346  59B6               	subwfb	(sendnum@sannum+1)& (0+255),w,b
  1771  007348  A0D8               	btfss	status,0,c
  1772  00734A  D023               	goto	l430
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;SanUSB48X.h: 505: swputc(((sannum / 10) % 10)+REG+0x30);
  1776  00734C  0E00               	movlw	0
  1777  00734E  0100               	movlb	0	; () banked
  1778  007350  0100               	movlb	0	; () banked
  1779  007352  6FAB               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1780  007354  0E0A               	movlw	10
  1781  007356  0100               	movlb	0	; () banked
  1782  007358  6FAA               	movwf	___lwdiv@divisor& (0+255),b
  1783  00735A  C0B5  F0A8         	movff	sendnum@sannum,___lwdiv@dividend
  1784  00735E  C0B6  F0A9         	movff	sendnum@sannum+1,___lwdiv@dividend+1
  1785  007362  EC5B  F035         	call	___lwdiv	;wreg free
  1786  007366  0100               	movlb	0	; () banked
  1787  007368  C0A8  F0AF         	movff	?___lwdiv,___lwmod@dividend
  1788  00736C  0100               	movlb	0	; () banked
  1789  00736E  C0A9  F0B0         	movff	?___lwdiv+1,___lwmod@dividend+1
  1790  007372  0E00               	movlw	0
  1791  007374  0100               	movlb	0	; () banked
  1792  007376  0100               	movlb	0	; () banked
  1793  007378  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
  1794  00737A  0E0A               	movlw	10
  1795  00737C  0100               	movlb	0	; () banked
  1796  00737E  6FB1               	movwf	___lwmod@divisor& (0+255),b
  1797  007380  ECE0  F033         	call	___lwmod	;wreg free
  1798  007384  0100               	movlb	0	; () banked
  1799  007386  0100               	movlb	0	; () banked
  1800  007388  51AF               	movf	?___lwmod& (0+255),w,b
  1801  00738A  2446               	addwf	_REG,w,c
  1802  00738C  0F30               	addlw	48
  1803  00738E  ECA1  F031         	call	_swputc
  1804  007392                     l430:
  1805                           
  1806                           ;SanUSB48X.h: 506: }
  1807                           ;SanUSB48X.h: 507: swputc((sannum % 10)+REG+0x30) ;
  1808  007392  C0B5  F0AF         	movff	sendnum@sannum,___lwmod@dividend
  1809  007396  C0B6  F0B0         	movff	sendnum@sannum+1,___lwmod@dividend+1
  1810  00739A  0E00               	movlw	0
  1811  00739C  0100               	movlb	0	; () banked
  1812  00739E  0100               	movlb	0	; () banked
  1813  0073A0  6FB2               	movwf	(___lwmod@divisor+1)& (0+255),b
  1814  0073A2  0E0A               	movlw	10
  1815  0073A4  0100               	movlb	0	; () banked
  1816  0073A6  6FB1               	movwf	___lwmod@divisor& (0+255),b
  1817  0073A8  ECE0  F033         	call	___lwmod	;wreg free
  1818  0073AC  0100               	movlb	0	; () banked
  1819  0073AE  0100               	movlb	0	; () banked
  1820  0073B0  51AF               	movf	?___lwmod& (0+255),w,b
  1821  0073B2  2446               	addwf	_REG,w,c
  1822  0073B4  0F30               	addlw	48
  1823  0073B6  ECA1  F031         	call	_swputc
  1824  0073BA  0012               	return	
  1825  0073BC                     __end_of_sendnum:
  1826                           	opt stack 0
  1827                           tblptru	equ	0xFF8
  1828                           tblptrh	equ	0xFF7
  1829                           tblptrl	equ	0xFF6
  1830                           tablat	equ	0xFF5
  1831                           prodh	equ	0xFF4
  1832                           prodl	equ	0xFF3
  1833                           intcon	equ	0xFF2
  1834                           postinc0	equ	0xFEE
  1835                           wreg	equ	0xFE8
  1836                           postdec1	equ	0xFE5
  1837                           fsr1l	equ	0xFE1
  1838                           status	equ	0xFD8
  1839                           
  1840 ;; *************** function _swputc *****************
  1841 ;; Defined at:
  1842 ;;		line 466 in file "SanUSB48X.h"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  c               1    wreg     unsigned char 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  c               1   20[COMRAM] unsigned char 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;		None               void
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1856 ;;      Params:         0       0       0       0       0       0       0       0       0
  1857 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1859 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1860 ;;Total ram usage:        1 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    2
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_sendrw
  1867 ;;		_sendnum
  1868 ;;		_sendsw
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text5
  1873  006342                     __ptext5:
  1874                           	opt stack 0
  1875  006342                     _swputc:
  1876                           	opt stack 27
  1877                           
  1878                           ;incstack = 0
  1879                           ;swputc@c stored from wreg
  1880  006342  CFE8 F015          	movff	wreg,swputc@c
  1881  006346                     l391:
  1882  006346  A2AC               	btfss	4012,1,c	;volatile
  1883  006348  D7FE               	goto	l391
  1884                           
  1885                           ;SanUSB48X.h: 469: TXREG=REG+c;
  1886  00634A  5046               	movf	_REG,w,c
  1887  00634C  2415               	addwf	swputc@c,w,c
  1888  00634E  6EAD               	movwf	4013,c	;volatile
  1889  006350  0012               	return	
  1890  006352                     __end_of_swputc:
  1891                           	opt stack 0
  1892                           tblptru	equ	0xFF8
  1893                           tblptrh	equ	0xFF7
  1894                           tblptrl	equ	0xFF6
  1895                           tablat	equ	0xFF5
  1896                           prodh	equ	0xFF4
  1897                           prodl	equ	0xFF3
  1898                           intcon	equ	0xFF2
  1899                           postinc0	equ	0xFEE
  1900                           wreg	equ	0xFE8
  1901                           postdec1	equ	0xFE5
  1902                           fsr1l	equ	0xFE1
  1903                           status	equ	0xFD8
  1904                           
  1905 ;; *************** function ___lwmod *****************
  1906 ;; Defined at:
  1907 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwmod.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  dividend        2    7[BANK0 ] unsigned int 
  1910 ;;  divisor         2    9[BANK0 ] unsigned int 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  counter         1   12[BANK0 ] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  2    7[BANK0 ] unsigned int 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1922 ;;      Params:         0       4       0       0       0       0       0       0       0
  1923 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1924 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1925 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1926 ;;Total ram usage:        6 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:    2
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		_sendnum
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           	psect	text6
  1937  0067C0                     __ptext6:
  1938                           	opt stack 0
  1939  0067C0                     ___lwmod:
  1940                           	opt stack 27
  1941                           
  1942                           ;incstack = 0
  1943  0067C0  0100               	movlb	0	; () banked
  1944  0067C2  0100               	movlb	0	; () banked
  1945  0067C4  51B2               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1946  0067C6  11B1               	iorwf	___lwmod@divisor& (0+255),w,b
  1947  0067C8  B4D8               	btfsc	status,2,c
  1948  0067CA  D03A               	goto	l1157
  1949                           
  1950                           ; BSR set to: 0
  1951  0067CC  0100               	movlb	0	; () banked
  1952  0067CE  6FB3               	movwf	??___lwmod& (0+255),b
  1953  0067D0  0E01               	movlw	1
  1954  0067D2  0100               	movlb	0	; () banked
  1955  0067D4  0100               	movlb	0	; () banked
  1956  0067D6  6FB4               	movwf	___lwmod@counter& (0+255),b
  1957  0067D8  0100               	movlb	0	; () banked
  1958  0067DA  51B3               	movf	??___lwmod& (0+255),w,b
  1959  0067DC  D009               	goto	l4491
  1960  0067DE                     l4489:
  1961                           
  1962                           ; BSR set to: 0
  1963  0067DE  0100               	movlb	0	; () banked
  1964  0067E0  0100               	movlb	0	; () banked
  1965  0067E2  0100               	movlb	0	; () banked
  1966  0067E4  90D8               	bcf	status,0,c
  1967  0067E6  37B1               	rlcf	___lwmod@divisor& (0+255),f,b
  1968  0067E8  37B2               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1969  0067EA  0100               	movlb	0	; () banked
  1970  0067EC  0100               	movlb	0	; () banked
  1971  0067EE  2BB4               	incf	___lwmod@counter& (0+255),f,b
  1972  0067F0                     l4491:
  1973                           
  1974                           ; BSR set to: 0
  1975  0067F0  0100               	movlb	0	; () banked
  1976  0067F2  0100               	movlb	0	; () banked
  1977  0067F4  AFB2               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1978  0067F6  D7F3               	goto	l4489
  1979  0067F8                     l4493:
  1980                           
  1981                           ; BSR set to: 0
  1982  0067F8  0100               	movlb	0	; () banked
  1983  0067FA  0100               	movlb	0	; () banked
  1984  0067FC  51B1               	movf	___lwmod@divisor& (0+255),w,b
  1985  0067FE  0100               	movlb	0	; () banked
  1986  006800  0100               	movlb	0	; () banked
  1987  006802  5DAF               	subwf	___lwmod@dividend& (0+255),w,b
  1988  006804  0100               	movlb	0	; () banked
  1989  006806  0100               	movlb	0	; () banked
  1990  006808  51B2               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1991  00680A  0100               	movlb	0	; () banked
  1992  00680C  0100               	movlb	0	; () banked
  1993  00680E  59B0               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1994  006810  A0D8               	btfss	status,0,c
  1995  006812  D00C               	goto	l4497
  1996                           
  1997                           ; BSR set to: 0
  1998  006814  0100               	movlb	0	; () banked
  1999  006816  0100               	movlb	0	; () banked
  2000  006818  51B1               	movf	___lwmod@divisor& (0+255),w,b
  2001  00681A  0100               	movlb	0	; () banked
  2002  00681C  0100               	movlb	0	; () banked
  2003  00681E  5FAF               	subwf	___lwmod@dividend& (0+255),f,b
  2004  006820  0100               	movlb	0	; () banked
  2005  006822  0100               	movlb	0	; () banked
  2006  006824  51B2               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2007  006826  0100               	movlb	0	; () banked
  2008  006828  0100               	movlb	0	; () banked
  2009  00682A  5BB0               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2010  00682C                     l4497:
  2011                           
  2012                           ; BSR set to: 0
  2013  00682C  0100               	movlb	0	; () banked
  2014  00682E  0100               	movlb	0	; () banked
  2015  006830  0100               	movlb	0	; () banked
  2016  006832  90D8               	bcf	status,0,c
  2017  006834  33B2               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2018  006836  33B1               	rrcf	___lwmod@divisor& (0+255),f,b
  2019                           
  2020                           ; BSR set to: 0
  2021  006838  0100               	movlb	0	; () banked
  2022  00683A  0100               	movlb	0	; () banked
  2023  00683C  2FB4               	decfsz	___lwmod@counter& (0+255),f,b
  2024  00683E  D7DC               	goto	l4493
  2025  006840                     l1157:
  2026                           
  2027                           ; BSR set to: 0
  2028  006840  C0AF  F0AF         	movff	___lwmod@dividend,?___lwmod
  2029  006844  C0B0  F0B0         	movff	___lwmod@dividend+1,?___lwmod+1
  2030                           
  2031                           ; BSR set to: 0
  2032  006848  0012               	return	
  2033  00684A                     __end_of___lwmod:
  2034                           	opt stack 0
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           prodh	equ	0xFF4
  2040                           prodl	equ	0xFF3
  2041                           intcon	equ	0xFF2
  2042                           postinc0	equ	0xFEE
  2043                           wreg	equ	0xFE8
  2044                           postdec1	equ	0xFE5
  2045                           fsr1l	equ	0xFE1
  2046                           status	equ	0xFD8
  2047                           
  2048 ;; *************** function _le_AD10bits *****************
  2049 ;; Defined at:
  2050 ;;		line 334 in file "SanUSB48X.h"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  conv            1    wreg     unsigned char 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  conv            1   32[COMRAM] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  2   30[COMRAM] unsigned int 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2064 ;;      Params:         2       0       0       0       0       0       0       0       0
  2065 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2067 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2068 ;;Total ram usage:        3 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:    4
  2071 ;; This function calls:
  2072 ;;		_tempo_ms
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text7
  2079  00684A                     __ptext7:
  2080                           	opt stack 0
  2081  00684A                     _le_AD10bits:
  2082                           	opt stack 26
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;incstack = 0
  2086                           ;le_AD10bits@conv stored from wreg
  2087  00684A  CFE8 F021          	movff	wreg,le_AD10bits@conv
  2088                           
  2089                           ;SanUSB48X.h: 335: switch(conv){
  2090  00684E  D015               	goto	l4549
  2091  006850                     l4527:
  2092  006850  0E01               	movlw	1
  2093  006852  D011               	goto	L10
  2094  006854                     l4529:
  2095  006854  0E05               	movlw	5
  2096  006856  D00F               	goto	L10
  2097  006858                     l4531:
  2098  006858  0E09               	movlw	9
  2099  00685A  D00D               	goto	L10
  2100  00685C                     l4533:
  2101  00685C  0E0D               	movlw	13
  2102  00685E  D00B               	goto	L10
  2103  006860                     l4535:
  2104  006860  0E11               	movlw	17
  2105  006862  D009               	goto	L10
  2106  006864                     l4537:
  2107  006864  0E21               	movlw	33
  2108  006866  D007               	goto	L10
  2109  006868                     l4539:
  2110  006868  0E25               	movlw	37
  2111  00686A  D005               	goto	L10
  2112  00686C                     l4541:
  2113  00686C  0E29               	movlw	41
  2114  00686E  D003               	goto	L10
  2115  006870                     l4543:
  2116  006870  0E2D               	movlw	45
  2117  006872  D001               	goto	L10
  2118  006874                     l4545:
  2119  006874  0E31               	movlw	49
  2120  006876                     L10:
  2121  006876  6EC2               	movwf	4034,c	;volatile
  2122  006878  D01F               	goto	l4551
  2123  00687A                     l4549:
  2124  00687A  5021               	movf	le_AD10bits@conv,w,c
  2125                           
  2126                           ; Switch size 1, requested type "space"
  2127                           ; Number of cases is 10, Range of values is 0 to 12
  2128                           ; switch strategies available:
  2129                           ; Name         Instructions Cycles
  2130                           ; simple_byte           31    16 (average)
  2131                           ;	Chosen strategy is simple_byte
  2132  00687C  0A00               	xorlw	0	; case 0
  2133  00687E  B4D8               	btfsc	status,2,c
  2134  006880  D7E7               	goto	l4527
  2135  006882  0A01               	xorlw	1	; case 1
  2136  006884  B4D8               	btfsc	status,2,c
  2137  006886  D7E6               	goto	l4529
  2138  006888  0A03               	xorlw	3	; case 2
  2139  00688A  B4D8               	btfsc	status,2,c
  2140  00688C  D7E5               	goto	l4531
  2141  00688E  0A01               	xorlw	1	; case 3
  2142  006890  B4D8               	btfsc	status,2,c
  2143  006892  D7E4               	goto	l4533
  2144  006894  0A07               	xorlw	7	; case 4
  2145  006896  B4D8               	btfsc	status,2,c
  2146  006898  D7E3               	goto	l4535
  2147  00689A  0A0C               	xorlw	12	; case 8
  2148  00689C  B4D8               	btfsc	status,2,c
  2149  00689E  D7E2               	goto	l4537
  2150  0068A0  0A01               	xorlw	1	; case 9
  2151  0068A2  B4D8               	btfsc	status,2,c
  2152  0068A4  D7E1               	goto	l4539
  2153  0068A6  0A03               	xorlw	3	; case 10
  2154  0068A8  B4D8               	btfsc	status,2,c
  2155  0068AA  D7E0               	goto	l4541
  2156  0068AC  0A01               	xorlw	1	; case 11
  2157  0068AE  B4D8               	btfsc	status,2,c
  2158  0068B0  D7DF               	goto	l4543
  2159  0068B2  0A07               	xorlw	7	; case 12
  2160  0068B4  B4D8               	btfsc	status,2,c
  2161  0068B6  D7DE               	goto	l4545
  2162  0068B8                     l4551:
  2163                           
  2164                           ;SanUSB48X.h: 346: tempo_ms(10);
  2165  0068B8  0E00               	movlw	0
  2166  0068BA  6E1C               	movwf	tempo_ms@i+1,c
  2167  0068BC  0E0A               	movlw	10
  2168  0068BE  6E1B               	movwf	tempo_ms@i,c
  2169  0068C0  EC98  F032         	call	_tempo_ms	;wreg free
  2170                           
  2171                           ;SanUSB48X.h: 347: ADCON2bits.ADFM=1;
  2172  0068C4  8EC0               	bsf	4032,7,c	;volatile
  2173                           
  2174                           ;SanUSB48X.h: 348: ADCON0bits.GO = 1;
  2175  0068C6  82C2               	bsf	4034,1,c	;volatile
  2176  0068C8                     l328:
  2177  0068C8  B2C2               	btfsc	4034,1,c	;volatile
  2178  0068CA  D7FE               	goto	l328
  2179                           
  2180                           ;SanUSB48X.h: 350: return ADRES; }
  2181  0068CC  CFC3 F01F          	movff	4035,?_le_AD10bits	;volatile
  2182  0068D0  CFC4 F020          	movff	4036,?_le_AD10bits+1	;volatile
  2183  0068D4  0012               	return	
  2184  0068D6                     __end_of_le_AD10bits:
  2185                           	opt stack 0
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           prodh	equ	0xFF4
  2191                           prodl	equ	0xFF3
  2192                           intcon	equ	0xFF2
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           postdec1	equ	0xFE5
  2196                           fsr1l	equ	0xFE1
  2197                           status	equ	0xFD8
  2198                           
  2199 ;; *************** function _habilita_interrupcao *****************
  2200 ;; Defined at:
  2201 ;;		line 68 in file "SanUSB48X.h"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  tipo            2   20[COMRAM] unsigned int 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;		None               void
  2208 ;; Registers used:
  2209 ;;		wreg, status,2, status,0
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2215 ;;      Params:         2       0       0       0       0       0       0       0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2217 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2218 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2219 ;;Total ram usage:        4 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    2
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_main
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text8
  2230  006A12                     __ptext8:
  2231                           	opt stack 0
  2232  006A12                     _habilita_interrupcao:
  2233                           	opt stack 28
  2234                           
  2235                           ;SanUSB48X.h: 69: RCONbits.IPEN = 1;
  2236                           
  2237                           ;incstack = 0
  2238  006A12  8ED0               	bsf	4048,7,c	;volatile
  2239                           
  2240                           ;SanUSB48X.h: 70: INTCONbits.GIEH = 1;
  2241  006A14  8EF2               	bsf	intcon,7,c	;volatile
  2242                           
  2243                           ;SanUSB48X.h: 71: switch(tipo){
  2244  006A16  D01A               	goto	l4505
  2245  006A18                     l140:
  2246  006A18  8AF2               	bsf	intcon,5,c	;volatile
  2247  006A1A  8ED5               	bsf	4053,7,c	;volatile
  2248  006A1C  D04B               	goto	l150
  2249  006A1E                     l142:
  2250  006A1E  809D               	bsf	3997,0,c	;volatile
  2251  006A20  80CD               	bsf	4045,0,c	;volatile
  2252  006A22  D048               	goto	l150
  2253  006A24                     l143:
  2254  006A24  829D               	bsf	3997,1,c	;volatile
  2255  006A26  84CA               	bsf	4042,2,c	;volatile
  2256  006A28  D045               	goto	l150
  2257  006A2A                     l144:
  2258  006A2A  82A0               	bsf	4000,1,c	;volatile
  2259  006A2C  80B1               	bsf	4017,0,c	;volatile
  2260  006A2E  D042               	goto	l150
  2261  006A30                     l145:
  2262  006A30  88F2               	bsf	intcon,4,c	;volatile
  2263  006A32  9CF1               	bcf	intcon2,6,c	;volatile
  2264  006A34  D03F               	goto	l150
  2265  006A36                     l146:
  2266  006A36  86F0               	bsf	intcon3,3,c	;volatile
  2267  006A38  9AF1               	bcf	intcon2,5,c	;volatile
  2268  006A3A  D03C               	goto	l150
  2269  006A3C                     l147:
  2270  006A3C  88F0               	bsf	intcon3,4,c	;volatile
  2271  006A3E  98F1               	bcf	intcon2,4,c	;volatile
  2272  006A40  D039               	goto	l150
  2273  006A42                     l148:
  2274  006A42  8C9D               	bsf	3997,6,c	;volatile
  2275  006A44  D037               	goto	l150
  2276  006A46                     l149:
  2277  006A46  8A9D               	bsf	3997,5,c	;volatile
  2278  006A48  8A9F               	bsf	3999,5,c	;volatile
  2279  006A4A  D034               	goto	l150
  2280  006A4C                     l4505:
  2281  006A4C  C015  F017         	movff	habilita_interrupcao@tipo,??_habilita_interrupcao
  2282  006A50  C016  F018         	movff	habilita_interrupcao@tipo+1,??_habilita_interrupcao+1
  2283                           
  2284                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  2285                           ; Switch size 1, requested type "space"
  2286                           ; Number of cases is 4, Range of values is 157 to 242
  2287                           ; switch strategies available:
  2288                           ; Name         Instructions Cycles
  2289                           ; simple_byte           13     7 (average)
  2290                           ;	Chosen strategy is simple_byte
  2291  006A54  5018               	movf	??_habilita_interrupcao+1,w,c
  2292  006A56  0A9D               	xorlw	157	; case 157
  2293  006A58  B4D8               	btfsc	status,2,c
  2294  006A5A  D00A               	goto	l5339
  2295  006A5C  0A3D               	xorlw	61	; case 160
  2296  006A5E  B4D8               	btfsc	status,2,c
  2297  006A60  D015               	goto	l5341
  2298  006A62  0A50               	xorlw	80	; case 240
  2299  006A64  B4D8               	btfsc	status,2,c
  2300  006A66  D017               	goto	l5343
  2301  006A68  0A02               	xorlw	2	; case 242
  2302  006A6A  B4D8               	btfsc	status,2,c
  2303  006A6C  D01C               	goto	l5345
  2304  006A6E  D022               	goto	l150
  2305  006A70                     l5339:
  2306                           
  2307                           ; Switch size 1, requested type "space"
  2308                           ; Number of cases is 4, Range of values is 1 to 64
  2309                           ; switch strategies available:
  2310                           ; Name         Instructions Cycles
  2311                           ; simple_byte           13     7 (average)
  2312                           ;	Chosen strategy is simple_byte
  2313  006A70  5017               	movf	??_habilita_interrupcao,w,c
  2314  006A72  0A01               	xorlw	1	; case 1
  2315  006A74  B4D8               	btfsc	status,2,c
  2316  006A76  D7D3               	goto	l142
  2317  006A78  0A03               	xorlw	3	; case 2
  2318  006A7A  B4D8               	btfsc	status,2,c
  2319  006A7C  D7D3               	goto	l143
  2320  006A7E  0A22               	xorlw	34	; case 32
  2321  006A80  B4D8               	btfsc	status,2,c
  2322  006A82  D7E1               	goto	l149
  2323  006A84  0A60               	xorlw	96	; case 64
  2324  006A86  B4D8               	btfsc	status,2,c
  2325  006A88  D7DC               	goto	l148
  2326  006A8A  D014               	goto	l150
  2327  006A8C                     l5341:
  2328                           
  2329                           ; Switch size 1, requested type "space"
  2330                           ; Number of cases is 1, Range of values is 2 to 2
  2331                           ; switch strategies available:
  2332                           ; Name         Instructions Cycles
  2333                           ; simple_byte            4     3 (average)
  2334                           ;	Chosen strategy is simple_byte
  2335  006A8C  5017               	movf	??_habilita_interrupcao,w,c
  2336  006A8E  0A02               	xorlw	2	; case 2
  2337  006A90  B4D8               	btfsc	status,2,c
  2338  006A92  D7CB               	goto	l144
  2339  006A94  D00F               	goto	l150
  2340  006A96                     l5343:
  2341                           
  2342                           ; Switch size 1, requested type "space"
  2343                           ; Number of cases is 2, Range of values is 8 to 16
  2344                           ; switch strategies available:
  2345                           ; Name         Instructions Cycles
  2346                           ; simple_byte            7     4 (average)
  2347                           ;	Chosen strategy is simple_byte
  2348  006A96  5017               	movf	??_habilita_interrupcao,w,c
  2349  006A98  0A08               	xorlw	8	; case 8
  2350  006A9A  B4D8               	btfsc	status,2,c
  2351  006A9C  D7CC               	goto	l146
  2352  006A9E  0A18               	xorlw	24	; case 16
  2353  006AA0  B4D8               	btfsc	status,2,c
  2354  006AA2  D7CC               	goto	l147
  2355  006AA4  D007               	goto	l150
  2356  006AA6                     l5345:
  2357                           
  2358                           ; Switch size 1, requested type "space"
  2359                           ; Number of cases is 2, Range of values is 16 to 32
  2360                           ; switch strategies available:
  2361                           ; Name         Instructions Cycles
  2362                           ; simple_byte            7     4 (average)
  2363                           ;	Chosen strategy is simple_byte
  2364  006AA6  5017               	movf	??_habilita_interrupcao,w,c
  2365  006AA8  0A10               	xorlw	16	; case 16
  2366  006AAA  B4D8               	btfsc	status,2,c
  2367  006AAC  D7C1               	goto	l145
  2368  006AAE  0A30               	xorlw	48	; case 32
  2369  006AB0  B4D8               	btfsc	status,2,c
  2370  006AB2  D7B2               	goto	l140
  2371  006AB4                     l150:
  2372  006AB4  0012               	return	
  2373  006AB6                     __end_of_habilita_interrupcao:
  2374                           	opt stack 0
  2375                           tblptru	equ	0xFF8
  2376                           tblptrh	equ	0xFF7
  2377                           tblptrl	equ	0xFF6
  2378                           tablat	equ	0xFF5
  2379                           prodh	equ	0xFF4
  2380                           prodl	equ	0xFF3
  2381                           intcon	equ	0xFF2
  2382                           intcon2	equ	0xFF1
  2383                           intcon3	equ	0xFF0
  2384                           postinc0	equ	0xFEE
  2385                           wreg	equ	0xFE8
  2386                           postdec1	equ	0xFE5
  2387                           fsr1l	equ	0xFE1
  2388                           status	equ	0xFD8
  2389                           
  2390 ;; *************** function _habilita_canal_AD *****************
  2391 ;; Defined at:
  2392 ;;		line 311 in file "SanUSB48X.h"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  canal           1    wreg     unsigned char 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  canal           1   20[COMRAM] unsigned char 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;		None               void
  2399 ;; Registers used:
  2400 ;;		wreg, status,2, status,0
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2406 ;;      Params:         0       0       0       0       0       0       0       0       0
  2407 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2409 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2410 ;;Total ram usage:        1 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    2
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text9
  2421  006364                     __ptext9:
  2422                           	opt stack 0
  2423  006364                     _habilita_canal_AD:
  2424                           	opt stack 28
  2425                           
  2426                           ;incstack = 0
  2427                           ;habilita_canal_AD@canal stored from wreg
  2428  006364  CFE8 F015          	movff	wreg,habilita_canal_AD@canal
  2429                           
  2430                           ;SanUSB48X.h: 312: ADCON1 =REG+canal;
  2431  006368  5046               	movf	_REG,w,c
  2432  00636A  2415               	addwf	habilita_canal_AD@canal,w,c
  2433  00636C  6EC1               	movwf	4033,c	;volatile
  2434                           
  2435                           ;SanUSB48X.h: 313: ADCON2=REG+0b00000111;
  2436  00636E  5046               	movf	_REG,w,c
  2437  006370  0F07               	addlw	7
  2438  006372  6EC0               	movwf	4032,c	;volatile
  2439  006374  0012               	return	
  2440  006376                     __end_of_habilita_canal_AD:
  2441                           	opt stack 0
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           prodh	equ	0xFF4
  2447                           prodl	equ	0xFF3
  2448                           intcon	equ	0xFF2
  2449                           intcon2	equ	0xFF1
  2450                           intcon3	equ	0xFF0
  2451                           postinc0	equ	0xFEE
  2452                           wreg	equ	0xFE8
  2453                           postdec1	equ	0xFE5
  2454                           fsr1l	equ	0xFE1
  2455                           status	equ	0xFD8
  2456                           
  2457 ;; *************** function _clock_int_48MHz *****************
  2458 ;; Defined at:
  2459 ;;		line 435 in file "SanUSB48X.h"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;		None               void
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0, prodl, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2473 ;;      Params:         0       0       0       0       0       0       0       0       0
  2474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2476 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2477 ;;Total ram usage:        0 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    3
  2480 ;; This function calls:
  2481 ;;		___awmod
  2482 ;;		___lwdiv
  2483 ;;		_le_eeprom
  2484 ;; This function is called by:
  2485 ;;		_main
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text10
  2490  0065D0                     __ptext10:
  2491                           	opt stack 0
  2492  0065D0                     _clock_int_48MHz:
  2493                           	opt stack 27
  2494                           
  2495                           ;SanUSB48X.h: 438: EEADR = 0B11111101;
  2496                           
  2497                           ;incstack = 0
  2498  0065D0  0EFD               	movlw	253
  2499  0065D2  6EA9               	movwf	4009,c	;volatile
  2500                           
  2501                           ;SanUSB48X.h: 439: EECON1=EEADR & 0B00001011;
  2502  0065D4  50A9               	movf	4009,w,c	;volatile
  2503  0065D6  0B0B               	andlw	11
  2504  0065D8  6EA6               	movwf	4006,c	;volatile
  2505  0065DA                     l376:
  2506  0065DA  66A8               	tstfsz	4008,c	;volatile
  2507  0065DC  D7FE               	goto	l376
  2508                           
  2509                           ;SanUSB48X.h: 441: REGad=R/((EEADR%126)<<4);
  2510  0065DE  C042  F0A8         	movff	_R,___lwdiv@dividend
  2511  0065E2  C043  F0A9         	movff	_R+1,___lwdiv@dividend+1
  2512  0065E6  0E00               	movlw	0
  2513  0065E8  6E18               	movwf	___awmod@divisor+1,c
  2514  0065EA  0E7E               	movlw	126
  2515  0065EC  6E17               	movwf	___awmod@divisor,c
  2516  0065EE  CFA9 F015          	movff	4009,___awmod@dividend	;volatile
  2517  0065F2  6A16               	clrf	___awmod@dividend+1,c
  2518  0065F4  EC6B  F034         	call	___awmod	;wreg free
  2519  0065F8  3A15               	swapf	?___awmod,f,c
  2520  0065FA  3A16               	swapf	?___awmod+1,f,c
  2521  0065FC  0EF0               	movlw	240
  2522  0065FE  1616               	andwf	?___awmod+1,f,c
  2523  006600  5015               	movf	?___awmod,w,c
  2524  006602  0B0F               	andlw	15
  2525  006604  1216               	iorwf	?___awmod+1,f,c
  2526  006606  0EF0               	movlw	240
  2527  006608  1615               	andwf	?___awmod,f,c
  2528  00660A  C015  F0AA         	movff	?___awmod,___lwdiv@divisor
  2529  00660E  C016  F0AB         	movff	?___awmod+1,___lwdiv@divisor+1
  2530  006612  EC5B  F035         	call	___lwdiv	;wreg free
  2531  006616  0100               	movlb	0	; () banked
  2532  006618  0100               	movlb	0	; () banked
  2533  00661A  51A8               	movf	?___lwdiv& (0+255),w,b
  2534  00661C  6E47               	movwf	_REGad,c
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;SanUSB48X.h: 442: REG=le_eeprom(REGad);
  2538  00661E  5047               	movf	_REGad,w,c
  2539  006620  ECBB  F031         	call	_le_eeprom
  2540  006624  6E46               	movwf	_REG,c
  2541  006626  0012               	return	
  2542  006628                     __end_of_clock_int_48MHz:
  2543                           	opt stack 0
  2544                           tblptru	equ	0xFF8
  2545                           tblptrh	equ	0xFF7
  2546                           tblptrl	equ	0xFF6
  2547                           tablat	equ	0xFF5
  2548                           prodh	equ	0xFF4
  2549                           prodl	equ	0xFF3
  2550                           intcon	equ	0xFF2
  2551                           intcon2	equ	0xFF1
  2552                           intcon3	equ	0xFF0
  2553                           postinc0	equ	0xFEE
  2554                           wreg	equ	0xFE8
  2555                           postdec1	equ	0xFE5
  2556                           fsr1l	equ	0xFE1
  2557                           status	equ	0xFD8
  2558                           
  2559 ;; *************** function ___lwdiv *****************
  2560 ;; Defined at:
  2561 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwdiv.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  dividend        2    0[BANK0 ] unsigned int 
  2564 ;;  divisor         2    2[BANK0 ] unsigned int 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  quotient        2    5[BANK0 ] unsigned int 
  2567 ;;  counter         1    4[BANK0 ] unsigned char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  2    0[BANK0 ] unsigned int 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2577 ;;      Params:         0       4       0       0       0       0       0       0       0
  2578 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2579 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2580 ;;      Totals:         1       7       0       0       0       0       0       0       0
  2581 ;;Total ram usage:        8 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    2
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_clock_int_48MHz
  2588 ;;		_sendnum
  2589 ;;		_main
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text11
  2594  006AB6                     __ptext11:
  2595                           	opt stack 0
  2596  006AB6                     ___lwdiv:
  2597                           	opt stack 27
  2598                           
  2599                           ;incstack = 0
  2600  006AB6  0E00               	movlw	0
  2601  006AB8  0100               	movlb	0	; () banked
  2602  006ABA  0100               	movlb	0	; () banked
  2603  006ABC  6FAE               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2604  006ABE  0E00               	movlw	0
  2605  006AC0  0100               	movlb	0	; () banked
  2606  006AC2  6FAD               	movwf	___lwdiv@quotient& (0+255),b
  2607                           
  2608                           ; BSR set to: 0
  2609  006AC4  0100               	movlb	0	; () banked
  2610  006AC6  0100               	movlb	0	; () banked
  2611  006AC8  51AB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2612  006ACA  11AA               	iorwf	___lwdiv@divisor& (0+255),w,b
  2613  006ACC  B4D8               	btfsc	status,2,c
  2614  006ACE  D041               	goto	l1147
  2615                           
  2616                           ; BSR set to: 0
  2617  006AD0  6E22               	movwf	??___lwdiv& (0+255),c
  2618  006AD2  0E01               	movlw	1
  2619  006AD4  0100               	movlb	0	; () banked
  2620  006AD6  0100               	movlb	0	; () banked
  2621  006AD8  6FAC               	movwf	___lwdiv@counter& (0+255),b
  2622  006ADA  5022               	movf	??___lwdiv& (0+255),w,c
  2623  006ADC  D009               	goto	l4471
  2624  006ADE                     l4469:
  2625                           
  2626                           ; BSR set to: 0
  2627  006ADE  0100               	movlb	0	; () banked
  2628  006AE0  0100               	movlb	0	; () banked
  2629  006AE2  0100               	movlb	0	; () banked
  2630  006AE4  90D8               	bcf	status,0,c
  2631  006AE6  37AA               	rlcf	___lwdiv@divisor& (0+255),f,b
  2632  006AE8  37AB               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2633  006AEA  0100               	movlb	0	; () banked
  2634  006AEC  0100               	movlb	0	; () banked
  2635  006AEE  2BAC               	incf	___lwdiv@counter& (0+255),f,b
  2636  006AF0                     l4471:
  2637                           
  2638                           ; BSR set to: 0
  2639  006AF0  0100               	movlb	0	; () banked
  2640  006AF2  0100               	movlb	0	; () banked
  2641  006AF4  AFAB               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2642  006AF6  D7F3               	goto	l4469
  2643  006AF8                     l4473:
  2644                           
  2645                           ; BSR set to: 0
  2646  006AF8  0100               	movlb	0	; () banked
  2647  006AFA  0100               	movlb	0	; () banked
  2648  006AFC  0100               	movlb	0	; () banked
  2649  006AFE  90D8               	bcf	status,0,c
  2650  006B00  37AD               	rlcf	___lwdiv@quotient& (0+255),f,b
  2651  006B02  37AE               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2652                           
  2653                           ; BSR set to: 0
  2654  006B04  0100               	movlb	0	; () banked
  2655  006B06  0100               	movlb	0	; () banked
  2656  006B08  51AA               	movf	___lwdiv@divisor& (0+255),w,b
  2657  006B0A  0100               	movlb	0	; () banked
  2658  006B0C  0100               	movlb	0	; () banked
  2659  006B0E  5DA8               	subwf	___lwdiv@dividend& (0+255),w,b
  2660  006B10  0100               	movlb	0	; () banked
  2661  006B12  0100               	movlb	0	; () banked
  2662  006B14  51AB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2663  006B16  0100               	movlb	0	; () banked
  2664  006B18  0100               	movlb	0	; () banked
  2665  006B1A  59A9               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2666  006B1C  A0D8               	btfss	status,0,c
  2667  006B1E  D00F               	goto	l4481
  2668                           
  2669                           ; BSR set to: 0
  2670  006B20  0100               	movlb	0	; () banked
  2671  006B22  0100               	movlb	0	; () banked
  2672  006B24  51AA               	movf	___lwdiv@divisor& (0+255),w,b
  2673  006B26  0100               	movlb	0	; () banked
  2674  006B28  0100               	movlb	0	; () banked
  2675  006B2A  5FA8               	subwf	___lwdiv@dividend& (0+255),f,b
  2676  006B2C  0100               	movlb	0	; () banked
  2677  006B2E  0100               	movlb	0	; () banked
  2678  006B30  51AB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2679  006B32  0100               	movlb	0	; () banked
  2680  006B34  0100               	movlb	0	; () banked
  2681  006B36  5BA9               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2682                           
  2683                           ; BSR set to: 0
  2684  006B38  0100               	movlb	0	; () banked
  2685  006B3A  0100               	movlb	0	; () banked
  2686  006B3C  81AD               	bsf	___lwdiv@quotient& (0+255),0,b
  2687  006B3E                     l4481:
  2688                           
  2689                           ; BSR set to: 0
  2690  006B3E  0100               	movlb	0	; () banked
  2691  006B40  0100               	movlb	0	; () banked
  2692  006B42  0100               	movlb	0	; () banked
  2693  006B44  90D8               	bcf	status,0,c
  2694  006B46  33AB               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2695  006B48  33AA               	rrcf	___lwdiv@divisor& (0+255),f,b
  2696                           
  2697                           ; BSR set to: 0
  2698  006B4A  0100               	movlb	0	; () banked
  2699  006B4C  0100               	movlb	0	; () banked
  2700  006B4E  2FAC               	decfsz	___lwdiv@counter& (0+255),f,b
  2701  006B50  D7D3               	goto	l4473
  2702  006B52                     l1147:
  2703                           
  2704                           ; BSR set to: 0
  2705  006B52  C0AD  F0A8         	movff	___lwdiv@quotient,?___lwdiv
  2706  006B56  C0AE  F0A9         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2707                           
  2708                           ; BSR set to: 0
  2709  006B5A  0012               	return	
  2710  006B5C                     __end_of___lwdiv:
  2711                           	opt stack 0
  2712                           tblptru	equ	0xFF8
  2713                           tblptrh	equ	0xFF7
  2714                           tblptrl	equ	0xFF6
  2715                           tablat	equ	0xFF5
  2716                           prodh	equ	0xFF4
  2717                           prodl	equ	0xFF3
  2718                           intcon	equ	0xFF2
  2719                           intcon2	equ	0xFF1
  2720                           intcon3	equ	0xFF0
  2721                           postinc0	equ	0xFEE
  2722                           wreg	equ	0xFE8
  2723                           postdec1	equ	0xFE5
  2724                           fsr1l	equ	0xFE1
  2725                           status	equ	0xFD8
  2726                           
  2727 ;; *************** function ___awmod *****************
  2728 ;; Defined at:
  2729 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awmod.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  dividend        2   20[COMRAM] int 
  2732 ;;  divisor         2   22[COMRAM] int 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  sign            1   26[COMRAM] unsigned char 
  2735 ;;  counter         1   25[COMRAM] unsigned char 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  2   20[COMRAM] int 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2, status,0, prodl
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2745 ;;      Params:         4       0       0       0       0       0       0       0       0
  2746 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2747 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2748 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2749 ;;Total ram usage:        7 bytes
  2750 ;; Hardware stack levels used:    1
  2751 ;; Hardware stack levels required when called:    2
  2752 ;; This function calls:
  2753 ;;		Nothing
  2754 ;; This function is called by:
  2755 ;;		_clock_int_48MHz
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text12
  2760  0068D6                     __ptext12:
  2761                           	opt stack 0
  2762  0068D6                     ___awmod:
  2763                           	opt stack 27
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;incstack = 0
  2767  0068D6  6E19               	movwf	??___awmod& (0+255),c
  2768  0068D8  0E00               	movlw	0
  2769  0068DA  6E1B               	movwf	___awmod@sign,c
  2770  0068DC  5019               	movf	??___awmod& (0+255),w,c
  2771  0068DE  5016               	movf	___awmod@dividend+1,w,c
  2772  0068E0  0A80               	xorlw	128
  2773  0068E2  6EF3               	movwf	prodl,c
  2774  0068E4  0E80               	movlw	128
  2775  0068E6  5CF3               	subwf	prodl,w,c
  2776  0068E8  0E00               	movlw	0
  2777  0068EA  B4D8               	btfsc	status,2,c
  2778  0068EC  5C15               	subwf	___awmod@dividend,w,c
  2779  0068EE  B0D8               	btfsc	status,0,c
  2780  0068F0  D008               	goto	l4413
  2781  0068F2  6C15               	negf	___awmod@dividend,c
  2782  0068F4  1E16               	comf	___awmod@dividend+1,f,c
  2783  0068F6  B0D8               	btfsc	status,0,c
  2784  0068F8  2A16               	incf	___awmod@dividend+1,f,c
  2785  0068FA  6E19               	movwf	??___awmod& (0+255),c
  2786  0068FC  0E01               	movlw	1
  2787  0068FE  6E1B               	movwf	___awmod@sign,c
  2788  006900  5019               	movf	??___awmod& (0+255),w,c
  2789  006902                     l4413:
  2790  006902  5018               	movf	___awmod@divisor+1,w,c
  2791  006904  0A80               	xorlw	128
  2792  006906  6EF3               	movwf	prodl,c
  2793  006908  0E80               	movlw	128
  2794  00690A  5CF3               	subwf	prodl,w,c
  2795  00690C  0E00               	movlw	0
  2796  00690E  B4D8               	btfsc	status,2,c
  2797  006910  5C17               	subwf	___awmod@divisor,w,c
  2798  006912  B0D8               	btfsc	status,0,c
  2799  006914  D004               	goto	l4417
  2800  006916  6C17               	negf	___awmod@divisor,c
  2801  006918  1E18               	comf	___awmod@divisor+1,f,c
  2802  00691A  B0D8               	btfsc	status,0,c
  2803  00691C  2A18               	incf	___awmod@divisor+1,f,c
  2804  00691E                     l4417:
  2805  00691E  5018               	movf	___awmod@divisor+1,w,c
  2806  006920  1017               	iorwf	___awmod@divisor,w,c
  2807  006922  B4D8               	btfsc	status,2,c
  2808  006924  D01A               	goto	l4433
  2809  006926  6E19               	movwf	??___awmod& (0+255),c
  2810  006928  0E01               	movlw	1
  2811  00692A  6E1A               	movwf	___awmod@counter,c
  2812  00692C  5019               	movf	??___awmod& (0+255),w,c
  2813  00692E  D004               	goto	l4423
  2814  006930                     l4421:
  2815  006930  90D8               	bcf	status,0,c
  2816  006932  3617               	rlcf	___awmod@divisor,f,c
  2817  006934  3618               	rlcf	___awmod@divisor+1,f,c
  2818  006936  2A1A               	incf	___awmod@counter,f,c
  2819  006938                     l4423:
  2820  006938  AE18               	btfss	___awmod@divisor+1,7,c
  2821  00693A  D7FA               	goto	l4421
  2822  00693C                     l4425:
  2823  00693C  5017               	movf	___awmod@divisor,w,c
  2824  00693E  5C15               	subwf	___awmod@dividend,w,c
  2825  006940  5018               	movf	___awmod@divisor+1,w,c
  2826  006942  5816               	subwfb	___awmod@dividend+1,w,c
  2827  006944  A0D8               	btfss	status,0,c
  2828  006946  D004               	goto	l4429
  2829  006948  5017               	movf	___awmod@divisor,w,c
  2830  00694A  5E15               	subwf	___awmod@dividend,f,c
  2831  00694C  5018               	movf	___awmod@divisor+1,w,c
  2832  00694E  5A16               	subwfb	___awmod@dividend+1,f,c
  2833  006950                     l4429:
  2834  006950  90D8               	bcf	status,0,c
  2835  006952  3218               	rrcf	___awmod@divisor+1,f,c
  2836  006954  3217               	rrcf	___awmod@divisor,f,c
  2837  006956  2E1A               	decfsz	___awmod@counter,f,c
  2838  006958  D7F1               	goto	l4425
  2839  00695A                     l4433:
  2840  00695A  501B               	movf	___awmod@sign,w,c
  2841  00695C  B4D8               	btfsc	status,2,c
  2842  00695E  D004               	goto	l4437
  2843  006960  6C15               	negf	___awmod@dividend,c
  2844  006962  1E16               	comf	___awmod@dividend+1,f,c
  2845  006964  B0D8               	btfsc	status,0,c
  2846  006966  2A16               	incf	___awmod@dividend+1,f,c
  2847  006968                     l4437:
  2848  006968  C015  F015         	movff	___awmod@dividend,?___awmod
  2849  00696C  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
  2850  006970  0012               	return	
  2851  006972                     __end_of___awmod:
  2852                           	opt stack 0
  2853                           tblptru	equ	0xFF8
  2854                           tblptrh	equ	0xFF7
  2855                           tblptrl	equ	0xFF6
  2856                           tablat	equ	0xFF5
  2857                           prodh	equ	0xFF4
  2858                           prodl	equ	0xFF3
  2859                           intcon	equ	0xFF2
  2860                           intcon2	equ	0xFF1
  2861                           intcon3	equ	0xFF0
  2862                           postinc0	equ	0xFEE
  2863                           wreg	equ	0xFE8
  2864                           postdec1	equ	0xFE5
  2865                           fsr1l	equ	0xFE1
  2866                           status	equ	0xFD8
  2867                           
  2868 ;; *************** function _bt_ini *****************
  2869 ;; Defined at:
  2870 ;;		line 80 in file "bt_usb.h"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;		None               void
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2884 ;;      Params:         0       0       0       0       0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2886 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2887 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2888 ;;Total ram usage:        1 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    7
  2891 ;; This function calls:
  2892 ;;		_configBR6
  2893 ;;		_escreve_eeprom
  2894 ;;		_inverte_saida
  2895 ;;		_le_eeprom
  2896 ;;		_sendr
  2897 ;;		_sputc
  2898 ;;		_tempo_ms
  2899 ;; This function is called by:
  2900 ;;		_main
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text13
  2905  007862                     __ptext13:
  2906                           	opt stack 0
  2907  007862                     _bt_ini:
  2908                           	opt stack 23
  2909                           
  2910                           ;bt_usb.h: 82: if (le_eeprom(33)>0 && le_eeprom(34)>0 && le_eeprom(35)>0){
  2911                           
  2912                           ;incstack = 0
  2913  007862  0E21               	movlw	33
  2914  007864  ECBB  F031         	call	_le_eeprom
  2915  007868  0900               	iorlw	0
  2916  00786A  B4D8               	btfsc	status,2,c
  2917  00786C  D1A7               	goto	l4753
  2918  00786E  0E22               	movlw	34
  2919  007870  ECBB  F031         	call	_le_eeprom
  2920  007874  0900               	iorlw	0
  2921  007876  B4D8               	btfsc	status,2,c
  2922  007878  D1A1               	goto	l4753
  2923  00787A  0E23               	movlw	35
  2924  00787C  ECBB  F031         	call	_le_eeprom
  2925  007880  0900               	iorlw	0
  2926  007882  B4D8               	btfsc	status,2,c
  2927  007884  D19B               	goto	l4753
  2928                           
  2929                           ;bt_usb.h: 83: SPBRGH = 0x04; SPBRG=0xE1; tempo_ms(10);
  2930  007886  0E04               	movlw	4
  2931  007888  6EB0               	movwf	4016,c	;volatile
  2932  00788A  0EE1               	movlw	225
  2933  00788C  6EAF               	movwf	4015,c	;volatile
  2934  00788E  0E00               	movlw	0
  2935  007890  6E1C               	movwf	tempo_ms@i+1,c
  2936  007892  0E0A               	movlw	10
  2937  007894  6E1B               	movwf	tempo_ms@i,c
  2938  007896  EC98  F032         	call	_tempo_ms	;wreg free
  2939                           
  2940                           ;bt_usb.h: 84: sendr((char *)icp);tempo_ms(200);
  2941  00789A  0E7F               	movlw	high _icp
  2942  00789C  6E19               	movwf	sendr@st+1,c
  2943  00789E  0E43               	movlw	low _icp
  2944  0078A0  6E18               	movwf	sendr@st,c
  2945  0078A2  ECBC  F032         	call	_sendr	;wreg free
  2946  0078A6  0E00               	movlw	0
  2947  0078A8  6E1C               	movwf	tempo_ms@i+1,c
  2948  0078AA  0EC8               	movlw	200
  2949  0078AC  6E1B               	movwf	tempo_ms@i,c
  2950  0078AE  EC98  F032         	call	_tempo_ms	;wreg free
  2951                           
  2952                           ;bt_usb.h: 85: if(flagb==1){escreve_eeprom(35, 0); inverte_saida(31759);
  2953  0078B2  0429               	decf	_flagb,w,c
  2954  0078B4  102A               	iorwf	_flagb+1,w,c
  2955  0078B6  A4D8               	btfss	status,2,c
  2956  0078B8  D06F               	goto	l4653
  2957  0078BA  6E1F               	movwf	??_bt_ini& (0+255),c
  2958  0078BC  0E00               	movlw	0
  2959  0078BE  6E15               	movwf	escreve_eeprom@dado,c
  2960  0078C0  501F               	movf	??_bt_ini& (0+255),w,c
  2961  0078C2  0E23               	movlw	35
  2962  0078C4  ECD4  F031         	call	_escreve_eeprom
  2963  0078C8  0E7C               	movlw	124
  2964  0078CA  6E16               	movwf	inverte_saida@pino+1,c
  2965  0078CC  0E0F               	movlw	15
  2966  0078CE  6E15               	movwf	inverte_saida@pino,c
  2967  0078D0  EC31  F036         	call	_inverte_saida	;wreg free
  2968                           
  2969                           ;bt_usb.h: 86: sendr((char *)icb);tempo_ms(100);inverte_saida(31759);
  2970  0078D4  0E7F               	movlw	high _icb
  2971  0078D6  6E19               	movwf	sendr@st+1,c
  2972  0078D8  0E23               	movlw	low _icb
  2973  0078DA  6E18               	movwf	sendr@st,c
  2974  0078DC  ECBC  F032         	call	_sendr	;wreg free
  2975  0078E0  0E00               	movlw	0
  2976  0078E2  6E1C               	movwf	tempo_ms@i+1,c
  2977  0078E4  0E64               	movlw	100
  2978  0078E6  6E1B               	movwf	tempo_ms@i,c
  2979  0078E8  EC98  F032         	call	_tempo_ms	;wreg free
  2980  0078EC  0E7C               	movlw	124
  2981  0078EE  6E16               	movwf	inverte_saida@pino+1,c
  2982  0078F0  0E0F               	movlw	15
  2983  0078F2  6E15               	movwf	inverte_saida@pino,c
  2984  0078F4  EC31  F036         	call	_inverte_saida	;wreg free
  2985                           
  2986                           ;bt_usb.h: 87: tempo_ms(100);inverte_saida(31759);
  2987  0078F8  0E00               	movlw	0
  2988  0078FA  6E1C               	movwf	tempo_ms@i+1,c
  2989  0078FC  0E64               	movlw	100
  2990  0078FE  6E1B               	movwf	tempo_ms@i,c
  2991  007900  EC98  F032         	call	_tempo_ms	;wreg free
  2992  007904  0E7C               	movlw	124
  2993  007906  6E16               	movwf	inverte_saida@pino+1,c
  2994  007908  0E0F               	movlw	15
  2995  00790A  6E15               	movwf	inverte_saida@pino,c
  2996  00790C  EC31  F036         	call	_inverte_saida	;wreg free
  2997                           
  2998                           ;bt_usb.h: 88: sendr((char *)icn);tempo_ms(100);inverte_saida(31759);
  2999  007910  0E7E               	movlw	high _icn
  3000  007912  6E19               	movwf	sendr@st+1,c
  3001  007914  0EF8               	movlw	low _icn
  3002  007916  6E18               	movwf	sendr@st,c
  3003  007918  ECBC  F032         	call	_sendr	;wreg free
  3004  00791C  0E00               	movlw	0
  3005  00791E  6E1C               	movwf	tempo_ms@i+1,c
  3006  007920  0E64               	movlw	100
  3007  007922  6E1B               	movwf	tempo_ms@i,c
  3008  007924  EC98  F032         	call	_tempo_ms	;wreg free
  3009  007928  0E7C               	movlw	124
  3010  00792A  6E16               	movwf	inverte_saida@pino+1,c
  3011  00792C  0E0F               	movlw	15
  3012  00792E  6E15               	movwf	inverte_saida@pino,c
  3013  007930  EC31  F036         	call	_inverte_saida	;wreg free
  3014                           
  3015                           ;bt_usb.h: 89: tempo_ms(100);inverte_saida(31759);
  3016  007934  0E00               	movlw	0
  3017  007936  6E1C               	movwf	tempo_ms@i+1,c
  3018  007938  0E64               	movlw	100
  3019  00793A  6E1B               	movwf	tempo_ms@i,c
  3020  00793C  EC98  F032         	call	_tempo_ms	;wreg free
  3021  007940  0E7C               	movlw	124
  3022  007942  6E16               	movwf	inverte_saida@pino+1,c
  3023  007944  0E0F               	movlw	15
  3024  007946  6E15               	movwf	inverte_saida@pino,c
  3025  007948  EC31  F036         	call	_inverte_saida	;wreg free
  3026                           
  3027                           ;bt_usb.h: 90: sendr((char *)icr);tempo_ms(100);inverte_saida(31759);
  3028  00794C  0E7F               	movlw	high _icr
  3029  00794E  6E19               	movwf	sendr@st+1,c
  3030  007950  0E35               	movlw	low _icr
  3031  007952  6E18               	movwf	sendr@st,c
  3032  007954  ECBC  F032         	call	_sendr	;wreg free
  3033  007958  0E00               	movlw	0
  3034  00795A  6E1C               	movwf	tempo_ms@i+1,c
  3035  00795C  0E64               	movlw	100
  3036  00795E  6E1B               	movwf	tempo_ms@i,c
  3037  007960  EC98  F032         	call	_tempo_ms	;wreg free
  3038  007964  0E7C               	movlw	124
  3039  007966  6E16               	movwf	inverte_saida@pino+1,c
  3040  007968  0E0F               	movlw	15
  3041  00796A  6E15               	movwf	inverte_saida@pino,c
  3042  00796C  EC31  F036         	call	_inverte_saida	;wreg free
  3043                           
  3044                           ;bt_usb.h: 91: tempo_ms(100);inverte_saida(31759);
  3045  007970  0E00               	movlw	0
  3046  007972  6E1C               	movwf	tempo_ms@i+1,c
  3047  007974  0E64               	movlw	100
  3048  007976  6E1B               	movwf	tempo_ms@i,c
  3049  007978  EC98  F032         	call	_tempo_ms	;wreg free
  3050  00797C  0E7C               	movlw	124
  3051  00797E  6E16               	movwf	inverte_saida@pino+1,c
  3052  007980  0E0F               	movlw	15
  3053  007982  6E15               	movwf	inverte_saida@pino,c
  3054  007984  EC31  F036         	call	_inverte_saida	;wreg free
  3055                           
  3056                           ;bt_usb.h: 92: flagc=1;flagb=0; }
  3057  007988  0E00               	movlw	0
  3058  00798A  6E2C               	movwf	_flagc+1,c
  3059  00798C  0E01               	movlw	1
  3060  00798E  6E2B               	movwf	_flagc,c
  3061  007990  0E00               	movlw	0
  3062  007992  6E2A               	movwf	_flagb+1,c
  3063  007994  0E00               	movlw	0
  3064  007996  6E29               	movwf	_flagb,c
  3065  007998                     l4653:
  3066                           
  3067                           ;bt_usb.h: 93: SPBRGH = 0x09; SPBRG=0xC3; tempo_ms(10);
  3068  007998  0E09               	movlw	9
  3069  00799A  6EB0               	movwf	4016,c	;volatile
  3070  00799C  0EC3               	movlw	195
  3071  00799E  6EAF               	movwf	4015,c	;volatile
  3072  0079A0  0E00               	movlw	0
  3073  0079A2  6E1C               	movwf	tempo_ms@i+1,c
  3074  0079A4  0E0A               	movlw	10
  3075  0079A6  6E1B               	movwf	tempo_ms@i,c
  3076  0079A8  EC98  F032         	call	_tempo_ms	;wreg free
  3077                           
  3078                           ;bt_usb.h: 94: sendr((char *)icp);tempo_ms(200);
  3079  0079AC  0E7F               	movlw	high _icp
  3080  0079AE  6E19               	movwf	sendr@st+1,c
  3081  0079B0  0E43               	movlw	low _icp
  3082  0079B2  6E18               	movwf	sendr@st,c
  3083  0079B4  ECBC  F032         	call	_sendr	;wreg free
  3084  0079B8  0E00               	movlw	0
  3085  0079BA  6E1C               	movwf	tempo_ms@i+1,c
  3086  0079BC  0EC8               	movlw	200
  3087  0079BE  6E1B               	movwf	tempo_ms@i,c
  3088  0079C0  EC98  F032         	call	_tempo_ms	;wreg free
  3089                           
  3090                           ;bt_usb.h: 95: if(flagb==1){escreve_eeprom(35, 0); inverte_saida(31759);
  3091  0079C4  0429               	decf	_flagb,w,c
  3092  0079C6  102A               	iorwf	_flagb+1,w,c
  3093  0079C8  A4D8               	btfss	status,2,c
  3094  0079CA  D06F               	goto	l4703
  3095  0079CC  6E1F               	movwf	??_bt_ini& (0+255),c
  3096  0079CE  0E00               	movlw	0
  3097  0079D0  6E15               	movwf	escreve_eeprom@dado,c
  3098  0079D2  501F               	movf	??_bt_ini& (0+255),w,c
  3099  0079D4  0E23               	movlw	35
  3100  0079D6  ECD4  F031         	call	_escreve_eeprom
  3101  0079DA  0E7C               	movlw	124
  3102  0079DC  6E16               	movwf	inverte_saida@pino+1,c
  3103  0079DE  0E0F               	movlw	15
  3104  0079E0  6E15               	movwf	inverte_saida@pino,c
  3105  0079E2  EC31  F036         	call	_inverte_saida	;wreg free
  3106                           
  3107                           ;bt_usb.h: 96: sendr((char *)icb);tempo_ms(100);inverte_saida(31759);
  3108  0079E6  0E7F               	movlw	high _icb
  3109  0079E8  6E19               	movwf	sendr@st+1,c
  3110  0079EA  0E23               	movlw	low _icb
  3111  0079EC  6E18               	movwf	sendr@st,c
  3112  0079EE  ECBC  F032         	call	_sendr	;wreg free
  3113  0079F2  0E00               	movlw	0
  3114  0079F4  6E1C               	movwf	tempo_ms@i+1,c
  3115  0079F6  0E64               	movlw	100
  3116  0079F8  6E1B               	movwf	tempo_ms@i,c
  3117  0079FA  EC98  F032         	call	_tempo_ms	;wreg free
  3118  0079FE  0E7C               	movlw	124
  3119  007A00  6E16               	movwf	inverte_saida@pino+1,c
  3120  007A02  0E0F               	movlw	15
  3121  007A04  6E15               	movwf	inverte_saida@pino,c
  3122  007A06  EC31  F036         	call	_inverte_saida	;wreg free
  3123                           
  3124                           ;bt_usb.h: 97: tempo_ms(100);inverte_saida(31759);
  3125  007A0A  0E00               	movlw	0
  3126  007A0C  6E1C               	movwf	tempo_ms@i+1,c
  3127  007A0E  0E64               	movlw	100
  3128  007A10  6E1B               	movwf	tempo_ms@i,c
  3129  007A12  EC98  F032         	call	_tempo_ms	;wreg free
  3130  007A16  0E7C               	movlw	124
  3131  007A18  6E16               	movwf	inverte_saida@pino+1,c
  3132  007A1A  0E0F               	movlw	15
  3133  007A1C  6E15               	movwf	inverte_saida@pino,c
  3134  007A1E  EC31  F036         	call	_inverte_saida	;wreg free
  3135                           
  3136                           ;bt_usb.h: 98: sendr((char *)icn);tempo_ms(100);inverte_saida(31759);
  3137  007A22  0E7E               	movlw	high _icn
  3138  007A24  6E19               	movwf	sendr@st+1,c
  3139  007A26  0EF8               	movlw	low _icn
  3140  007A28  6E18               	movwf	sendr@st,c
  3141  007A2A  ECBC  F032         	call	_sendr	;wreg free
  3142  007A2E  0E00               	movlw	0
  3143  007A30  6E1C               	movwf	tempo_ms@i+1,c
  3144  007A32  0E64               	movlw	100
  3145  007A34  6E1B               	movwf	tempo_ms@i,c
  3146  007A36  EC98  F032         	call	_tempo_ms	;wreg free
  3147  007A3A  0E7C               	movlw	124
  3148  007A3C  6E16               	movwf	inverte_saida@pino+1,c
  3149  007A3E  0E0F               	movlw	15
  3150  007A40  6E15               	movwf	inverte_saida@pino,c
  3151  007A42  EC31  F036         	call	_inverte_saida	;wreg free
  3152                           
  3153                           ;bt_usb.h: 99: tempo_ms(100);inverte_saida(31759);
  3154  007A46  0E00               	movlw	0
  3155  007A48  6E1C               	movwf	tempo_ms@i+1,c
  3156  007A4A  0E64               	movlw	100
  3157  007A4C  6E1B               	movwf	tempo_ms@i,c
  3158  007A4E  EC98  F032         	call	_tempo_ms	;wreg free
  3159  007A52  0E7C               	movlw	124
  3160  007A54  6E16               	movwf	inverte_saida@pino+1,c
  3161  007A56  0E0F               	movlw	15
  3162  007A58  6E15               	movwf	inverte_saida@pino,c
  3163  007A5A  EC31  F036         	call	_inverte_saida	;wreg free
  3164                           
  3165                           ;bt_usb.h: 100: sendr((char *)icr);tempo_ms(100);inverte_saida(31759);
  3166  007A5E  0E7F               	movlw	high _icr
  3167  007A60  6E19               	movwf	sendr@st+1,c
  3168  007A62  0E35               	movlw	low _icr
  3169  007A64  6E18               	movwf	sendr@st,c
  3170  007A66  ECBC  F032         	call	_sendr	;wreg free
  3171  007A6A  0E00               	movlw	0
  3172  007A6C  6E1C               	movwf	tempo_ms@i+1,c
  3173  007A6E  0E64               	movlw	100
  3174  007A70  6E1B               	movwf	tempo_ms@i,c
  3175  007A72  EC98  F032         	call	_tempo_ms	;wreg free
  3176  007A76  0E7C               	movlw	124
  3177  007A78  6E16               	movwf	inverte_saida@pino+1,c
  3178  007A7A  0E0F               	movlw	15
  3179  007A7C  6E15               	movwf	inverte_saida@pino,c
  3180  007A7E  EC31  F036         	call	_inverte_saida	;wreg free
  3181                           
  3182                           ;bt_usb.h: 101: tempo_ms(100);inverte_saida(31759);
  3183  007A82  0E00               	movlw	0
  3184  007A84  6E1C               	movwf	tempo_ms@i+1,c
  3185  007A86  0E64               	movlw	100
  3186  007A88  6E1B               	movwf	tempo_ms@i,c
  3187  007A8A  EC98  F032         	call	_tempo_ms	;wreg free
  3188  007A8E  0E7C               	movlw	124
  3189  007A90  6E16               	movwf	inverte_saida@pino+1,c
  3190  007A92  0E0F               	movlw	15
  3191  007A94  6E15               	movwf	inverte_saida@pino,c
  3192  007A96  EC31  F036         	call	_inverte_saida	;wreg free
  3193                           
  3194                           ;bt_usb.h: 102: flagc=1;flagb=0; }
  3195  007A9A  0E00               	movlw	0
  3196  007A9C  6E2C               	movwf	_flagc+1,c
  3197  007A9E  0E01               	movlw	1
  3198  007AA0  6E2B               	movwf	_flagc,c
  3199  007AA2  0E00               	movlw	0
  3200  007AA4  6E2A               	movwf	_flagb+1,c
  3201  007AA6  0E00               	movlw	0
  3202  007AA8  6E29               	movwf	_flagb,c
  3203  007AAA                     l4703:
  3204                           
  3205                           ;bt_usb.h: 103: SPBRGH = 0x02; SPBRG=0x70; tempo_ms(10);
  3206  007AAA  0E02               	movlw	2
  3207  007AAC  6EB0               	movwf	4016,c	;volatile
  3208  007AAE  0E70               	movlw	112
  3209  007AB0  6EAF               	movwf	4015,c	;volatile
  3210  007AB2  0E00               	movlw	0
  3211  007AB4  6E1C               	movwf	tempo_ms@i+1,c
  3212  007AB6  0E0A               	movlw	10
  3213  007AB8  6E1B               	movwf	tempo_ms@i,c
  3214  007ABA  EC98  F032         	call	_tempo_ms	;wreg free
  3215                           
  3216                           ;bt_usb.h: 104: sendr((char *)icp);tempo_ms(200);
  3217  007ABE  0E7F               	movlw	high _icp
  3218  007AC0  6E19               	movwf	sendr@st+1,c
  3219  007AC2  0E43               	movlw	low _icp
  3220  007AC4  6E18               	movwf	sendr@st,c
  3221  007AC6  ECBC  F032         	call	_sendr	;wreg free
  3222  007ACA  0E00               	movlw	0
  3223  007ACC  6E1C               	movwf	tempo_ms@i+1,c
  3224  007ACE  0EC8               	movlw	200
  3225  007AD0  6E1B               	movwf	tempo_ms@i,c
  3226  007AD2  EC98  F032         	call	_tempo_ms	;wreg free
  3227                           
  3228                           ;bt_usb.h: 105: if(flagb==1){escreve_eeprom(35, 0); inverte_saida(31759);
  3229  007AD6  0429               	decf	_flagb,w,c
  3230  007AD8  102A               	iorwf	_flagb+1,w,c
  3231  007ADA  A4D8               	btfss	status,2,c
  3232  007ADC  D06F               	goto	l4753
  3233  007ADE  6E1F               	movwf	??_bt_ini& (0+255),c
  3234  007AE0  0E00               	movlw	0
  3235  007AE2  6E15               	movwf	escreve_eeprom@dado,c
  3236  007AE4  501F               	movf	??_bt_ini& (0+255),w,c
  3237  007AE6  0E23               	movlw	35
  3238  007AE8  ECD4  F031         	call	_escreve_eeprom
  3239  007AEC  0E7C               	movlw	124
  3240  007AEE  6E16               	movwf	inverte_saida@pino+1,c
  3241  007AF0  0E0F               	movlw	15
  3242  007AF2  6E15               	movwf	inverte_saida@pino,c
  3243  007AF4  EC31  F036         	call	_inverte_saida	;wreg free
  3244                           
  3245                           ;bt_usb.h: 106: sendr((char *)icb);tempo_ms(100);inverte_saida(31759);
  3246  007AF8  0E7F               	movlw	high _icb
  3247  007AFA  6E19               	movwf	sendr@st+1,c
  3248  007AFC  0E23               	movlw	low _icb
  3249  007AFE  6E18               	movwf	sendr@st,c
  3250  007B00  ECBC  F032         	call	_sendr	;wreg free
  3251  007B04  0E00               	movlw	0
  3252  007B06  6E1C               	movwf	tempo_ms@i+1,c
  3253  007B08  0E64               	movlw	100
  3254  007B0A  6E1B               	movwf	tempo_ms@i,c
  3255  007B0C  EC98  F032         	call	_tempo_ms	;wreg free
  3256  007B10  0E7C               	movlw	124
  3257  007B12  6E16               	movwf	inverte_saida@pino+1,c
  3258  007B14  0E0F               	movlw	15
  3259  007B16  6E15               	movwf	inverte_saida@pino,c
  3260  007B18  EC31  F036         	call	_inverte_saida	;wreg free
  3261                           
  3262                           ;bt_usb.h: 107: tempo_ms(100);inverte_saida(31759);
  3263  007B1C  0E00               	movlw	0
  3264  007B1E  6E1C               	movwf	tempo_ms@i+1,c
  3265  007B20  0E64               	movlw	100
  3266  007B22  6E1B               	movwf	tempo_ms@i,c
  3267  007B24  EC98  F032         	call	_tempo_ms	;wreg free
  3268  007B28  0E7C               	movlw	124
  3269  007B2A  6E16               	movwf	inverte_saida@pino+1,c
  3270  007B2C  0E0F               	movlw	15
  3271  007B2E  6E15               	movwf	inverte_saida@pino,c
  3272  007B30  EC31  F036         	call	_inverte_saida	;wreg free
  3273                           
  3274                           ;bt_usb.h: 108: sendr((char *)icn);tempo_ms(100);inverte_saida(31759);
  3275  007B34  0E7E               	movlw	high _icn
  3276  007B36  6E19               	movwf	sendr@st+1,c
  3277  007B38  0EF8               	movlw	low _icn
  3278  007B3A  6E18               	movwf	sendr@st,c
  3279  007B3C  ECBC  F032         	call	_sendr	;wreg free
  3280  007B40  0E00               	movlw	0
  3281  007B42  6E1C               	movwf	tempo_ms@i+1,c
  3282  007B44  0E64               	movlw	100
  3283  007B46  6E1B               	movwf	tempo_ms@i,c
  3284  007B48  EC98  F032         	call	_tempo_ms	;wreg free
  3285  007B4C  0E7C               	movlw	124
  3286  007B4E  6E16               	movwf	inverte_saida@pino+1,c
  3287  007B50  0E0F               	movlw	15
  3288  007B52  6E15               	movwf	inverte_saida@pino,c
  3289  007B54  EC31  F036         	call	_inverte_saida	;wreg free
  3290                           
  3291                           ;bt_usb.h: 109: tempo_ms(100);inverte_saida(31759);
  3292  007B58  0E00               	movlw	0
  3293  007B5A  6E1C               	movwf	tempo_ms@i+1,c
  3294  007B5C  0E64               	movlw	100
  3295  007B5E  6E1B               	movwf	tempo_ms@i,c
  3296  007B60  EC98  F032         	call	_tempo_ms	;wreg free
  3297  007B64  0E7C               	movlw	124
  3298  007B66  6E16               	movwf	inverte_saida@pino+1,c
  3299  007B68  0E0F               	movlw	15
  3300  007B6A  6E15               	movwf	inverte_saida@pino,c
  3301  007B6C  EC31  F036         	call	_inverte_saida	;wreg free
  3302                           
  3303                           ;bt_usb.h: 110: sendr((char *)icr);tempo_ms(100);inverte_saida(31759);
  3304  007B70  0E7F               	movlw	high _icr
  3305  007B72  6E19               	movwf	sendr@st+1,c
  3306  007B74  0E35               	movlw	low _icr
  3307  007B76  6E18               	movwf	sendr@st,c
  3308  007B78  ECBC  F032         	call	_sendr	;wreg free
  3309  007B7C  0E00               	movlw	0
  3310  007B7E  6E1C               	movwf	tempo_ms@i+1,c
  3311  007B80  0E64               	movlw	100
  3312  007B82  6E1B               	movwf	tempo_ms@i,c
  3313  007B84  EC98  F032         	call	_tempo_ms	;wreg free
  3314  007B88  0E7C               	movlw	124
  3315  007B8A  6E16               	movwf	inverte_saida@pino+1,c
  3316  007B8C  0E0F               	movlw	15
  3317  007B8E  6E15               	movwf	inverte_saida@pino,c
  3318  007B90  EC31  F036         	call	_inverte_saida	;wreg free
  3319                           
  3320                           ;bt_usb.h: 111: tempo_ms(100);inverte_saida(31759);
  3321  007B94  0E00               	movlw	0
  3322  007B96  6E1C               	movwf	tempo_ms@i+1,c
  3323  007B98  0E64               	movlw	100
  3324  007B9A  6E1B               	movwf	tempo_ms@i,c
  3325  007B9C  EC98  F032         	call	_tempo_ms	;wreg free
  3326  007BA0  0E7C               	movlw	124
  3327  007BA2  6E16               	movwf	inverte_saida@pino+1,c
  3328  007BA4  0E0F               	movlw	15
  3329  007BA6  6E15               	movwf	inverte_saida@pino,c
  3330  007BA8  EC31  F036         	call	_inverte_saida	;wreg free
  3331                           
  3332                           ;bt_usb.h: 112: flagc=1;flagb=0; }
  3333  007BAC  0E00               	movlw	0
  3334  007BAE  6E2C               	movwf	_flagc+1,c
  3335  007BB0  0E01               	movlw	1
  3336  007BB2  6E2B               	movwf	_flagc,c
  3337  007BB4  0E00               	movlw	0
  3338  007BB6  6E2A               	movwf	_flagb+1,c
  3339  007BB8  0E00               	movlw	0
  3340  007BBA  6E29               	movwf	_flagb,c
  3341  007BBC                     l4753:
  3342                           
  3343                           ;bt_usb.h: 113: }
  3344                           ;bt_usb.h: 115: if(le_eeprom(35)==0 ){
  3345  007BBC  0E23               	movlw	35
  3346  007BBE  ECBB  F031         	call	_le_eeprom
  3347  007BC2  0900               	iorlw	0
  3348  007BC4  A4D8               	btfss	status,2,c
  3349  007BC6  D02D               	goto	l4769
  3350                           
  3351                           ;bt_usb.h: 116: if(icb[0b00000111]==0b01100000){SPBRGH = 0x04; SPBRG=0xE1;}
  3352  007BC8  0E2A               	movlw	low (_icb+7)
  3353  007BCA  6EF6               	movwf	tblptrl,c
  3354  007BCC  0E7F               	movlw	high (_icb+7)
  3355  007BCE  6EF7               	movwf	tblptrh,c
  3356  007BD0  0008               	tblrd		*
  3357  007BD2  50F5               	movf	tablat,w,c
  3358  007BD4  0A60               	xorlw	96
  3359  007BD6  A4D8               	btfss	status,2,c
  3360  007BD8  D004               	goto	l4759
  3361  007BDA  0E04               	movlw	4
  3362  007BDC  6EB0               	movwf	4016,c	;volatile
  3363  007BDE  0EE1               	movlw	225
  3364  007BE0  6EAF               	movwf	4015,c	;volatile
  3365  007BE2                     l4759:
  3366                           
  3367                           ;bt_usb.h: 117: if(icb[0b00000111]==0b01100010){SPBRGH = 0x02; SPBRG=0x70;}
  3368  007BE2  0E2A               	movlw	low (_icb+7)
  3369  007BE4  6EF6               	movwf	tblptrl,c
  3370  007BE6  0E7F               	movlw	high (_icb+7)
  3371  007BE8  6EF7               	movwf	tblptrh,c
  3372  007BEA  0008               	tblrd		*
  3373  007BEC  50F5               	movf	tablat,w,c
  3374  007BEE  0A62               	xorlw	98
  3375  007BF0  A4D8               	btfss	status,2,c
  3376  007BF2  D004               	goto	l4763
  3377  007BF4  0E02               	movlw	2
  3378  007BF6  6EB0               	movwf	4016,c	;volatile
  3379  007BF8  0E70               	movlw	112
  3380  007BFA  6EAF               	movwf	4015,c	;volatile
  3381  007BFC                     l4763:
  3382                           
  3383                           ;bt_usb.h: 118: if(icb[0b00000111]==0b01101010){SPBRGH = 0x09; SPBRG=0xC3;}
  3384  007BFC  0E2A               	movlw	low (_icb+7)
  3385  007BFE  6EF6               	movwf	tblptrl,c
  3386  007C00  0E7F               	movlw	high (_icb+7)
  3387  007C02  6EF7               	movwf	tblptrh,c
  3388  007C04  0008               	tblrd		*
  3389  007C06  50F5               	movf	tablat,w,c
  3390  007C08  0A6A               	xorlw	106
  3391  007C0A  A4D8               	btfss	status,2,c
  3392  007C0C  D004               	goto	l4767
  3393  007C0E  0E09               	movlw	9
  3394  007C10  6EB0               	movwf	4016,c	;volatile
  3395  007C12  0EC3               	movlw	195
  3396  007C14  6EAF               	movwf	4015,c	;volatile
  3397  007C16                     l4767:
  3398                           
  3399                           ;bt_usb.h: 119: tempo_ms(100);
  3400  007C16  0E00               	movlw	0
  3401  007C18  6E1C               	movwf	tempo_ms@i+1,c
  3402  007C1A  0E64               	movlw	100
  3403  007C1C  6E1B               	movwf	tempo_ms@i,c
  3404  007C1E  EC98  F032         	call	_tempo_ms	;wreg free
  3405  007C22                     l4769:
  3406                           
  3407                           ;bt_usb.h: 120: }
  3408                           ;bt_usb.h: 123: if (le_eeprom(33)>0 && le_eeprom(34)>0 && le_eeprom(35)>0){
  3409  007C22  0E21               	movlw	33
  3410  007C24  ECBB  F031         	call	_le_eeprom
  3411  007C28  0900               	iorlw	0
  3412  007C2A  B4D8               	btfsc	status,2,c
  3413  007C2C  D0C8               	goto	l4845
  3414  007C2E  0E22               	movlw	34
  3415  007C30  ECBB  F031         	call	_le_eeprom
  3416  007C34  0900               	iorlw	0
  3417  007C36  B4D8               	btfsc	status,2,c
  3418  007C38  D0C2               	goto	l4845
  3419  007C3A  0E23               	movlw	35
  3420  007C3C  ECBB  F031         	call	_le_eeprom
  3421  007C40  0900               	iorlw	0
  3422  007C42  B4D8               	btfsc	status,2,c
  3423  007C44  D0BC               	goto	l4845
  3424                           
  3425                           ;bt_usb.h: 124: SPBRGH = 0x02; SPBRG=0x70; tempo_ms(10);sendr((char *)icg);tempo_ms(500)
      +                          ;sputc(26);tempo_ms(500);
  3426  007C46  0E02               	movlw	2
  3427  007C48  6EB0               	movwf	4016,c	;volatile
  3428  007C4A  0E70               	movlw	112
  3429  007C4C  6EAF               	movwf	4015,c	;volatile
  3430  007C4E  0E00               	movlw	0
  3431  007C50  6E1C               	movwf	tempo_ms@i+1,c
  3432  007C52  0E0A               	movlw	10
  3433  007C54  6E1B               	movwf	tempo_ms@i,c
  3434  007C56  EC98  F032         	call	_tempo_ms	;wreg free
  3435  007C5A  0E7F               	movlw	high _icg
  3436  007C5C  6E19               	movwf	sendr@st+1,c
  3437  007C5E  0E2C               	movlw	low _icg
  3438  007C60  6E18               	movwf	sendr@st,c
  3439  007C62  ECBC  F032         	call	_sendr	;wreg free
  3440  007C66  0E01               	movlw	1
  3441  007C68  6E1C               	movwf	tempo_ms@i+1,c
  3442  007C6A  0EF4               	movlw	244
  3443  007C6C  6E1B               	movwf	tempo_ms@i,c
  3444  007C6E  EC98  F032         	call	_tempo_ms	;wreg free
  3445  007C72  0E1A               	movlw	26
  3446  007C74  ECE5  F031         	call	_sputc
  3447  007C78  0E01               	movlw	1
  3448  007C7A  6E1C               	movwf	tempo_ms@i+1,c
  3449  007C7C  0EF4               	movlw	244
  3450  007C7E  6E1B               	movwf	tempo_ms@i,c
  3451  007C80  EC98  F032         	call	_tempo_ms	;wreg free
  3452                           
  3453                           ;bt_usb.h: 125: if(flagb==0){
  3454  007C84  502A               	movf	_flagb+1,w,c
  3455  007C86  1029               	iorwf	_flagb,w,c
  3456  007C88  A4D8               	btfss	status,2,c
  3457  007C8A  D01F               	goto	l4801
  3458                           
  3459                           ;bt_usb.h: 126: SPBRGH = 0x04; SPBRG=0xE1; tempo_ms(10);sendr((char *)icg);tempo_ms(500)
      +                          ;sputc(26);tempo_ms(500);}
  3460  007C8C  0E04               	movlw	4
  3461  007C8E  6EB0               	movwf	4016,c	;volatile
  3462  007C90  0EE1               	movlw	225
  3463  007C92  6EAF               	movwf	4015,c	;volatile
  3464  007C94  0E00               	movlw	0
  3465  007C96  6E1C               	movwf	tempo_ms@i+1,c
  3466  007C98  0E0A               	movlw	10
  3467  007C9A  6E1B               	movwf	tempo_ms@i,c
  3468  007C9C  EC98  F032         	call	_tempo_ms	;wreg free
  3469  007CA0  0E7F               	movlw	high _icg
  3470  007CA2  6E19               	movwf	sendr@st+1,c
  3471  007CA4  0E2C               	movlw	low _icg
  3472  007CA6  6E18               	movwf	sendr@st,c
  3473  007CA8  ECBC  F032         	call	_sendr	;wreg free
  3474  007CAC  0E01               	movlw	1
  3475  007CAE  6E1C               	movwf	tempo_ms@i+1,c
  3476  007CB0  0EF4               	movlw	244
  3477  007CB2  6E1B               	movwf	tempo_ms@i,c
  3478  007CB4  EC98  F032         	call	_tempo_ms	;wreg free
  3479  007CB8  0E1A               	movlw	26
  3480  007CBA  ECE5  F031         	call	_sputc
  3481  007CBE  0E01               	movlw	1
  3482  007CC0  6E1C               	movwf	tempo_ms@i+1,c
  3483  007CC2  0EF4               	movlw	244
  3484  007CC4  6E1B               	movwf	tempo_ms@i,c
  3485  007CC6  EC98  F032         	call	_tempo_ms	;wreg free
  3486  007CCA                     l4801:
  3487                           
  3488                           ;bt_usb.h: 127: if(flagb==0){
  3489  007CCA  502A               	movf	_flagb+1,w,c
  3490  007CCC  1029               	iorwf	_flagb,w,c
  3491  007CCE  A4D8               	btfss	status,2,c
  3492  007CD0  D01F               	goto	l4815
  3493                           
  3494                           ;bt_usb.h: 128: SPBRGH = 0x01; SPBRG=0x37; tempo_ms(10);sendr((char *)icg);tempo_ms(500)
      +                          ;sputc(26);tempo_ms(500);}
  3495  007CD2  0E01               	movlw	1
  3496  007CD4  6EB0               	movwf	4016,c	;volatile
  3497  007CD6  0E37               	movlw	55
  3498  007CD8  6EAF               	movwf	4015,c	;volatile
  3499  007CDA  0E00               	movlw	0
  3500  007CDC  6E1C               	movwf	tempo_ms@i+1,c
  3501  007CDE  0E0A               	movlw	10
  3502  007CE0  6E1B               	movwf	tempo_ms@i,c
  3503  007CE2  EC98  F032         	call	_tempo_ms	;wreg free
  3504  007CE6  0E7F               	movlw	high _icg
  3505  007CE8  6E19               	movwf	sendr@st+1,c
  3506  007CEA  0E2C               	movlw	low _icg
  3507  007CEC  6E18               	movwf	sendr@st,c
  3508  007CEE  ECBC  F032         	call	_sendr	;wreg free
  3509  007CF2  0E01               	movlw	1
  3510  007CF4  6E1C               	movwf	tempo_ms@i+1,c
  3511  007CF6  0EF4               	movlw	244
  3512  007CF8  6E1B               	movwf	tempo_ms@i,c
  3513  007CFA  EC98  F032         	call	_tempo_ms	;wreg free
  3514  007CFE  0E1A               	movlw	26
  3515  007D00  ECE5  F031         	call	_sputc
  3516  007D04  0E01               	movlw	1
  3517  007D06  6E1C               	movwf	tempo_ms@i+1,c
  3518  007D08  0EF4               	movlw	244
  3519  007D0A  6E1B               	movwf	tempo_ms@i,c
  3520  007D0C  EC98  F032         	call	_tempo_ms	;wreg free
  3521  007D10                     l4815:
  3522                           
  3523                           ;bt_usb.h: 129: if(icg[0b00000111]==0b01101000){SPBRGH = 0x04; SPBRG=0xE1;}
  3524  007D10  0E33               	movlw	low (_icg+7)
  3525  007D12  6EF6               	movwf	tblptrl,c
  3526  007D14  0E7F               	movlw	high (_icg+7)
  3527  007D16  6EF7               	movwf	tblptrh,c
  3528  007D18  0008               	tblrd		*
  3529  007D1A  50F5               	movf	tablat,w,c
  3530  007D1C  0A68               	xorlw	104
  3531  007D1E  A4D8               	btfss	status,2,c
  3532  007D20  D004               	goto	l4819
  3533  007D22  0E04               	movlw	4
  3534  007D24  6EB0               	movwf	4016,c	;volatile
  3535  007D26  0EE1               	movlw	225
  3536  007D28  6EAF               	movwf	4015,c	;volatile
  3537  007D2A                     l4819:
  3538                           
  3539                           ;bt_usb.h: 130: if(icg[0b00000111]==0b01101010){SPBRGH = 0x02; SPBRG=0x70;}
  3540  007D2A  0E33               	movlw	low (_icg+7)
  3541  007D2C  6EF6               	movwf	tblptrl,c
  3542  007D2E  0E7F               	movlw	high (_icg+7)
  3543  007D30  6EF7               	movwf	tblptrh,c
  3544  007D32  0008               	tblrd		*
  3545  007D34  50F5               	movf	tablat,w,c
  3546  007D36  0A6A               	xorlw	106
  3547  007D38  A4D8               	btfss	status,2,c
  3548  007D3A  D004               	goto	l4823
  3549  007D3C  0E02               	movlw	2
  3550  007D3E  6EB0               	movwf	4016,c	;volatile
  3551  007D40  0E70               	movlw	112
  3552  007D42  6EAF               	movwf	4015,c	;volatile
  3553  007D44                     l4823:
  3554                           
  3555                           ;bt_usb.h: 131: if(icg[0b00000111]==0b01101100){SPBRGH = 0x01; SPBRG=0x37;}
  3556  007D44  0E33               	movlw	low (_icg+7)
  3557  007D46  6EF6               	movwf	tblptrl,c
  3558  007D48  0E7F               	movlw	high (_icg+7)
  3559  007D4A  6EF7               	movwf	tblptrh,c
  3560  007D4C  0008               	tblrd		*
  3561  007D4E  50F5               	movf	tablat,w,c
  3562  007D50  0A6C               	xorlw	108
  3563  007D52  A4D8               	btfss	status,2,c
  3564  007D54  D004               	goto	l4827
  3565  007D56  0E01               	movlw	1
  3566  007D58  6EB0               	movwf	4016,c	;volatile
  3567  007D5A  0E37               	movlw	55
  3568  007D5C  6EAF               	movwf	4015,c	;volatile
  3569  007D5E                     l4827:
  3570                           
  3571                           ;bt_usb.h: 132: tempo_ms(500);
  3572  007D5E  0E01               	movlw	1
  3573  007D60  6E1C               	movwf	tempo_ms@i+1,c
  3574  007D62  0EF4               	movlw	244
  3575  007D64  6E1B               	movwf	tempo_ms@i,c
  3576  007D66  EC98  F032         	call	_tempo_ms	;wreg free
  3577                           
  3578                           ;bt_usb.h: 133: sendr((char *)icm);tempo_ms(500);sputc(26);tempo_ms(500);
  3579  007D6A  0E7F               	movlw	high _icm
  3580  007D6C  6E19               	movwf	sendr@st+1,c
  3581  007D6E  0E09               	movlw	low _icm
  3582  007D70  6E18               	movwf	sendr@st,c
  3583  007D72  ECBC  F032         	call	_sendr	;wreg free
  3584  007D76  0E01               	movlw	1
  3585  007D78  6E1C               	movwf	tempo_ms@i+1,c
  3586  007D7A  0EF4               	movlw	244
  3587  007D7C  6E1B               	movwf	tempo_ms@i,c
  3588  007D7E  EC98  F032         	call	_tempo_ms	;wreg free
  3589  007D82  0E1A               	movlw	26
  3590  007D84  ECE5  F031         	call	_sputc
  3591  007D88  0E01               	movlw	1
  3592  007D8A  6E1C               	movwf	tempo_ms@i+1,c
  3593  007D8C  0EF4               	movlw	244
  3594  007D8E  6E1B               	movwf	tempo_ms@i,c
  3595  007D90  EC98  F032         	call	_tempo_ms	;wreg free
  3596                           
  3597                           ;bt_usb.h: 134: if(flagb==1){escreve_eeprom(33, 0);flagb=0;tempo_ms(10);}
  3598  007D94  0429               	decf	_flagb,w,c
  3599  007D96  102A               	iorwf	_flagb+1,w,c
  3600  007D98  A4D8               	btfss	status,2,c
  3601  007D9A  D011               	goto	l4845
  3602  007D9C  6E1F               	movwf	??_bt_ini& (0+255),c
  3603  007D9E  0E00               	movlw	0
  3604  007DA0  6E15               	movwf	escreve_eeprom@dado,c
  3605  007DA2  501F               	movf	??_bt_ini& (0+255),w,c
  3606  007DA4  0E21               	movlw	33
  3607  007DA6  ECD4  F031         	call	_escreve_eeprom
  3608  007DAA  0E00               	movlw	0
  3609  007DAC  6E2A               	movwf	_flagb+1,c
  3610  007DAE  0E00               	movlw	0
  3611  007DB0  6E29               	movwf	_flagb,c
  3612  007DB2  0E00               	movlw	0
  3613  007DB4  6E1C               	movwf	tempo_ms@i+1,c
  3614  007DB6  0E0A               	movlw	10
  3615  007DB8  6E1B               	movwf	tempo_ms@i,c
  3616  007DBA  EC98  F032         	call	_tempo_ms	;wreg free
  3617  007DBE                     l4845:
  3618                           
  3619                           ;bt_usb.h: 135: }
  3620                           ;bt_usb.h: 137: if(le_eeprom(33)==0 ){
  3621  007DBE  0E21               	movlw	33
  3622  007DC0  ECBB  F031         	call	_le_eeprom
  3623  007DC4  0900               	iorlw	0
  3624  007DC6  A4D8               	btfss	status,2,c
  3625  007DC8  D027               	goto	l4859
  3626                           
  3627                           ;bt_usb.h: 138: if(icg[0b00000111]==0b01101000){SPBRGH = 0x04; SPBRG=0xE1;}
  3628  007DCA  0E33               	movlw	low (_icg+7)
  3629  007DCC  6EF6               	movwf	tblptrl,c
  3630  007DCE  0E7F               	movlw	high (_icg+7)
  3631  007DD0  6EF7               	movwf	tblptrh,c
  3632  007DD2  0008               	tblrd		*
  3633  007DD4  50F5               	movf	tablat,w,c
  3634  007DD6  0A68               	xorlw	104
  3635  007DD8  A4D8               	btfss	status,2,c
  3636  007DDA  D004               	goto	l4851
  3637  007DDC  0E04               	movlw	4
  3638  007DDE  6EB0               	movwf	4016,c	;volatile
  3639  007DE0  0EE1               	movlw	225
  3640  007DE2  6EAF               	movwf	4015,c	;volatile
  3641  007DE4                     l4851:
  3642                           
  3643                           ;bt_usb.h: 139: if(icg[0b00000111]==0b01101010){SPBRGH = 0x02; SPBRG=0x70;}
  3644  007DE4  0E33               	movlw	low (_icg+7)
  3645  007DE6  6EF6               	movwf	tblptrl,c
  3646  007DE8  0E7F               	movlw	high (_icg+7)
  3647  007DEA  6EF7               	movwf	tblptrh,c
  3648  007DEC  0008               	tblrd		*
  3649  007DEE  50F5               	movf	tablat,w,c
  3650  007DF0  0A6A               	xorlw	106
  3651  007DF2  A4D8               	btfss	status,2,c
  3652  007DF4  D004               	goto	l4855
  3653  007DF6  0E02               	movlw	2
  3654  007DF8  6EB0               	movwf	4016,c	;volatile
  3655  007DFA  0E70               	movlw	112
  3656  007DFC  6EAF               	movwf	4015,c	;volatile
  3657  007DFE                     l4855:
  3658                           
  3659                           ;bt_usb.h: 140: if(icg[0b00000111]==0b01101100){SPBRGH = 0x01; SPBRG=0x37;}
  3660  007DFE  0E33               	movlw	low (_icg+7)
  3661  007E00  6EF6               	movwf	tblptrl,c
  3662  007E02  0E7F               	movlw	high (_icg+7)
  3663  007E04  6EF7               	movwf	tblptrh,c
  3664  007E06  0008               	tblrd		*
  3665  007E08  50F5               	movf	tablat,w,c
  3666  007E0A  0A6C               	xorlw	108
  3667  007E0C  A4D8               	btfss	status,2,c
  3668  007E0E  D004               	goto	l4859
  3669  007E10  0E01               	movlw	1
  3670  007E12  6EB0               	movwf	4016,c	;volatile
  3671  007E14  0E37               	movlw	55
  3672  007E16  6EAF               	movwf	4015,c	;volatile
  3673  007E18                     l4859:
  3674                           
  3675                           ;bt_usb.h: 141: }
  3676                           ;bt_usb.h: 143: if (le_eeprom(33)>0 && le_eeprom(34)>0 && le_eeprom(35)>0) {
  3677  007E18  0E21               	movlw	33
  3678  007E1A  ECBB  F031         	call	_le_eeprom
  3679  007E1E  0900               	iorlw	0
  3680  007E20  B4D8               	btfsc	status,2,c
  3681  007E22  D028               	goto	l4879
  3682  007E24  0E22               	movlw	34
  3683  007E26  ECBB  F031         	call	_le_eeprom
  3684  007E2A  0900               	iorlw	0
  3685  007E2C  B4D8               	btfsc	status,2,c
  3686  007E2E  D022               	goto	l4879
  3687  007E30  0E23               	movlw	35
  3688  007E32  ECBB  F031         	call	_le_eeprom
  3689  007E36  0900               	iorlw	0
  3690  007E38  B4D8               	btfsc	status,2,c
  3691  007E3A  D01C               	goto	l4879
  3692                           
  3693                           ;bt_usb.h: 144: flagb=0;configBR6();
  3694  007E3C  0E00               	movlw	0
  3695  007E3E  6E2A               	movwf	_flagb+1,c
  3696  007E40  0E00               	movlw	0
  3697  007E42  6E29               	movwf	_flagb,c
  3698  007E44  EC40  F033         	call	_configBR6	;wreg free
  3699                           
  3700                           ;bt_usb.h: 145: INTCON2bits.RBPU = 0;
  3701  007E48  9EF1               	bcf	intcon2,7,c	;volatile
  3702                           
  3703                           ;bt_usb.h: 146: if(flagb==1){escreve_eeprom(34, 0);flagb=0;tempo_ms(10);}
  3704  007E4A  0429               	decf	_flagb,w,c
  3705  007E4C  102A               	iorwf	_flagb+1,w,c
  3706  007E4E  A4D8               	btfss	status,2,c
  3707  007E50  D011               	goto	l4879
  3708  007E52  6E1F               	movwf	??_bt_ini& (0+255),c
  3709  007E54  0E00               	movlw	0
  3710  007E56  6E15               	movwf	escreve_eeprom@dado,c
  3711  007E58  501F               	movf	??_bt_ini& (0+255),w,c
  3712  007E5A  0E22               	movlw	34
  3713  007E5C  ECD4  F031         	call	_escreve_eeprom
  3714  007E60  0E00               	movlw	0
  3715  007E62  6E2A               	movwf	_flagb+1,c
  3716  007E64  0E00               	movlw	0
  3717  007E66  6E29               	movwf	_flagb,c
  3718  007E68  0E00               	movlw	0
  3719  007E6A  6E1C               	movwf	tempo_ms@i+1,c
  3720  007E6C  0E0A               	movlw	10
  3721  007E6E  6E1B               	movwf	tempo_ms@i,c
  3722  007E70  EC98  F032         	call	_tempo_ms	;wreg free
  3723  007E74                     l4879:
  3724                           
  3725                           ;bt_usb.h: 147: }
  3726                           ;bt_usb.h: 148: if(le_eeprom(34)==0 ){
  3727  007E74  0E22               	movlw	34
  3728  007E76  ECBB  F031         	call	_le_eeprom
  3729  007E7A  0900               	iorlw	0
  3730  007E7C  A4D8               	btfss	status,2,c
  3731  007E7E  D027               	goto	l537
  3732                           
  3733                           ;bt_usb.h: 149: if(icgs[0b00001000]==0b01110010){SPBRGH = 0x04; SPBRG=0xE1;}
  3734  007E80  0ED9               	movlw	low (_icgs+8)
  3735  007E82  6EF6               	movwf	tblptrl,c
  3736  007E84  0E7E               	movlw	high (_icgs+8)
  3737  007E86  6EF7               	movwf	tblptrh,c
  3738  007E88  0008               	tblrd		*
  3739  007E8A  50F5               	movf	tablat,w,c
  3740  007E8C  0A72               	xorlw	114
  3741  007E8E  A4D8               	btfss	status,2,c
  3742  007E90  D004               	goto	l4885
  3743  007E92  0E04               	movlw	4
  3744  007E94  6EB0               	movwf	4016,c	;volatile
  3745  007E96  0EE1               	movlw	225
  3746  007E98  6EAF               	movwf	4015,c	;volatile
  3747  007E9A                     l4885:
  3748                           
  3749                           ;bt_usb.h: 150: if(icgs[0b00001000]==0b01100010){SPBRGH = 0x02; SPBRG=0x70;}
  3750  007E9A  0ED9               	movlw	low (_icgs+8)
  3751  007E9C  6EF6               	movwf	tblptrl,c
  3752  007E9E  0E7E               	movlw	high (_icgs+8)
  3753  007EA0  6EF7               	movwf	tblptrh,c
  3754  007EA2  0008               	tblrd		*
  3755  007EA4  50F5               	movf	tablat,w,c
  3756  007EA6  0A62               	xorlw	98
  3757  007EA8  A4D8               	btfss	status,2,c
  3758  007EAA  D004               	goto	l4889
  3759  007EAC  0E02               	movlw	2
  3760  007EAE  6EB0               	movwf	4016,c	;volatile
  3761  007EB0  0E70               	movlw	112
  3762  007EB2  6EAF               	movwf	4015,c	;volatile
  3763  007EB4                     l4889:
  3764                           
  3765                           ;bt_usb.h: 151: if(icgs[0b00001000]==0b01100110){SPBRGH = 0x01; SPBRG=0x37;}
  3766  007EB4  0ED9               	movlw	low (_icgs+8)
  3767  007EB6  6EF6               	movwf	tblptrl,c
  3768  007EB8  0E7E               	movlw	high (_icgs+8)
  3769  007EBA  6EF7               	movwf	tblptrh,c
  3770  007EBC  0008               	tblrd		*
  3771  007EBE  50F5               	movf	tablat,w,c
  3772  007EC0  0A66               	xorlw	102
  3773  007EC2  A4D8               	btfss	status,2,c
  3774  007EC4  D004               	goto	l537
  3775  007EC6  0E01               	movlw	1
  3776  007EC8  6EB0               	movwf	4016,c	;volatile
  3777  007ECA  0E37               	movlw	55
  3778  007ECC  6EAF               	movwf	4015,c	;volatile
  3779  007ECE                     l537:
  3780  007ECE  0012               	return	
  3781  007ED0                     __end_of_bt_ini:
  3782                           	opt stack 0
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           prodh	equ	0xFF4
  3788                           prodl	equ	0xFF3
  3789                           intcon	equ	0xFF2
  3790                           intcon2	equ	0xFF1
  3791                           intcon3	equ	0xFF0
  3792                           postinc0	equ	0xFEE
  3793                           wreg	equ	0xFE8
  3794                           postdec1	equ	0xFE5
  3795                           fsr1l	equ	0xFE1
  3796                           status	equ	0xFD8
  3797                           
  3798 ;; *************** function _le_eeprom *****************
  3799 ;; Defined at:
  3800 ;;		line 425 in file "SanUSB48X.h"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  endereco        1    wreg     unsigned char 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  endereco        1   20[COMRAM] unsigned char 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      unsigned char 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3814 ;;      Params:         0       0       0       0       0       0       0       0       0
  3815 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3817 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3818 ;;Total ram usage:        1 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    2
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_clock_int_48MHz
  3825 ;;		_bt_ini
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text14
  3830  006376                     __ptext14:
  3831                           	opt stack 0
  3832  006376                     _le_eeprom:
  3833                           	opt stack 27
  3834                           
  3835                           ;incstack = 0
  3836                           ;le_eeprom@endereco stored from wreg
  3837  006376  CFE8 F015          	movff	wreg,le_eeprom@endereco
  3838                           
  3839                           ;SanUSB48X.h: 427: EEADR = endereco;
  3840  00637A  C015  FFA9         	movff	le_eeprom@endereco,4009	;volatile
  3841                           
  3842                           ;SanUSB48X.h: 428: EECON1bits.WREN = 0;
  3843  00637E  94A6               	bcf	4006,2,c	;volatile
  3844                           
  3845                           ;SanUSB48X.h: 429: EECON1bits.EEPGD = 0;
  3846  006380  9EA6               	bcf	4006,7,c	;volatile
  3847                           
  3848                           ;SanUSB48X.h: 430: EECON1bits.CFGS = 0;
  3849  006382  9CA6               	bcf	4006,6,c	;volatile
  3850                           
  3851                           ;SanUSB48X.h: 431: EECON1bits.RD = 1;
  3852  006384  80A6               	bsf	4006,0,c	;volatile
  3853                           
  3854                           ;SanUSB48X.h: 432: return EEDATA;
  3855  006386  50A8               	movf	4008,w,c	;volatile
  3856  006388  0012               	return	
  3857  00638A                     __end_of_le_eeprom:
  3858                           	opt stack 0
  3859                           tblptru	equ	0xFF8
  3860                           tblptrh	equ	0xFF7
  3861                           tblptrl	equ	0xFF6
  3862                           tablat	equ	0xFF5
  3863                           prodh	equ	0xFF4
  3864                           prodl	equ	0xFF3
  3865                           intcon	equ	0xFF2
  3866                           intcon2	equ	0xFF1
  3867                           intcon3	equ	0xFF0
  3868                           postinc0	equ	0xFEE
  3869                           wreg	equ	0xFE8
  3870                           postdec1	equ	0xFE5
  3871                           fsr1l	equ	0xFE1
  3872                           status	equ	0xFD8
  3873                           
  3874 ;; *************** function _escreve_eeprom *****************
  3875 ;; Defined at:
  3876 ;;		line 412 in file "SanUSB48X.h"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  endereco        1    wreg     unsigned char 
  3879 ;;  dado            1   20[COMRAM] unsigned char 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  endereco        1   21[COMRAM] unsigned char 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;		None               void
  3884 ;; Registers used:
  3885 ;;		wreg, status,2
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3891 ;;      Params:         1       0       0       0       0       0       0       0       0
  3892 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3894 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3895 ;;Total ram usage:        2 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    2
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_bt_ini
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text15
  3906  0063A8                     __ptext15:
  3907                           	opt stack 0
  3908  0063A8                     _escreve_eeprom:
  3909                           	opt stack 27
  3910                           
  3911                           ;incstack = 0
  3912                           ;escreve_eeprom@endereco stored from wreg
  3913  0063A8  CFE8 F016          	movff	wreg,escreve_eeprom@endereco
  3914                           
  3915                           ;SanUSB48X.h: 414: EECON1bits.EEPGD = 0;
  3916  0063AC  9EA6               	bcf	4006,7,c	;volatile
  3917                           
  3918                           ;SanUSB48X.h: 415: EECON1bits.CFGS = 0;
  3919  0063AE  9CA6               	bcf	4006,6,c	;volatile
  3920                           
  3921                           ;SanUSB48X.h: 416: EECON1bits.WREN = 1;
  3922  0063B0  84A6               	bsf	4006,2,c	;volatile
  3923                           
  3924                           ;SanUSB48X.h: 417: EEADR = endereco;
  3925  0063B2  C016  FFA9         	movff	escreve_eeprom@endereco,4009	;volatile
  3926                           
  3927                           ;SanUSB48X.h: 418: EEDATA = dado;
  3928  0063B6  C015  FFA8         	movff	escreve_eeprom@dado,4008	;volatile
  3929                           
  3930                           ;SanUSB48X.h: 419: EECON2 = 0x55;
  3931  0063BA  0E55               	movlw	85
  3932  0063BC  6EA7               	movwf	4007,c	;volatile
  3933                           
  3934                           ;SanUSB48X.h: 420: EECON2 = 0xaa;
  3935  0063BE  0EAA               	movlw	170
  3936  0063C0  6EA7               	movwf	4007,c	;volatile
  3937                           
  3938                           ;SanUSB48X.h: 421: EECON1bits.WR = 1;
  3939  0063C2  82A6               	bsf	4006,1,c	;volatile
  3940  0063C4                     l367:
  3941  0063C4  A2A6               	btfss	4006,1,c	;volatile
  3942  0063C6  0012               	return	
  3943  0063C8  D7FD               	goto	l367
  3944  0063CA                     __end_of_escreve_eeprom:
  3945                           	opt stack 0
  3946                           tblptru	equ	0xFF8
  3947                           tblptrh	equ	0xFF7
  3948                           tblptrl	equ	0xFF6
  3949                           tablat	equ	0xFF5
  3950                           prodh	equ	0xFF4
  3951                           prodl	equ	0xFF3
  3952                           intcon	equ	0xFF2
  3953                           intcon2	equ	0xFF1
  3954                           intcon3	equ	0xFF0
  3955                           postinc0	equ	0xFEE
  3956                           wreg	equ	0xFE8
  3957                           postdec1	equ	0xFE5
  3958                           fsr1l	equ	0xFE1
  3959                           status	equ	0xFD8
  3960                           
  3961 ;; *************** function _configBR6 *****************
  3962 ;; Defined at:
  3963 ;;		line 68 in file "bt_usb.h"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;		None
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;		None
  3968 ;; Return value:  Size  Location     Type
  3969 ;;		None               void
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3977 ;;      Params:         0       0       0       0       0       0       0       0       0
  3978 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3979 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3980 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3981 ;;Total ram usage:        0 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    6
  3984 ;; This function calls:
  3985 ;;		_inverte_saida
  3986 ;;		_modoAttention
  3987 ;;		_modoNormal
  3988 ;;		_sendr
  3989 ;;		_tempo_ms
  3990 ;; This function is called by:
  3991 ;;		_bt_ini
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text16
  3996  006680                     __ptext16:
  3997                           	opt stack 0
  3998  006680                     _configBR6:
  3999                           	opt stack 23
  4000                           
  4001                           ;bt_usb.h: 70: modoAttention();
  4002                           
  4003                           ;incstack = 0
  4004  006680  EC56  F032         	call	_modoAttention	;wreg free
  4005                           
  4006                           ;bt_usb.h: 71: flagb=0;sendr((char *)icgs);
  4007  006684  0E00               	movlw	0
  4008  006686  6E2A               	movwf	_flagb+1,c
  4009  006688  0E00               	movlw	0
  4010  00668A  6E29               	movwf	_flagb,c
  4011  00668C  0E7E               	movlw	high _icgs
  4012  00668E  6E19               	movwf	sendr@st+1,c
  4013  006690  0ED1               	movlw	low _icgs
  4014  006692  6E18               	movwf	sendr@st,c
  4015  006694  ECBC  F032         	call	_sendr	;wreg free
  4016                           
  4017                           ;bt_usb.h: 72: inverte_saida(31759); tempo_ms(1000);
  4018  006698  0E7C               	movlw	124
  4019  00669A  6E16               	movwf	inverte_saida@pino+1,c
  4020  00669C  0E0F               	movlw	15
  4021  00669E  6E15               	movwf	inverte_saida@pino,c
  4022  0066A0  EC31  F036         	call	_inverte_saida	;wreg free
  4023  0066A4  0E03               	movlw	3
  4024  0066A6  6E1C               	movwf	tempo_ms@i+1,c
  4025  0066A8  0EE8               	movlw	232
  4026  0066AA  6E1B               	movwf	tempo_ms@i,c
  4027  0066AC  EC98  F032         	call	_tempo_ms	;wreg free
  4028                           
  4029                           ;bt_usb.h: 73: sendr((char *)icms);
  4030  0066B0  0E7E               	movlw	high _icms
  4031  0066B2  6E19               	movwf	sendr@st+1,c
  4032  0066B4  0EE5               	movlw	low _icms
  4033  0066B6  6E18               	movwf	sendr@st,c
  4034  0066B8  ECBC  F032         	call	_sendr	;wreg free
  4035                           
  4036                           ;bt_usb.h: 74: inverte_saida(31759); tempo_ms(1000);
  4037  0066BC  0E7C               	movlw	124
  4038  0066BE  6E16               	movwf	inverte_saida@pino+1,c
  4039  0066C0  0E0F               	movlw	15
  4040  0066C2  6E15               	movwf	inverte_saida@pino,c
  4041  0066C4  EC31  F036         	call	_inverte_saida	;wreg free
  4042  0066C8  0E03               	movlw	3
  4043  0066CA  6E1C               	movwf	tempo_ms@i+1,c
  4044  0066CC  0EE8               	movlw	232
  4045  0066CE  6E1B               	movwf	tempo_ms@i,c
  4046  0066D0  EC98  F032         	call	_tempo_ms	;wreg free
  4047                           
  4048                           ;bt_usb.h: 75: modoNormal();
  4049  0066D4  EC6D  F033         	call	_modoNormal	;wreg free
  4050  0066D8  0012               	return	
  4051  0066DA                     __end_of_configBR6:
  4052                           	opt stack 0
  4053                           tblptru	equ	0xFF8
  4054                           tblptrh	equ	0xFF7
  4055                           tblptrl	equ	0xFF6
  4056                           tablat	equ	0xFF5
  4057                           prodh	equ	0xFF4
  4058                           prodl	equ	0xFF3
  4059                           intcon	equ	0xFF2
  4060                           intcon2	equ	0xFF1
  4061                           intcon3	equ	0xFF0
  4062                           postinc0	equ	0xFEE
  4063                           wreg	equ	0xFE8
  4064                           postdec1	equ	0xFE5
  4065                           fsr1l	equ	0xFE1
  4066                           status	equ	0xFD8
  4067                           
  4068 ;; *************** function _modoNormal *****************
  4069 ;; Defined at:
  4070 ;;		line 59 in file "bt_usb.h"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;		None
  4075 ;; Return value:  Size  Location     Type
  4076 ;;		None               void
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4084 ;;      Params:         0       0       0       0       0       0       0       0       0
  4085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4087 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4088 ;;Total ram usage:        0 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    5
  4091 ;; This function calls:
  4092 ;;		_nivel_baixo
  4093 ;;		_resetBT
  4094 ;; This function is called by:
  4095 ;;		_configBR6
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text17
  4100  0066DA                     __ptext17:
  4101                           	opt stack 0
  4102  0066DA                     _modoNormal:
  4103                           	opt stack 23
  4104                           
  4105                           ;bt_usb.h: 61: nivel_baixo(31754);
  4106                           
  4107                           ;incstack = 0
  4108  0066DA  0E7C               	movlw	124
  4109  0066DC  6E16               	movwf	nivel_baixo@pino+1,c
  4110  0066DE  0E0A               	movlw	10
  4111  0066E0  6E15               	movwf	nivel_baixo@pino,c
  4112  0066E2  EC7F  F038         	call	_nivel_baixo	;wreg free
  4113                           
  4114                           ;bt_usb.h: 62: resetBT();
  4115  0066E6  EC37  F032         	call	_resetBT	;wreg free
  4116                           
  4117                           ;bt_usb.h: 63: if(icgs[0b00001000]==0b01110010){SPBRGH = 0x04; SPBRG=0xE1;}
  4118  0066EA  0ED9               	movlw	low (_icgs+8)
  4119  0066EC  6EF6               	movwf	tblptrl,c
  4120  0066EE  0E7E               	movlw	high (_icgs+8)
  4121  0066F0  6EF7               	movwf	tblptrh,c
  4122  0066F2  0008               	tblrd		*
  4123  0066F4  50F5               	movf	tablat,w,c
  4124  0066F6  0A72               	xorlw	114
  4125  0066F8  A4D8               	btfss	status,2,c
  4126  0066FA  D004               	goto	l4349
  4127  0066FC  0E04               	movlw	4
  4128  0066FE  6EB0               	movwf	4016,c	;volatile
  4129  006700  0EE1               	movlw	225
  4130  006702  6EAF               	movwf	4015,c	;volatile
  4131  006704                     l4349:
  4132                           
  4133                           ;bt_usb.h: 64: if(icgs[0b00001000]==0b01100010){SPBRGH = 0x02; SPBRG=0x70;}
  4134  006704  0ED9               	movlw	low (_icgs+8)
  4135  006706  6EF6               	movwf	tblptrl,c
  4136  006708  0E7E               	movlw	high (_icgs+8)
  4137  00670A  6EF7               	movwf	tblptrh,c
  4138  00670C  0008               	tblrd		*
  4139  00670E  50F5               	movf	tablat,w,c
  4140  006710  0A62               	xorlw	98
  4141  006712  A4D8               	btfss	status,2,c
  4142  006714  D004               	goto	l4353
  4143  006716  0E02               	movlw	2
  4144  006718  6EB0               	movwf	4016,c	;volatile
  4145  00671A  0E70               	movlw	112
  4146  00671C  6EAF               	movwf	4015,c	;volatile
  4147  00671E                     l4353:
  4148                           
  4149                           ;bt_usb.h: 65: if(icgs[0b00001000]==0b01100110){SPBRGH = 0x01; SPBRG=0x37;}
  4150  00671E  0ED9               	movlw	low (_icgs+8)
  4151  006720  6EF6               	movwf	tblptrl,c
  4152  006722  0E7E               	movlw	high (_icgs+8)
  4153  006724  6EF7               	movwf	tblptrh,c
  4154  006726  0008               	tblrd		*
  4155  006728  50F5               	movf	tablat,w,c
  4156  00672A  0A66               	xorlw	102
  4157  00672C  A4D8               	btfss	status,2,c
  4158  00672E  D004               	goto	l506
  4159  006730  0E01               	movlw	1
  4160  006732  6EB0               	movwf	4016,c	;volatile
  4161  006734  0E37               	movlw	55
  4162  006736  6EAF               	movwf	4015,c	;volatile
  4163  006738                     l506:
  4164  006738  0012               	return	
  4165  00673A                     __end_of_modoNormal:
  4166                           	opt stack 0
  4167                           tblptru	equ	0xFF8
  4168                           tblptrh	equ	0xFF7
  4169                           tblptrl	equ	0xFF6
  4170                           tablat	equ	0xFF5
  4171                           prodh	equ	0xFF4
  4172                           prodl	equ	0xFF3
  4173                           intcon	equ	0xFF2
  4174                           intcon2	equ	0xFF1
  4175                           intcon3	equ	0xFF0
  4176                           postinc0	equ	0xFEE
  4177                           wreg	equ	0xFE8
  4178                           postdec1	equ	0xFE5
  4179                           fsr1l	equ	0xFE1
  4180                           status	equ	0xFD8
  4181                           
  4182 ;; *************** function _resetBT *****************
  4183 ;; Defined at:
  4184 ;;		line 40 in file "bt_usb.h"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;		None
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;		None
  4189 ;; Return value:  Size  Location     Type
  4190 ;;		None               void
  4191 ;; Registers used:
  4192 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4198 ;;      Params:         0       0       0       0       0       0       0       0       0
  4199 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4201 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4202 ;;Total ram usage:        0 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    4
  4205 ;; This function calls:
  4206 ;;		_inverte_saida
  4207 ;;		_sendr
  4208 ;;		_tempo_ms
  4209 ;; This function is called by:
  4210 ;;		_modoNormal
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text18
  4215  00646E                     __ptext18:
  4216                           	opt stack 0
  4217  00646E                     _resetBT:
  4218                           	opt stack 23
  4219                           
  4220                           ;bt_usb.h: 42: inverte_saida(31759); tempo_ms(1000);
  4221                           
  4222                           ;incstack = 0
  4223  00646E  0E7C               	movlw	124
  4224  006470  6E16               	movwf	inverte_saida@pino+1,c
  4225  006472  0E0F               	movlw	15
  4226  006474  6E15               	movwf	inverte_saida@pino,c
  4227  006476  EC31  F036         	call	_inverte_saida	;wreg free
  4228  00647A  0E03               	movlw	3
  4229  00647C  6E1C               	movwf	tempo_ms@i+1,c
  4230  00647E  0EE8               	movlw	232
  4231  006480  6E1B               	movwf	tempo_ms@i,c
  4232  006482  EC98  F032         	call	_tempo_ms	;wreg free
  4233                           
  4234                           ;bt_usb.h: 43: sendr((char *)icrs);
  4235  006486  0E7F               	movlw	high _icrs
  4236  006488  6E19               	movwf	sendr@st+1,c
  4237  00648A  0E18               	movlw	low _icrs
  4238  00648C  6E18               	movwf	sendr@st,c
  4239  00648E  ECBC  F032         	call	_sendr	;wreg free
  4240                           
  4241                           ;bt_usb.h: 44: inverte_saida(31759); tempo_ms(2000);
  4242  006492  0E7C               	movlw	124
  4243  006494  6E16               	movwf	inverte_saida@pino+1,c
  4244  006496  0E0F               	movlw	15
  4245  006498  6E15               	movwf	inverte_saida@pino,c
  4246  00649A  EC31  F036         	call	_inverte_saida	;wreg free
  4247  00649E  0E07               	movlw	7
  4248  0064A0  6E1C               	movwf	tempo_ms@i+1,c
  4249  0064A2  0ED0               	movlw	208
  4250  0064A4  6E1B               	movwf	tempo_ms@i,c
  4251  0064A6  EC98  F032         	call	_tempo_ms	;wreg free
  4252  0064AA  0012               	return	
  4253  0064AC                     __end_of_resetBT:
  4254                           	opt stack 0
  4255                           tblptru	equ	0xFF8
  4256                           tblptrh	equ	0xFF7
  4257                           tblptrl	equ	0xFF6
  4258                           tablat	equ	0xFF5
  4259                           prodh	equ	0xFF4
  4260                           prodl	equ	0xFF3
  4261                           intcon	equ	0xFF2
  4262                           intcon2	equ	0xFF1
  4263                           intcon3	equ	0xFF0
  4264                           postinc0	equ	0xFEE
  4265                           wreg	equ	0xFE8
  4266                           postdec1	equ	0xFE5
  4267                           fsr1l	equ	0xFE1
  4268                           status	equ	0xFD8
  4269                           
  4270 ;; *************** function _nivel_baixo *****************
  4271 ;; Defined at:
  4272 ;;		line 199 in file "SanUSB48X.h"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  pino            2   20[COMRAM] unsigned int 
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;		None
  4277 ;; Return value:  Size  Location     Type
  4278 ;;		None               void
  4279 ;; Registers used:
  4280 ;;		wreg, status,2, status,0
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4286 ;;      Params:         2       0       0       0       0       0       0       0       0
  4287 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4288 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4289 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4290 ;;Total ram usage:        4 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:    2
  4293 ;; This function calls:
  4294 ;;		Nothing
  4295 ;; This function is called by:
  4296 ;;		_modoNormal
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text19
  4301  0070FE                     __ptext19:
  4302                           	opt stack 0
  4303  0070FE                     _nivel_baixo:
  4304                           	opt stack 25
  4305                           
  4306                           ;SanUSB48X.h: 201: switch(pino){
  4307                           
  4308                           ;incstack = 0
  4309  0070FE  D048               	goto	l4291
  4310  007100                     l205:
  4311  007100  9092               	bcf	3986,0,c	;volatile
  4312  007102  9080               	bcf	3968,0,c	;volatile
  4313  007104  D096               	goto	l228
  4314  007106                     l207:
  4315  007106  9292               	bcf	3986,1,c	;volatile
  4316  007108  9280               	bcf	3968,1,c	;volatile
  4317  00710A  D093               	goto	l228
  4318  00710C                     l208:
  4319  00710C  9492               	bcf	3986,2,c	;volatile
  4320  00710E  9480               	bcf	3968,2,c	;volatile
  4321  007110  D090               	goto	l228
  4322  007112                     l209:
  4323  007112  9692               	bcf	3986,3,c	;volatile
  4324  007114  9680               	bcf	3968,3,c	;volatile
  4325  007116  D08D               	goto	l228
  4326  007118                     l210:
  4327  007118  9892               	bcf	3986,4,c	;volatile
  4328  00711A  9880               	bcf	3968,4,c	;volatile
  4329  00711C  D08A               	goto	l228
  4330  00711E                     l211:
  4331  00711E  9A92               	bcf	3986,5,c	;volatile
  4332  007120  9A80               	bcf	3968,5,c	;volatile
  4333  007122  D087               	goto	l228
  4334  007124                     l4283:
  4335  007124  0E00               	movlw	0
  4336  007126  6E92               	movwf	3986,c	;volatile
  4337  007128  0E00               	movlw	0
  4338  00712A  6E89               	movwf	3977,c	;volatile
  4339  00712C  D082               	goto	l228
  4340  00712E                     l213:
  4341  00712E  9093               	bcf	3987,0,c	;volatile
  4342  007130  9081               	bcf	3969,0,c	;volatile
  4343  007132  D07F               	goto	l228
  4344  007134                     l214:
  4345  007134  9293               	bcf	3987,1,c	;volatile
  4346  007136  9281               	bcf	3969,1,c	;volatile
  4347  007138  D07C               	goto	l228
  4348  00713A                     l215:
  4349  00713A  9493               	bcf	3987,2,c	;volatile
  4350  00713C  9481               	bcf	3969,2,c	;volatile
  4351  00713E  D079               	goto	l228
  4352  007140                     l216:
  4353  007140  9693               	bcf	3987,3,c	;volatile
  4354  007142  9681               	bcf	3969,3,c	;volatile
  4355  007144  D076               	goto	l228
  4356  007146                     l217:
  4357  007146  9893               	bcf	3987,4,c	;volatile
  4358  007148  9881               	bcf	3969,4,c	;volatile
  4359  00714A  D073               	goto	l228
  4360  00714C                     l218:
  4361  00714C  9A93               	bcf	3987,5,c	;volatile
  4362  00714E  9A81               	bcf	3969,5,c	;volatile
  4363  007150  D070               	goto	l228
  4364  007152                     l219:
  4365  007152  9C93               	bcf	3987,6,c	;volatile
  4366  007154  9C81               	bcf	3969,6,c	;volatile
  4367  007156  D06D               	goto	l228
  4368  007158                     l220:
  4369  007158  9E93               	bcf	3987,7,c	;volatile
  4370  00715A  9E81               	bcf	3969,7,c	;volatile
  4371  00715C  D06A               	goto	l228
  4372  00715E                     l4285:
  4373  00715E  0E00               	movlw	0
  4374  007160  6E93               	movwf	3987,c	;volatile
  4375  007162  0E00               	movlw	0
  4376  007164  6E8A               	movwf	3978,c	;volatile
  4377  007166  D065               	goto	l228
  4378  007168                     l222:
  4379  007168  9094               	bcf	3988,0,c	;volatile
  4380  00716A  9082               	bcf	3970,0,c	;volatile
  4381  00716C  D062               	goto	l228
  4382  00716E                     l223:
  4383  00716E  9294               	bcf	3988,1,c	;volatile
  4384  007170  9282               	bcf	3970,1,c	;volatile
  4385  007172  D05F               	goto	l228
  4386  007174                     l224:
  4387  007174  9494               	bcf	3988,2,c	;volatile
  4388  007176  9482               	bcf	3970,2,c	;volatile
  4389  007178  D05C               	goto	l228
  4390  00717A                     l225:
  4391  00717A  9C94               	bcf	3988,6,c	;volatile
  4392  00717C  9C82               	bcf	3970,6,c	;volatile
  4393  00717E  D059               	goto	l228
  4394  007180                     l226:
  4395  007180  9E94               	bcf	3988,7,c	;volatile
  4396  007182  9E82               	bcf	3970,7,c	;volatile
  4397  007184  D056               	goto	l228
  4398  007186                     l4287:
  4399  007186  0E00               	movlw	0
  4400  007188  6E94               	movwf	3988,c	;volatile
  4401  00718A  0E00               	movlw	0
  4402  00718C  6E8B               	movwf	3979,c	;volatile
  4403  00718E  D051               	goto	l228
  4404  007190                     l4291:
  4405  007190  C015  F017         	movff	nivel_baixo@pino,??_nivel_baixo
  4406  007194  C016  F018         	movff	nivel_baixo@pino+1,??_nivel_baixo+1
  4407                           
  4408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4409                           ; Switch size 1, requested type "space"
  4410                           ; Number of cases is 2, Range of values is 15 to 124
  4411                           ; switch strategies available:
  4412                           ; Name         Instructions Cycles
  4413                           ; simple_byte            7     4 (average)
  4414                           ;	Chosen strategy is simple_byte
  4415  007198  5018               	movf	??_nivel_baixo+1,w,c
  4416  00719A  0A0F               	xorlw	15	; case 15
  4417  00719C  B4D8               	btfsc	status,2,c
  4418  00719E  D004               	goto	l5347
  4419  0071A0  0A73               	xorlw	115	; case 124
  4420  0071A2  B4D8               	btfsc	status,2,c
  4421  0071A4  D00C               	goto	l5349
  4422  0071A6  D045               	goto	l228
  4423  0071A8                     l5347:
  4424                           
  4425                           ; Switch size 1, requested type "space"
  4426                           ; Number of cases is 3, Range of values is 128 to 130
  4427                           ; switch strategies available:
  4428                           ; Name         Instructions Cycles
  4429                           ; simple_byte           10     6 (average)
  4430                           ;	Chosen strategy is simple_byte
  4431  0071A8  5017               	movf	??_nivel_baixo,w,c
  4432  0071AA  0A80               	xorlw	128	; case 128
  4433  0071AC  B4D8               	btfsc	status,2,c
  4434  0071AE  D7BA               	goto	l4283
  4435  0071B0  0A01               	xorlw	1	; case 129
  4436  0071B2  B4D8               	btfsc	status,2,c
  4437  0071B4  D7D4               	goto	l4285
  4438  0071B6  0A03               	xorlw	3	; case 130
  4439  0071B8  B4D8               	btfsc	status,2,c
  4440  0071BA  D7E5               	goto	l4287
  4441  0071BC  D03A               	goto	l228
  4442  0071BE                     l5349:
  4443                           
  4444                           ; Switch size 1, requested type "space"
  4445                           ; Number of cases is 19, Range of values is 0 to 23
  4446                           ; switch strategies available:
  4447                           ; Name         Instructions Cycles
  4448                           ; simple_byte           58    30 (average)
  4449                           ;	Chosen strategy is simple_byte
  4450  0071BE  5017               	movf	??_nivel_baixo,w,c
  4451  0071C0  0A00               	xorlw	0	; case 0
  4452  0071C2  B4D8               	btfsc	status,2,c
  4453  0071C4  D79D               	goto	l205
  4454  0071C6  0A01               	xorlw	1	; case 1
  4455  0071C8  B4D8               	btfsc	status,2,c
  4456  0071CA  D79D               	goto	l207
  4457  0071CC  0A03               	xorlw	3	; case 2
  4458  0071CE  B4D8               	btfsc	status,2,c
  4459  0071D0  D79D               	goto	l208
  4460  0071D2  0A01               	xorlw	1	; case 3
  4461  0071D4  B4D8               	btfsc	status,2,c
  4462  0071D6  D79D               	goto	l209
  4463  0071D8  0A07               	xorlw	7	; case 4
  4464  0071DA  B4D8               	btfsc	status,2,c
  4465  0071DC  D79D               	goto	l210
  4466  0071DE  0A01               	xorlw	1	; case 5
  4467  0071E0  B4D8               	btfsc	status,2,c
  4468  0071E2  D79D               	goto	l211
  4469  0071E4  0A0D               	xorlw	13	; case 8
  4470  0071E6  B4D8               	btfsc	status,2,c
  4471  0071E8  D7A2               	goto	l213
  4472  0071EA  0A01               	xorlw	1	; case 9
  4473  0071EC  B4D8               	btfsc	status,2,c
  4474  0071EE  D7A2               	goto	l214
  4475  0071F0  0A03               	xorlw	3	; case 10
  4476  0071F2  B4D8               	btfsc	status,2,c
  4477  0071F4  D7A2               	goto	l215
  4478  0071F6  0A01               	xorlw	1	; case 11
  4479  0071F8  B4D8               	btfsc	status,2,c
  4480  0071FA  D7A2               	goto	l216
  4481  0071FC  0A07               	xorlw	7	; case 12
  4482  0071FE  B4D8               	btfsc	status,2,c
  4483  007200  D7A2               	goto	l217
  4484  007202  0A01               	xorlw	1	; case 13
  4485  007204  B4D8               	btfsc	status,2,c
  4486  007206  D7A2               	goto	l218
  4487  007208  0A03               	xorlw	3	; case 14
  4488  00720A  B4D8               	btfsc	status,2,c
  4489  00720C  D7A2               	goto	l219
  4490  00720E  0A01               	xorlw	1	; case 15
  4491  007210  B4D8               	btfsc	status,2,c
  4492  007212  D7A2               	goto	l220
  4493  007214  0A1F               	xorlw	31	; case 16
  4494  007216  B4D8               	btfsc	status,2,c
  4495  007218  D7A7               	goto	l222
  4496  00721A  0A01               	xorlw	1	; case 17
  4497  00721C  B4D8               	btfsc	status,2,c
  4498  00721E  D7A7               	goto	l223
  4499  007220  0A03               	xorlw	3	; case 18
  4500  007222  B4D8               	btfsc	status,2,c
  4501  007224  D7A7               	goto	l224
  4502  007226  0A04               	xorlw	4	; case 22
  4503  007228  B4D8               	btfsc	status,2,c
  4504  00722A  D7A7               	goto	l225
  4505  00722C  0A01               	xorlw	1	; case 23
  4506  00722E  B4D8               	btfsc	status,2,c
  4507  007230  D7A7               	goto	l226
  4508  007232                     l228:
  4509  007232  0012               	return	
  4510  007234                     __end_of_nivel_baixo:
  4511                           	opt stack 0
  4512                           tblptru	equ	0xFF8
  4513                           tblptrh	equ	0xFF7
  4514                           tblptrl	equ	0xFF6
  4515                           tablat	equ	0xFF5
  4516                           prodh	equ	0xFF4
  4517                           prodl	equ	0xFF3
  4518                           intcon	equ	0xFF2
  4519                           intcon2	equ	0xFF1
  4520                           intcon3	equ	0xFF0
  4521                           postinc0	equ	0xFEE
  4522                           wreg	equ	0xFE8
  4523                           postdec1	equ	0xFE5
  4524                           fsr1l	equ	0xFE1
  4525                           status	equ	0xFD8
  4526                           
  4527 ;; *************** function _modoAttention *****************
  4528 ;; Defined at:
  4529 ;;		line 47 in file "bt_usb.h"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;		None
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;		None
  4534 ;; Return value:  Size  Location     Type
  4535 ;;		None               void
  4536 ;; Registers used:
  4537 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4543 ;;      Params:         0       0       0       0       0       0       0       0       0
  4544 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4546 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4547 ;;Total ram usage:        0 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; Hardware stack levels required when called:    5
  4550 ;; This function calls:
  4551 ;;		_ATC
  4552 ;;		_nivel_alto
  4553 ;; This function is called by:
  4554 ;;		_configBR6
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text20
  4559  0064AC                     __ptext20:
  4560                           	opt stack 0
  4561  0064AC                     _modoAttention:
  4562                           	opt stack 23
  4563                           
  4564                           ;bt_usb.h: 49: nivel_alto(31754);
  4565                           
  4566                           ;incstack = 0
  4567  0064AC  0E7C               	movlw	124
  4568  0064AE  6E16               	movwf	nivel_alto@pino+1,c
  4569  0064B0  0E0A               	movlw	10
  4570  0064B2  6E15               	movwf	nivel_alto@pino,c
  4571  0064B4  EC4C  F037         	call	_nivel_alto	;wreg free
  4572                           
  4573                           ;bt_usb.h: 50: SPBRGH = 0x02; SPBRG=0x70; ATC();
  4574  0064B8  0E02               	movlw	2
  4575  0064BA  6EB0               	movwf	4016,c	;volatile
  4576  0064BC  0E70               	movlw	112
  4577  0064BE  6EAF               	movwf	4015,c	;volatile
  4578  0064C0  EC18  F032         	call	_ATC	;wreg free
  4579                           
  4580                           ;bt_usb.h: 51: if(flagb==0){
  4581  0064C4  502A               	movf	_flagb+1,w,c
  4582  0064C6  1029               	iorwf	_flagb,w,c
  4583  0064C8  A4D8               	btfss	status,2,c
  4584  0064CA  D006               	goto	l4335
  4585                           
  4586                           ;bt_usb.h: 52: SPBRGH = 0x01; SPBRG=0x37; ATC();
  4587  0064CC  0E01               	movlw	1
  4588  0064CE  6EB0               	movwf	4016,c	;volatile
  4589  0064D0  0E37               	movlw	55
  4590  0064D2  6EAF               	movwf	4015,c	;volatile
  4591  0064D4  EC18  F032         	call	_ATC	;wreg free
  4592  0064D8                     l4335:
  4593                           
  4594                           ;bt_usb.h: 53: }
  4595                           ;bt_usb.h: 54: if(flagb==0){
  4596  0064D8  502A               	movf	_flagb+1,w,c
  4597  0064DA  1029               	iorwf	_flagb,w,c
  4598  0064DC  A4D8               	btfss	status,2,c
  4599  0064DE  D006               	goto	l500
  4600                           
  4601                           ;bt_usb.h: 55: SPBRGH = 0x04; SPBRG=0xE1; ATC();
  4602  0064E0  0E04               	movlw	4
  4603  0064E2  6EB0               	movwf	4016,c	;volatile
  4604  0064E4  0EE1               	movlw	225
  4605  0064E6  6EAF               	movwf	4015,c	;volatile
  4606  0064E8  EC18  F032         	call	_ATC	;wreg free
  4607  0064EC                     l500:
  4608  0064EC  0012               	return	
  4609  0064EE                     __end_of_modoAttention:
  4610                           	opt stack 0
  4611                           tblptru	equ	0xFF8
  4612                           tblptrh	equ	0xFF7
  4613                           tblptrl	equ	0xFF6
  4614                           tablat	equ	0xFF5
  4615                           prodh	equ	0xFF4
  4616                           prodl	equ	0xFF3
  4617                           intcon	equ	0xFF2
  4618                           intcon2	equ	0xFF1
  4619                           intcon3	equ	0xFF0
  4620                           postinc0	equ	0xFEE
  4621                           wreg	equ	0xFE8
  4622                           postdec1	equ	0xFE5
  4623                           fsr1l	equ	0xFE1
  4624                           status	equ	0xFD8
  4625                           
  4626 ;; *************** function _nivel_alto *****************
  4627 ;; Defined at:
  4628 ;;		line 169 in file "SanUSB48X.h"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  pino            2   20[COMRAM] unsigned int 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;		None               void
  4635 ;; Registers used:
  4636 ;;		wreg, status,2, status,0
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4642 ;;      Params:         2       0       0       0       0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4644 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4645 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4646 ;;Total ram usage:        4 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    2
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_modoAttention
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text21
  4657  006E98                     __ptext21:
  4658                           	opt stack 0
  4659  006E98                     _nivel_alto:
  4660                           	opt stack 25
  4661                           
  4662                           ;SanUSB48X.h: 172: switch(pino){
  4663                           
  4664                           ;incstack = 0
  4665  006E98  D045               	goto	l4271
  4666  006E9A                     l178:
  4667  006E9A  9092               	bcf	3986,0,c	;volatile
  4668  006E9C  8080               	bsf	3968,0,c	;volatile
  4669  006E9E  D093               	goto	l201
  4670  006EA0                     l180:
  4671  006EA0  9292               	bcf	3986,1,c	;volatile
  4672  006EA2  8280               	bsf	3968,1,c	;volatile
  4673  006EA4  D090               	goto	l201
  4674  006EA6                     l181:
  4675  006EA6  9492               	bcf	3986,2,c	;volatile
  4676  006EA8  8480               	bsf	3968,2,c	;volatile
  4677  006EAA  D08D               	goto	l201
  4678  006EAC                     l182:
  4679  006EAC  9692               	bcf	3986,3,c	;volatile
  4680  006EAE  8680               	bsf	3968,3,c	;volatile
  4681  006EB0  D08A               	goto	l201
  4682  006EB2                     l183:
  4683  006EB2  9892               	bcf	3986,4,c	;volatile
  4684  006EB4  8880               	bsf	3968,4,c	;volatile
  4685  006EB6  D087               	goto	l201
  4686  006EB8                     l184:
  4687  006EB8  9A92               	bcf	3986,5,c	;volatile
  4688  006EBA  8A80               	bsf	3968,5,c	;volatile
  4689  006EBC  D084               	goto	l201
  4690  006EBE                     l4257:
  4691  006EBE  0E00               	movlw	0
  4692  006EC0  6E92               	movwf	3986,c	;volatile
  4693  006EC2  6889               	setf	3977,c	;volatile
  4694  006EC4  D080               	goto	l201
  4695  006EC6                     l186:
  4696  006EC6  9093               	bcf	3987,0,c	;volatile
  4697  006EC8  8081               	bsf	3969,0,c	;volatile
  4698  006ECA  D07D               	goto	l201
  4699  006ECC                     l187:
  4700  006ECC  9293               	bcf	3987,1,c	;volatile
  4701  006ECE  8281               	bsf	3969,1,c	;volatile
  4702  006ED0  D07A               	goto	l201
  4703  006ED2                     l188:
  4704  006ED2  9493               	bcf	3987,2,c	;volatile
  4705  006ED4  8481               	bsf	3969,2,c	;volatile
  4706  006ED6  D077               	goto	l201
  4707  006ED8                     l189:
  4708  006ED8  9693               	bcf	3987,3,c	;volatile
  4709  006EDA  8681               	bsf	3969,3,c	;volatile
  4710  006EDC  D074               	goto	l201
  4711  006EDE                     l190:
  4712  006EDE  9893               	bcf	3987,4,c	;volatile
  4713  006EE0  8881               	bsf	3969,4,c	;volatile
  4714  006EE2  D071               	goto	l201
  4715  006EE4                     l191:
  4716  006EE4  9A93               	bcf	3987,5,c	;volatile
  4717  006EE6  8A81               	bsf	3969,5,c	;volatile
  4718  006EE8  D06E               	goto	l201
  4719  006EEA                     l192:
  4720  006EEA  9C93               	bcf	3987,6,c	;volatile
  4721  006EEC  8C81               	bsf	3969,6,c	;volatile
  4722  006EEE  D06B               	goto	l201
  4723  006EF0                     l193:
  4724  006EF0  9E93               	bcf	3987,7,c	;volatile
  4725  006EF2  8E81               	bsf	3969,7,c	;volatile
  4726  006EF4  D068               	goto	l201
  4727  006EF6                     l4261:
  4728  006EF6  0E00               	movlw	0
  4729  006EF8  6E93               	movwf	3987,c	;volatile
  4730  006EFA  688A               	setf	3978,c	;volatile
  4731  006EFC  D064               	goto	l201
  4732  006EFE                     l195:
  4733  006EFE  9094               	bcf	3988,0,c	;volatile
  4734  006F00  8082               	bsf	3970,0,c	;volatile
  4735  006F02  D061               	goto	l201
  4736  006F04                     l196:
  4737  006F04  9294               	bcf	3988,1,c	;volatile
  4738  006F06  8282               	bsf	3970,1,c	;volatile
  4739  006F08  D05E               	goto	l201
  4740  006F0A                     l197:
  4741  006F0A  9494               	bcf	3988,2,c	;volatile
  4742  006F0C  8482               	bsf	3970,2,c	;volatile
  4743  006F0E  D05B               	goto	l201
  4744  006F10                     l198:
  4745  006F10  9C94               	bcf	3988,6,c	;volatile
  4746  006F12  8C82               	bsf	3970,6,c	;volatile
  4747  006F14  D058               	goto	l201
  4748  006F16                     l199:
  4749  006F16  9E94               	bcf	3988,7,c	;volatile
  4750  006F18  8E82               	bsf	3970,7,c	;volatile
  4751  006F1A  D055               	goto	l201
  4752  006F1C                     l4265:
  4753  006F1C  0E00               	movlw	0
  4754  006F1E  6E94               	movwf	3988,c	;volatile
  4755  006F20  688B               	setf	3979,c	;volatile
  4756  006F22  D051               	goto	l201
  4757  006F24                     l4271:
  4758  006F24  C015  F017         	movff	nivel_alto@pino,??_nivel_alto
  4759  006F28  C016  F018         	movff	nivel_alto@pino+1,??_nivel_alto+1
  4760                           
  4761                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4762                           ; Switch size 1, requested type "space"
  4763                           ; Number of cases is 2, Range of values is 15 to 124
  4764                           ; switch strategies available:
  4765                           ; Name         Instructions Cycles
  4766                           ; simple_byte            7     4 (average)
  4767                           ;	Chosen strategy is simple_byte
  4768  006F2C  5018               	movf	??_nivel_alto+1,w,c
  4769  006F2E  0A0F               	xorlw	15	; case 15
  4770  006F30  B4D8               	btfsc	status,2,c
  4771  006F32  D004               	goto	l5351
  4772  006F34  0A73               	xorlw	115	; case 124
  4773  006F36  B4D8               	btfsc	status,2,c
  4774  006F38  D00C               	goto	l5353
  4775  006F3A  D045               	goto	l201
  4776  006F3C                     l5351:
  4777                           
  4778                           ; Switch size 1, requested type "space"
  4779                           ; Number of cases is 3, Range of values is 128 to 130
  4780                           ; switch strategies available:
  4781                           ; Name         Instructions Cycles
  4782                           ; simple_byte           10     6 (average)
  4783                           ;	Chosen strategy is simple_byte
  4784  006F3C  5017               	movf	??_nivel_alto,w,c
  4785  006F3E  0A80               	xorlw	128	; case 128
  4786  006F40  B4D8               	btfsc	status,2,c
  4787  006F42  D7BD               	goto	l4257
  4788  006F44  0A01               	xorlw	1	; case 129
  4789  006F46  B4D8               	btfsc	status,2,c
  4790  006F48  D7D6               	goto	l4261
  4791  006F4A  0A03               	xorlw	3	; case 130
  4792  006F4C  B4D8               	btfsc	status,2,c
  4793  006F4E  D7E6               	goto	l4265
  4794  006F50  D03A               	goto	l201
  4795  006F52                     l5353:
  4796                           
  4797                           ; Switch size 1, requested type "space"
  4798                           ; Number of cases is 19, Range of values is 0 to 23
  4799                           ; switch strategies available:
  4800                           ; Name         Instructions Cycles
  4801                           ; simple_byte           58    30 (average)
  4802                           ;	Chosen strategy is simple_byte
  4803  006F52  5017               	movf	??_nivel_alto,w,c
  4804  006F54  0A00               	xorlw	0	; case 0
  4805  006F56  B4D8               	btfsc	status,2,c
  4806  006F58  D7A0               	goto	l178
  4807  006F5A  0A01               	xorlw	1	; case 1
  4808  006F5C  B4D8               	btfsc	status,2,c
  4809  006F5E  D7A0               	goto	l180
  4810  006F60  0A03               	xorlw	3	; case 2
  4811  006F62  B4D8               	btfsc	status,2,c
  4812  006F64  D7A0               	goto	l181
  4813  006F66  0A01               	xorlw	1	; case 3
  4814  006F68  B4D8               	btfsc	status,2,c
  4815  006F6A  D7A0               	goto	l182
  4816  006F6C  0A07               	xorlw	7	; case 4
  4817  006F6E  B4D8               	btfsc	status,2,c
  4818  006F70  D7A0               	goto	l183
  4819  006F72  0A01               	xorlw	1	; case 5
  4820  006F74  B4D8               	btfsc	status,2,c
  4821  006F76  D7A0               	goto	l184
  4822  006F78  0A0D               	xorlw	13	; case 8
  4823  006F7A  B4D8               	btfsc	status,2,c
  4824  006F7C  D7A4               	goto	l186
  4825  006F7E  0A01               	xorlw	1	; case 9
  4826  006F80  B4D8               	btfsc	status,2,c
  4827  006F82  D7A4               	goto	l187
  4828  006F84  0A03               	xorlw	3	; case 10
  4829  006F86  B4D8               	btfsc	status,2,c
  4830  006F88  D7A4               	goto	l188
  4831  006F8A  0A01               	xorlw	1	; case 11
  4832  006F8C  B4D8               	btfsc	status,2,c
  4833  006F8E  D7A4               	goto	l189
  4834  006F90  0A07               	xorlw	7	; case 12
  4835  006F92  B4D8               	btfsc	status,2,c
  4836  006F94  D7A4               	goto	l190
  4837  006F96  0A01               	xorlw	1	; case 13
  4838  006F98  B4D8               	btfsc	status,2,c
  4839  006F9A  D7A4               	goto	l191
  4840  006F9C  0A03               	xorlw	3	; case 14
  4841  006F9E  B4D8               	btfsc	status,2,c
  4842  006FA0  D7A4               	goto	l192
  4843  006FA2  0A01               	xorlw	1	; case 15
  4844  006FA4  B4D8               	btfsc	status,2,c
  4845  006FA6  D7A4               	goto	l193
  4846  006FA8  0A1F               	xorlw	31	; case 16
  4847  006FAA  B4D8               	btfsc	status,2,c
  4848  006FAC  D7A8               	goto	l195
  4849  006FAE  0A01               	xorlw	1	; case 17
  4850  006FB0  B4D8               	btfsc	status,2,c
  4851  006FB2  D7A8               	goto	l196
  4852  006FB4  0A03               	xorlw	3	; case 18
  4853  006FB6  B4D8               	btfsc	status,2,c
  4854  006FB8  D7A8               	goto	l197
  4855  006FBA  0A04               	xorlw	4	; case 22
  4856  006FBC  B4D8               	btfsc	status,2,c
  4857  006FBE  D7A8               	goto	l198
  4858  006FC0  0A01               	xorlw	1	; case 23
  4859  006FC2  B4D8               	btfsc	status,2,c
  4860  006FC4  D7A8               	goto	l199
  4861  006FC6                     l201:
  4862  006FC6  0012               	return	
  4863  006FC8                     __end_of_nivel_alto:
  4864                           	opt stack 0
  4865                           tblptru	equ	0xFF8
  4866                           tblptrh	equ	0xFF7
  4867                           tblptrl	equ	0xFF6
  4868                           tablat	equ	0xFF5
  4869                           prodh	equ	0xFF4
  4870                           prodl	equ	0xFF3
  4871                           intcon	equ	0xFF2
  4872                           intcon2	equ	0xFF1
  4873                           intcon3	equ	0xFF0
  4874                           postinc0	equ	0xFEE
  4875                           wreg	equ	0xFE8
  4876                           postdec1	equ	0xFE5
  4877                           fsr1l	equ	0xFE1
  4878                           status	equ	0xFD8
  4879                           
  4880 ;; *************** function _ATC *****************
  4881 ;; Defined at:
  4882 ;;		line 34 in file "bt_usb.h"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;		None
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;		None
  4887 ;; Return value:  Size  Location     Type
  4888 ;;		None               void
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4896 ;;      Params:         0       0       0       0       0       0       0       0       0
  4897 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4899 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4900 ;;Total ram usage:        0 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    4
  4903 ;; This function calls:
  4904 ;;		_inverte_saida
  4905 ;;		_sendr
  4906 ;;		_tempo_ms
  4907 ;; This function is called by:
  4908 ;;		_modoAttention
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text22
  4913  006430                     __ptext22:
  4914                           	opt stack 0
  4915  006430                     _ATC:
  4916                           	opt stack 23
  4917                           
  4918                           ;bt_usb.h: 36: inverte_saida(31759); tempo_ms(500);
  4919                           
  4920                           ;incstack = 0
  4921  006430  0E7C               	movlw	124
  4922  006432  6E16               	movwf	inverte_saida@pino+1,c
  4923  006434  0E0F               	movlw	15
  4924  006436  6E15               	movwf	inverte_saida@pino,c
  4925  006438  EC31  F036         	call	_inverte_saida	;wreg free
  4926  00643C  0E01               	movlw	1
  4927  00643E  6E1C               	movwf	tempo_ms@i+1,c
  4928  006440  0EF4               	movlw	244
  4929  006442  6E1B               	movwf	tempo_ms@i,c
  4930  006444  EC98  F032         	call	_tempo_ms	;wreg free
  4931                           
  4932                           ;bt_usb.h: 37: sendr((char *)atc);
  4933  006448  0E7F               	movlw	high _atc
  4934  00644A  6E19               	movwf	sendr@st+1,c
  4935  00644C  0E3E               	movlw	low _atc
  4936  00644E  6E18               	movwf	sendr@st,c
  4937  006450  ECBC  F032         	call	_sendr	;wreg free
  4938                           
  4939                           ;bt_usb.h: 38: inverte_saida(31759); tempo_ms(1000);
  4940  006454  0E7C               	movlw	124
  4941  006456  6E16               	movwf	inverte_saida@pino+1,c
  4942  006458  0E0F               	movlw	15
  4943  00645A  6E15               	movwf	inverte_saida@pino,c
  4944  00645C  EC31  F036         	call	_inverte_saida	;wreg free
  4945  006460  0E03               	movlw	3
  4946  006462  6E1C               	movwf	tempo_ms@i+1,c
  4947  006464  0EE8               	movlw	232
  4948  006466  6E1B               	movwf	tempo_ms@i,c
  4949  006468  EC98  F032         	call	_tempo_ms	;wreg free
  4950  00646C  0012               	return	
  4951  00646E                     __end_of_ATC:
  4952                           	opt stack 0
  4953                           tblptru	equ	0xFF8
  4954                           tblptrh	equ	0xFF7
  4955                           tblptrl	equ	0xFF6
  4956                           tablat	equ	0xFF5
  4957                           prodh	equ	0xFF4
  4958                           prodl	equ	0xFF3
  4959                           intcon	equ	0xFF2
  4960                           intcon2	equ	0xFF1
  4961                           intcon3	equ	0xFF0
  4962                           postinc0	equ	0xFEE
  4963                           wreg	equ	0xFE8
  4964                           postdec1	equ	0xFE5
  4965                           fsr1l	equ	0xFE1
  4966                           status	equ	0xFD8
  4967                           
  4968 ;; *************** function _tempo_ms *****************
  4969 ;; Defined at:
  4970 ;;		line 290 in file "SanUSB48X.h"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  i               2   26[COMRAM] unsigned int 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  k               2   28[COMRAM] unsigned int 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;		None               void
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4984 ;;      Params:         2       0       0       0       0       0       0       0       0
  4985 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4987 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4988 ;;Total ram usage:        4 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    3
  4991 ;; This function calls:
  4992 ;;		_Delay1KTCYx
  4993 ;;		___wmul
  4994 ;; This function is called by:
  4995 ;;		_le_AD10bits
  4996 ;;		_ATC
  4997 ;;		_resetBT
  4998 ;;		_configBR6
  4999 ;;		_bt_ini
  5000 ;;		_main
  5001 ;;		_le_AD8bits
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text23
  5006  006530                     __ptext23:
  5007                           	opt stack 0
  5008  006530                     _tempo_ms:
  5009                           	opt stack 27
  5010                           
  5011                           ;SanUSB48X.h: 292: EEADR =REG+0B11111100+1;
  5012                           
  5013                           ;incstack = 0
  5014  006530  5046               	movf	_REG,w,c
  5015  006532  0FFD               	addlw	253
  5016  006534  6EA9               	movwf	4009,c	;volatile
  5017                           
  5018                           ;SanUSB48X.h: 293: EECON1=REG+EEADR & 0B00001011;
  5019  006536  5046               	movf	_REG,w,c
  5020  006538  24A9               	addwf	4009,w,c	;volatile
  5021  00653A  0B0B               	andlw	11
  5022  00653C  6EA6               	movwf	4006,c	;volatile
  5023  00653E                     l286:
  5024  00653E  66A8               	tstfsz	4008,c	;volatile
  5025  006540  D7FE               	goto	l286
  5026                           
  5027                           ;SanUSB48X.h: 295: for(k=0;k<12*i;k++) { Delay1KTCYx(1);}
  5028  006542  0E00               	movlw	0
  5029  006544  6E1E               	movwf	tempo_ms@k+1,c
  5030  006546  0E00               	movlw	0
  5031  006548  6E1D               	movwf	tempo_ms@k,c
  5032  00654A  D005               	goto	l4245
  5033  00654C                     l4241:
  5034  00654C  0E01               	movlw	1
  5035  00654E  ECA9  F031         	call	_Delay1KTCYx
  5036  006552  4A1D               	infsnz	tempo_ms@k,f,c
  5037  006554  2A1E               	incf	tempo_ms@k+1,f,c
  5038  006556                     l4245:
  5039  006556  C01B  F015         	movff	tempo_ms@i,___wmul@multiplier
  5040  00655A  C01C  F016         	movff	tempo_ms@i+1,___wmul@multiplier+1
  5041  00655E  0E00               	movlw	0
  5042  006560  6E18               	movwf	___wmul@multiplicand+1,c
  5043  006562  0E0C               	movlw	12
  5044  006564  6E17               	movwf	___wmul@multiplicand,c
  5045  006566  ECFB  F031         	call	___wmul	;wreg free
  5046  00656A  5015               	movf	?___wmul,w,c
  5047  00656C  5C1D               	subwf	tempo_ms@k,w,c
  5048  00656E  5016               	movf	?___wmul+1,w,c
  5049  006570  581E               	subwfb	tempo_ms@k+1,w,c
  5050  006572  B0D8               	btfsc	status,0,c
  5051  006574  0012               	return	
  5052  006576  D7EA               	goto	l4241
  5053  006578                     __end_of_tempo_ms:
  5054                           	opt stack 0
  5055                           tblptru	equ	0xFF8
  5056                           tblptrh	equ	0xFF7
  5057                           tblptrl	equ	0xFF6
  5058                           tablat	equ	0xFF5
  5059                           prodh	equ	0xFF4
  5060                           prodl	equ	0xFF3
  5061                           intcon	equ	0xFF2
  5062                           intcon2	equ	0xFF1
  5063                           intcon3	equ	0xFF0
  5064                           postinc0	equ	0xFEE
  5065                           wreg	equ	0xFE8
  5066                           postdec1	equ	0xFE5
  5067                           fsr1l	equ	0xFE1
  5068                           status	equ	0xFD8
  5069                           
  5070 ;; *************** function ___wmul *****************
  5071 ;; Defined at:
  5072 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\wmul.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  multiplier      2   20[COMRAM] unsigned int 
  5075 ;;  multiplicand    2   22[COMRAM] unsigned int 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  product         2   24[COMRAM] unsigned int 
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  2   20[COMRAM] unsigned int 
  5080 ;; Registers used:
  5081 ;;		wreg, status,2, status,0, prodl, prodh
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5087 ;;      Params:         4       0       0       0       0       0       0       0       0
  5088 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5090 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5091 ;;Total ram usage:        6 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    2
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_tempo_ms
  5098 ;;		_main
  5099 ;;		_tempo_us
  5100 ;;		_timer0_ms
  5101 ;;		_SetaPWM1
  5102 ;;		_SetaPWM2
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           	psect	text24
  5107  0063F6                     __ptext24:
  5108                           	opt stack 0
  5109  0063F6                     ___wmul:
  5110                           	opt stack 27
  5111                           
  5112                           ;incstack = 0
  5113  0063F6  5015               	movf	___wmul@multiplier,w,c
  5114  0063F8  0217               	mulwf	___wmul@multiplicand,c
  5115  0063FA  CFF3 F019          	movff	prodl,___wmul@product
  5116  0063FE  CFF4 F01A          	movff	prodh,___wmul@product+1
  5117  006402  5015               	movf	___wmul@multiplier,w,c
  5118  006404  0218               	mulwf	___wmul@multiplicand+1,c
  5119  006406  CFF3 FFF4          	movff	prodl,prodh
  5120  00640A  6AF3               	clrf	prodl,c
  5121  00640C  50F3               	movf	prodl,w,c
  5122  00640E  2619               	addwf	___wmul@product,f,c
  5123  006410  50F4               	movf	prodh,w,c
  5124  006412  221A               	addwfc	___wmul@product+1,f,c
  5125  006414  5016               	movf	___wmul@multiplier+1,w,c
  5126  006416  0217               	mulwf	___wmul@multiplicand,c
  5127  006418  CFF3 FFF4          	movff	prodl,prodh
  5128  00641C  6AF3               	clrf	prodl,c
  5129  00641E  50F3               	movf	prodl,w,c
  5130  006420  2619               	addwf	___wmul@product,f,c
  5131  006422  50F4               	movf	prodh,w,c
  5132  006424  221A               	addwfc	___wmul@product+1,f,c
  5133  006426  C019  F015         	movff	___wmul@product,?___wmul
  5134  00642A  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  5135  00642E  0012               	return	
  5136  006430                     __end_of___wmul:
  5137                           	opt stack 0
  5138                           tblptru	equ	0xFF8
  5139                           tblptrh	equ	0xFF7
  5140                           tblptrl	equ	0xFF6
  5141                           tablat	equ	0xFF5
  5142                           prodh	equ	0xFF4
  5143                           prodl	equ	0xFF3
  5144                           intcon	equ	0xFF2
  5145                           intcon2	equ	0xFF1
  5146                           intcon3	equ	0xFF0
  5147                           postinc0	equ	0xFEE
  5148                           wreg	equ	0xFE8
  5149                           postdec1	equ	0xFE5
  5150                           fsr1l	equ	0xFE1
  5151                           status	equ	0xFD8
  5152                           
  5153 ;; *************** function _Delay1KTCYx *****************
  5154 ;; Defined at:
  5155 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\pic18\d1ktcyx.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  unit            1    wreg     unsigned char 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  unit            1   20[COMRAM] unsigned char 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;		None               void
  5162 ;; Registers used:
  5163 ;;		wreg
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5169 ;;      Params:         0       0       0       0       0       0       0       0       0
  5170 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5172 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5173 ;;Total ram usage:        1 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    2
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_tempo_ms
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text25
  5184  006352                     __ptext25:
  5185                           	opt stack 0
  5186  006352                     _Delay1KTCYx:
  5187                           	opt stack 27
  5188                           
  5189                           ;incstack = 0
  5190                           ;Delay1KTCYx@unit stored from wreg
  5191  006352  CFE8 F015          	movff	wreg,Delay1KTCYx@unit
  5192  006356                     l845:
  5193  006356  0EFA               	movlw	250
  5194  006358                     u2967:
  5195  006358  F000               	nop	
  5196  00635A  2EE8               	decfsz	wreg,f,c
  5197  00635C  D7FD               	goto	u2967
  5198  00635E  2E15               	decfsz	Delay1KTCYx@unit,f,c
  5199  006360  D7FA               	goto	l845
  5200  006362  0012               	return	
  5201  006364                     __end_of_Delay1KTCYx:
  5202                           	opt stack 0
  5203                           tblptru	equ	0xFF8
  5204                           tblptrh	equ	0xFF7
  5205                           tblptrl	equ	0xFF6
  5206                           tablat	equ	0xFF5
  5207                           prodh	equ	0xFF4
  5208                           prodl	equ	0xFF3
  5209                           intcon	equ	0xFF2
  5210                           intcon2	equ	0xFF1
  5211                           intcon3	equ	0xFF0
  5212                           postinc0	equ	0xFEE
  5213                           wreg	equ	0xFE8
  5214                           postdec1	equ	0xFE5
  5215                           fsr1l	equ	0xFE1
  5216                           status	equ	0xFD8
  5217                           
  5218 ;; *************** function _sendr *****************
  5219 ;; Defined at:
  5220 ;;		line 482 in file "SanUSB48X.h"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  st              2   23[COMRAM] PTR unsigned char 
  5223 ;;		 -> icm(15), icg(9), icr(9), icn(17), 
  5224 ;;		 -> icb(9), icp(3), icms(19), icgs(20), 
  5225 ;;		 -> icrs(11), atc(5), 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;		None
  5228 ;; Return value:  Size  Location     Type
  5229 ;;		None               void
  5230 ;; Registers used:
  5231 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5237 ;;      Params:         2       0       0       0       0       0       0       0       0
  5238 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5239 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5240 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5241 ;;Total ram usage:        4 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:    3
  5244 ;; This function calls:
  5245 ;;		_sputc
  5246 ;; This function is called by:
  5247 ;;		_ATC
  5248 ;;		_resetBT
  5249 ;;		_configBR6
  5250 ;;		_bt_ini
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text26
  5255  006578                     __ptext26:
  5256                           	opt stack 0
  5257  006578                     _sendr:
  5258                           	opt stack 26
  5259                           
  5260                           ;SanUSB48X.h: 483: for(k=0;st[k]!='\0';k++) {sputc(st[k]);}
  5261                           
  5262                           ;incstack = 0
  5263  006578  6E1A               	movwf	??_sendr& (0+255),c
  5264  00657A  0E00               	movlw	0
  5265  00657C  6E39               	movwf	_k,c
  5266  00657E  501A               	movf	??_sendr& (0+255),w,c
  5267  006580  D013               	goto	l4253
  5268  006582                     l4249:
  5269  006582  5039               	movf	_k,w,c
  5270  006584  0D01               	mullw	1
  5271  006586  C018  F01A         	movff	sendr@st,??_sendr
  5272  00658A  C019  F01B         	movff	sendr@st+1,??_sendr+1
  5273  00658E  50F3               	movf	prodl,w,c
  5274  006590  261A               	addwf	??_sendr,f,c
  5275  006592  50F4               	movf	prodh,w,c
  5276  006594  221B               	addwfc	??_sendr+1,f,c
  5277  006596  C01A  FFF6         	movff	??_sendr,tblptrl
  5278  00659A  C01B  FFF7         	movff	??_sendr+1,tblptrh
  5279  00659E  0008               	tblrd		*
  5280  0065A0  50F5               	movf	tablat,w,c
  5281  0065A2  ECE5  F031         	call	_sputc
  5282  0065A6  2A39               	incf	_k,f,c
  5283  0065A8                     l4253:
  5284  0065A8  5039               	movf	_k,w,c
  5285  0065AA  0D01               	mullw	1
  5286  0065AC  C018  F01A         	movff	sendr@st,??_sendr
  5287  0065B0  C019  F01B         	movff	sendr@st+1,??_sendr+1
  5288  0065B4  50F3               	movf	prodl,w,c
  5289  0065B6  261A               	addwf	??_sendr,f,c
  5290  0065B8  50F4               	movf	prodh,w,c
  5291  0065BA  221B               	addwfc	??_sendr+1,f,c
  5292  0065BC  C01A  FFF6         	movff	??_sendr,tblptrl
  5293  0065C0  C01B  FFF7         	movff	??_sendr+1,tblptrh
  5294  0065C4  0008               	tblrd		*
  5295  0065C6  50F5               	movf	tablat,w,c
  5296  0065C8  0900               	iorlw	0
  5297  0065CA  B4D8               	btfsc	status,2,c
  5298  0065CC  0012               	return	
  5299  0065CE  D7D9               	goto	l4249
  5300  0065D0                     __end_of_sendr:
  5301                           	opt stack 0
  5302                           tblptru	equ	0xFF8
  5303                           tblptrh	equ	0xFF7
  5304                           tblptrl	equ	0xFF6
  5305                           tablat	equ	0xFF5
  5306                           prodh	equ	0xFF4
  5307                           prodl	equ	0xFF3
  5308                           intcon	equ	0xFF2
  5309                           intcon2	equ	0xFF1
  5310                           intcon3	equ	0xFF0
  5311                           postinc0	equ	0xFEE
  5312                           wreg	equ	0xFE8
  5313                           postdec1	equ	0xFE5
  5314                           fsr1l	equ	0xFE1
  5315                           status	equ	0xFD8
  5316                           
  5317 ;; *************** function _sputc *****************
  5318 ;; Defined at:
  5319 ;;		line 471 in file "SanUSB48X.h"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  c               1    wreg     unsigned char 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  c               1   22[COMRAM] unsigned char 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;		None               void
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5333 ;;      Params:         0       0       0       0       0       0       0       0       0
  5334 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5335 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5336 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5337 ;;Total ram usage:        3 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    2
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_sendr
  5344 ;;		_bt_ini
  5345 ;;		_sends
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           	psect	text27
  5350  0063CA                     __ptext27:
  5351                           	opt stack 0
  5352  0063CA                     _sputc:
  5353                           	opt stack 27
  5354                           
  5355                           ;incstack = 0
  5356                           ;sputc@c stored from wreg
  5357  0063CA  CFE8 F017          	movff	wreg,sputc@c
  5358  0063CE                     l397:
  5359  0063CE  A2AC               	btfss	4012,1,c	;volatile
  5360  0063D0  D7FE               	goto	l397
  5361                           
  5362                           ;SanUSB48X.h: 474: TXREG=(c>>BAUDCONbits.BRG16)+REG;
  5363  0063D2  A6B8               	btfss	4024,3,c	;volatile
  5364  0063D4  D003               	goto	u2180
  5365  0063D6  6A15               	clrf	??_sputc& (0+255),c
  5366  0063D8  2A15               	incf	??_sputc& (0+255),f,c
  5367  0063DA  D001               	goto	u2188
  5368  0063DC                     u2180:
  5369  0063DC  6A15               	clrf	??_sputc& (0+255),c
  5370  0063DE                     u2188:
  5371  0063DE  C017  F016         	movff	sputc@c,??_sputc+1
  5372  0063E2  2A15               	incf	??_sputc,f,c
  5373  0063E4  D002               	goto	u2194
  5374  0063E6                     u2195:
  5375  0063E6  90D8               	bcf	status,0,c
  5376  0063E8  3216               	rrcf	??_sputc+1,f,c
  5377  0063EA                     u2194:
  5378  0063EA  2E15               	decfsz	??_sputc,f,c
  5379  0063EC  D7FC               	goto	u2195
  5380  0063EE  5016               	movf	??_sputc+1,w,c
  5381  0063F0  2446               	addwf	_REG,w,c
  5382  0063F2  6EAD               	movwf	4013,c	;volatile
  5383  0063F4  0012               	return	
  5384  0063F6                     __end_of_sputc:
  5385                           	opt stack 0
  5386                           tblptru	equ	0xFF8
  5387                           tblptrh	equ	0xFF7
  5388                           tblptrl	equ	0xFF6
  5389                           tablat	equ	0xFF5
  5390                           prodh	equ	0xFF4
  5391                           prodl	equ	0xFF3
  5392                           intcon	equ	0xFF2
  5393                           intcon2	equ	0xFF1
  5394                           intcon3	equ	0xFF0
  5395                           postinc0	equ	0xFEE
  5396                           wreg	equ	0xFE8
  5397                           postdec1	equ	0xFE5
  5398                           fsr1l	equ	0xFE1
  5399                           status	equ	0xFD8
  5400                           
  5401 ;; *************** function _inverte_saida *****************
  5402 ;; Defined at:
  5403 ;;		line 228 in file "SanUSB48X.h"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  pino            2   20[COMRAM] unsigned int 
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;		None               void
  5410 ;; Registers used:
  5411 ;;		wreg, status,2, status,0
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5417 ;;      Params:         2       0       0       0       0       0       0       0       0
  5418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5419 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5420 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5421 ;;Total ram usage:        4 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; Hardware stack levels required when called:    2
  5424 ;; This function calls:
  5425 ;;		Nothing
  5426 ;; This function is called by:
  5427 ;;		_ATC
  5428 ;;		_resetBT
  5429 ;;		_configBR6
  5430 ;;		_bt_ini
  5431 ;;		_main
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text28
  5436  006C62                     __ptext28:
  5437                           	opt stack 0
  5438  006C62                     _inverte_saida:
  5439                           	opt stack 28
  5440                           
  5441                           ;SanUSB48X.h: 230: switch(pino){
  5442                           
  5443                           ;incstack = 0
  5444  006C62  D03C               	goto	l4231
  5445  006C64                     l232:
  5446  006C64  9092               	bcf	3986,0,c	;volatile
  5447  006C66  7080               	btg	3968,0,c	;volatile
  5448  006C68  D07E               	goto	l253
  5449  006C6A                     l234:
  5450  006C6A  9292               	bcf	3986,1,c	;volatile
  5451  006C6C  7280               	btg	3968,1,c	;volatile
  5452  006C6E  D07B               	goto	l253
  5453  006C70                     l235:
  5454  006C70  9492               	bcf	3986,2,c	;volatile
  5455  006C72  7480               	btg	3968,2,c	;volatile
  5456  006C74  D078               	goto	l253
  5457  006C76                     l236:
  5458  006C76  9692               	bcf	3986,3,c	;volatile
  5459  006C78  7680               	btg	3968,3,c	;volatile
  5460  006C7A  D075               	goto	l253
  5461  006C7C                     l237:
  5462  006C7C  9892               	bcf	3986,4,c	;volatile
  5463  006C7E  7880               	btg	3968,4,c	;volatile
  5464  006C80  D072               	goto	l253
  5465  006C82                     l238:
  5466  006C82  9A92               	bcf	3986,5,c	;volatile
  5467  006C84  7A80               	btg	3968,5,c	;volatile
  5468  006C86  D06F               	goto	l253
  5469  006C88                     l239:
  5470  006C88  9093               	bcf	3987,0,c	;volatile
  5471  006C8A  7081               	btg	3969,0,c	;volatile
  5472  006C8C  D06C               	goto	l253
  5473  006C8E                     l240:
  5474  006C8E  9293               	bcf	3987,1,c	;volatile
  5475  006C90  7281               	btg	3969,1,c	;volatile
  5476  006C92  D069               	goto	l253
  5477  006C94                     l241:
  5478  006C94  9493               	bcf	3987,2,c	;volatile
  5479  006C96  7481               	btg	3969,2,c	;volatile
  5480  006C98  D066               	goto	l253
  5481  006C9A                     l242:
  5482  006C9A  9693               	bcf	3987,3,c	;volatile
  5483  006C9C  7681               	btg	3969,3,c	;volatile
  5484  006C9E  D063               	goto	l253
  5485  006CA0                     l243:
  5486  006CA0  9893               	bcf	3987,4,c	;volatile
  5487  006CA2  7881               	btg	3969,4,c	;volatile
  5488  006CA4  D060               	goto	l253
  5489  006CA6                     l244:
  5490  006CA6  9A93               	bcf	3987,5,c	;volatile
  5491  006CA8  7A81               	btg	3969,5,c	;volatile
  5492  006CAA  D05D               	goto	l253
  5493  006CAC                     l245:
  5494  006CAC  9C93               	bcf	3987,6,c	;volatile
  5495  006CAE  7C81               	btg	3969,6,c	;volatile
  5496  006CB0  D05A               	goto	l253
  5497  006CB2                     l246:
  5498  006CB2  9E93               	bcf	3987,7,c	;volatile
  5499  006CB4  7E81               	btg	3969,7,c	;volatile
  5500  006CB6  D057               	goto	l253
  5501  006CB8                     l247:
  5502  006CB8  9094               	bcf	3988,0,c	;volatile
  5503  006CBA  7082               	btg	3970,0,c	;volatile
  5504  006CBC  D054               	goto	l253
  5505  006CBE                     l248:
  5506  006CBE  9294               	bcf	3988,1,c	;volatile
  5507  006CC0  7282               	btg	3970,1,c	;volatile
  5508  006CC2  D051               	goto	l253
  5509  006CC4                     l249:
  5510  006CC4  9494               	bcf	3988,2,c	;volatile
  5511  006CC6  7482               	btg	3970,2,c	;volatile
  5512  006CC8  D04E               	goto	l253
  5513  006CCA                     l250:
  5514  006CCA  9C94               	bcf	3988,6,c	;volatile
  5515  006CCC  7C82               	btg	3970,6,c	;volatile
  5516  006CCE  D04B               	goto	l253
  5517  006CD0                     l251:
  5518  006CD0  9E94               	bcf	3988,7,c	;volatile
  5519  006CD2  7E82               	btg	3970,7,c	;volatile
  5520  006CD4  D048               	goto	l253
  5521  006CD6                     l252:
  5522  006CD6  9E95               	bcf	3989,7,c	;volatile
  5523  006CD8  7E83               	btg	3971,7,c	;volatile
  5524  006CDA  D045               	goto	l253
  5525  006CDC                     l4231:
  5526  006CDC  C015  F017         	movff	inverte_saida@pino,??_inverte_saida
  5527  006CE0  C016  F018         	movff	inverte_saida@pino+1,??_inverte_saida+1
  5528                           
  5529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5530                           ; Switch size 1, requested type "space"
  5531                           ; Number of cases is 1, Range of values is 124 to 124
  5532                           ; switch strategies available:
  5533                           ; Name         Instructions Cycles
  5534                           ; simple_byte            4     3 (average)
  5535                           ;	Chosen strategy is simple_byte
  5536  006CE4  5018               	movf	??_inverte_saida+1,w,c
  5537  006CE6  0A7C               	xorlw	124	; case 124
  5538  006CE8  A4D8               	btfss	status,2,c
  5539  006CEA  D03D               	goto	l253
  5540                           
  5541                           ; Switch size 1, requested type "space"
  5542                           ; Number of cases is 20, Range of values is 0 to 31
  5543                           ; switch strategies available:
  5544                           ; Name         Instructions Cycles
  5545                           ; simple_byte           61    31 (average)
  5546                           ;	Chosen strategy is simple_byte
  5547  006CEC  5017               	movf	??_inverte_saida,w,c
  5548  006CEE  0A00               	xorlw	0	; case 0
  5549  006CF0  B4D8               	btfsc	status,2,c
  5550  006CF2  D7B8               	goto	l232
  5551  006CF4  0A01               	xorlw	1	; case 1
  5552  006CF6  B4D8               	btfsc	status,2,c
  5553  006CF8  D7B8               	goto	l234
  5554  006CFA  0A03               	xorlw	3	; case 2
  5555  006CFC  B4D8               	btfsc	status,2,c
  5556  006CFE  D7B8               	goto	l235
  5557  006D00  0A01               	xorlw	1	; case 3
  5558  006D02  B4D8               	btfsc	status,2,c
  5559  006D04  D7B8               	goto	l236
  5560  006D06  0A07               	xorlw	7	; case 4
  5561  006D08  B4D8               	btfsc	status,2,c
  5562  006D0A  D7B8               	goto	l237
  5563  006D0C  0A01               	xorlw	1	; case 5
  5564  006D0E  B4D8               	btfsc	status,2,c
  5565  006D10  D7B8               	goto	l238
  5566  006D12  0A0D               	xorlw	13	; case 8
  5567  006D14  B4D8               	btfsc	status,2,c
  5568  006D16  D7B8               	goto	l239
  5569  006D18  0A01               	xorlw	1	; case 9
  5570  006D1A  B4D8               	btfsc	status,2,c
  5571  006D1C  D7B8               	goto	l240
  5572  006D1E  0A03               	xorlw	3	; case 10
  5573  006D20  B4D8               	btfsc	status,2,c
  5574  006D22  D7B8               	goto	l241
  5575  006D24  0A01               	xorlw	1	; case 11
  5576  006D26  B4D8               	btfsc	status,2,c
  5577  006D28  D7B8               	goto	l242
  5578  006D2A  0A07               	xorlw	7	; case 12
  5579  006D2C  B4D8               	btfsc	status,2,c
  5580  006D2E  D7B8               	goto	l243
  5581  006D30  0A01               	xorlw	1	; case 13
  5582  006D32  B4D8               	btfsc	status,2,c
  5583  006D34  D7B8               	goto	l244
  5584  006D36  0A03               	xorlw	3	; case 14
  5585  006D38  B4D8               	btfsc	status,2,c
  5586  006D3A  D7B8               	goto	l245
  5587  006D3C  0A01               	xorlw	1	; case 15
  5588  006D3E  B4D8               	btfsc	status,2,c
  5589  006D40  D7B8               	goto	l246
  5590  006D42  0A1F               	xorlw	31	; case 16
  5591  006D44  B4D8               	btfsc	status,2,c
  5592  006D46  D7B8               	goto	l247
  5593  006D48  0A01               	xorlw	1	; case 17
  5594  006D4A  B4D8               	btfsc	status,2,c
  5595  006D4C  D7B8               	goto	l248
  5596  006D4E  0A03               	xorlw	3	; case 18
  5597  006D50  B4D8               	btfsc	status,2,c
  5598  006D52  D7B8               	goto	l249
  5599  006D54  0A04               	xorlw	4	; case 22
  5600  006D56  B4D8               	btfsc	status,2,c
  5601  006D58  D7B8               	goto	l250
  5602  006D5A  0A01               	xorlw	1	; case 23
  5603  006D5C  B4D8               	btfsc	status,2,c
  5604  006D5E  D7B8               	goto	l251
  5605  006D60  0A08               	xorlw	8	; case 31
  5606  006D62  B4D8               	btfsc	status,2,c
  5607  006D64  D7B8               	goto	l252
  5608  006D66                     l253:
  5609  006D66  0012               	return	
  5610  006D68                     __end_of_inverte_saida:
  5611                           	opt stack 0
  5612                           tblptru	equ	0xFF8
  5613                           tblptrh	equ	0xFF7
  5614                           tblptrl	equ	0xFF6
  5615                           tablat	equ	0xFF5
  5616                           prodh	equ	0xFF4
  5617                           prodl	equ	0xFF3
  5618                           intcon	equ	0xFF2
  5619                           intcon2	equ	0xFF1
  5620                           intcon3	equ	0xFF0
  5621                           postinc0	equ	0xFEE
  5622                           wreg	equ	0xFE8
  5623                           postdec1	equ	0xFE5
  5624                           fsr1l	equ	0xFE1
  5625                           status	equ	0xFD8
  5626                           
  5627 ;; *************** function _interrupcao *****************
  5628 ;; Defined at:
  5629 ;;		line 26 in file "main.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;		None
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;		None
  5634 ;; Return value:  Size  Location     Type
  5635 ;;		None               void
  5636 ;; Registers used:
  5637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5643 ;;      Params:         0       0       0       0       0       0       0       0       0
  5644 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5645 ;;      Temps:         16       0       0       0       0       0       0       0       0
  5646 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5647 ;;Total ram usage:       16 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    1
  5650 ;; This function calls:
  5651 ;;		_ReadUSART
  5652 ;;		i2_inverte_saida
  5653 ;;		i2_nivel_alto
  5654 ;;		i2_nivel_baixo
  5655 ;; This function is called by:
  5656 ;;		Interrupt level 2
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	intcode
  5661  001008                     __pintcode:
  5662                           	opt stack 0
  5663  001008                     _interrupcao:
  5664                           	opt stack 23
  5665                           
  5666                           ;incstack = 0
  5667  001008  CFFA F007          	movff	pclath,??_interrupcao+2
  5668  00100C  CFFB F008          	movff	pclatu,??_interrupcao+3
  5669  001010  CFE9 F009          	movff	fsr0l,??_interrupcao+4
  5670  001014  EDB4  F03A         	call	int_func,f	;refresh shadow registers
  5671                           pclatu	equ	0xFFB
  5672                           pclath	equ	0xFFA
  5673                           tblptru	equ	0xFF8
  5674                           tblptrh	equ	0xFF7
  5675                           tblptrl	equ	0xFF6
  5676                           tablat	equ	0xFF5
  5677                           prodh	equ	0xFF4
  5678                           prodl	equ	0xFF3
  5679                           intcon	equ	0xFF2
  5680                           intcon2	equ	0xFF1
  5681                           intcon3	equ	0xFF0
  5682                           postinc0	equ	0xFEE
  5683                           fsr0l	equ	0xFE9
  5684                           wreg	equ	0xFE8
  5685                           postdec1	equ	0xFE5
  5686                           fsr1l	equ	0xFE1
  5687                           status	equ	0xFD8
  5688                           
  5689                           	psect	intcode_body
  5690  007568                     __pintcode_body:
  5691                           	opt stack 23
  5692  007568                     int_func:
  5693                           	opt stack 23
  5694  007568  0006               	pop		; remove dummy address from shadow register refresh
  5695  00756A  CFEA F00A          	movff	fsr0h,??_interrupcao+5
  5696  00756E  CFE1 F00B          	movff	fsr1l,??_interrupcao+6
  5697  007572  CFE2 F00C          	movff	fsr1h,??_interrupcao+7
  5698  007576  CFD9 F00D          	movff	fsr2l,??_interrupcao+8
  5699  00757A  CFDA F00E          	movff	fsr2h,??_interrupcao+9
  5700  00757E  CFF3 F00F          	movff	prodl,??_interrupcao+10
  5701  007582  CFF4 F010          	movff	prodh,??_interrupcao+11
  5702  007586  CFF6 F011          	movff	tblptrl,??_interrupcao+12
  5703  00758A  CFF7 F012          	movff	tblptrh,??_interrupcao+13
  5704  00758E  CFF8 F013          	movff	tblptru,??_interrupcao+14
  5705  007592  CFF5 F014          	movff	tablat,??_interrupcao+15
  5706                           
  5707                           ;main.c: 28: if (INTCONbits.TMR0IF) {
  5708  007596  A4F2               	btfss	intcon,2,c	;volatile
  5709  007598  D058               	goto	i2l3731
  5710                           
  5711                           ;main.c: 29: INTCONbits.TMR0IF = 0;
  5712  00759A  94F2               	bcf	intcon,2,c	;volatile
  5713                           
  5714                           ;main.c: 30: i++; if(i>255){i=0;}
  5715  00759C  4A2D               	infsnz	_i,f,c
  5716  00759E  2A2E               	incf	_i+1,f,c
  5717  0075A0  0E00               	movlw	0
  5718  0075A2  5C2D               	subwf	_i,w,c
  5719  0075A4  0E01               	movlw	1
  5720  0075A6  582E               	subwfb	_i+1,w,c
  5721  0075A8  A0D8               	btfss	status,0,c
  5722  0075AA  D004               	goto	i2l3711
  5723  0075AC  0E00               	movlw	0
  5724  0075AE  6E2E               	movwf	_i+1,c
  5725  0075B0  0E00               	movlw	0
  5726  0075B2  6E2D               	movwf	_i,c
  5727  0075B4                     i2l3711:
  5728                           
  5729                           ;main.c: 31: if(i>=comand[1]){nivel_alto(31762);} else {nivel_baixo(31762);}
  5730  0075B4  0100               	movlb	0	; () banked
  5731  0075B6  0100               	movlb	0	; () banked
  5732  0075B8  5161               	movf	(_comand+1)& (0+255),w,b
  5733  0075BA  6E05               	movwf	??_interrupcao& (0+255),c
  5734  0075BC  6A06               	clrf	(??_interrupcao+1)& (0+255),c
  5735  0075BE  5005               	movf	??_interrupcao,w,c
  5736  0075C0  5C2D               	subwf	_i,w,c
  5737  0075C2  5006               	movf	??_interrupcao+1,w,c
  5738  0075C4  582E               	subwfb	_i+1,w,c
  5739  0075C6  A0D8               	btfss	status,0,c
  5740  0075C8  D007               	goto	i2l3715
  5741                           
  5742                           ; BSR set to: 0
  5743  0075CA  0E7C               	movlw	124
  5744  0075CC  6E02               	movwf	i2nivel_alto@pino+1,c
  5745  0075CE  0E12               	movlw	18
  5746  0075D0  6E01               	movwf	i2nivel_alto@pino,c
  5747  0075D2  ECB4  F036         	call	i2_nivel_alto	;wreg free
  5748  0075D6  D006               	goto	i2l3717
  5749  0075D8                     i2l3715:
  5750  0075D8  0E7C               	movlw	124
  5751  0075DA  6E02               	movwf	i2nivel_baixo@pino+1,c
  5752  0075DC  0E12               	movlw	18
  5753  0075DE  6E01               	movwf	i2nivel_baixo@pino,c
  5754  0075E0  ECE4  F037         	call	i2_nivel_baixo	;wreg free
  5755  0075E4                     i2l3717:
  5756                           
  5757                           ;main.c: 32: if(i>=comand[2]){nivel_alto(31760);} else {nivel_baixo(31760);}
  5758  0075E4  0100               	movlb	0	; () banked
  5759  0075E6  0100               	movlb	0	; () banked
  5760  0075E8  5162               	movf	(_comand+2)& (0+255),w,b
  5761  0075EA  6E05               	movwf	??_interrupcao& (0+255),c
  5762  0075EC  6A06               	clrf	(??_interrupcao+1)& (0+255),c
  5763  0075EE  5005               	movf	??_interrupcao,w,c
  5764  0075F0  5C2D               	subwf	_i,w,c
  5765  0075F2  5006               	movf	??_interrupcao+1,w,c
  5766  0075F4  582E               	subwfb	_i+1,w,c
  5767  0075F6  A0D8               	btfss	status,0,c
  5768  0075F8  D007               	goto	i2l3721
  5769                           
  5770                           ; BSR set to: 0
  5771  0075FA  0E7C               	movlw	124
  5772  0075FC  6E02               	movwf	i2nivel_alto@pino+1,c
  5773  0075FE  0E10               	movlw	16
  5774  007600  6E01               	movwf	i2nivel_alto@pino,c
  5775  007602  ECB4  F036         	call	i2_nivel_alto	;wreg free
  5776  007606  D006               	goto	i2l3723
  5777  007608                     i2l3721:
  5778  007608  0E7C               	movlw	124
  5779  00760A  6E02               	movwf	i2nivel_baixo@pino+1,c
  5780  00760C  0E10               	movlw	16
  5781  00760E  6E01               	movwf	i2nivel_baixo@pino,c
  5782  007610  ECE4  F037         	call	i2_nivel_baixo	;wreg free
  5783  007614                     i2l3723:
  5784                           
  5785                           ;main.c: 33: if(i>=comand[3]){nivel_alto(31761);} else {nivel_baixo(31761);}
  5786  007614  0100               	movlb	0	; () banked
  5787  007616  0100               	movlb	0	; () banked
  5788  007618  5163               	movf	(_comand+3)& (0+255),w,b
  5789  00761A  6E05               	movwf	??_interrupcao& (0+255),c
  5790  00761C  6A06               	clrf	(??_interrupcao+1)& (0+255),c
  5791  00761E  5005               	movf	??_interrupcao,w,c
  5792  007620  5C2D               	subwf	_i,w,c
  5793  007622  5006               	movf	??_interrupcao+1,w,c
  5794  007624  582E               	subwfb	_i+1,w,c
  5795  007626  A0D8               	btfss	status,0,c
  5796  007628  D007               	goto	i2l3727
  5797                           
  5798                           ; BSR set to: 0
  5799  00762A  0E7C               	movlw	124
  5800  00762C  6E02               	movwf	i2nivel_alto@pino+1,c
  5801  00762E  0E11               	movlw	17
  5802  007630  6E01               	movwf	i2nivel_alto@pino,c
  5803  007632  ECB4  F036         	call	i2_nivel_alto	;wreg free
  5804  007636  D006               	goto	i2l3729
  5805  007638                     i2l3727:
  5806  007638  0E7C               	movlw	124
  5807  00763A  6E02               	movwf	i2nivel_baixo@pino+1,c
  5808  00763C  0E11               	movlw	17
  5809  00763E  6E01               	movwf	i2nivel_baixo@pino,c
  5810  007640  ECE4  F037         	call	i2_nivel_baixo	;wreg free
  5811  007644                     i2l3729:
  5812                           
  5813                           ;main.c: 35: TMR0L = TMR0L + 16;
  5814  007644  50D6               	movf	4054,w,c	;volatile
  5815  007646  0F10               	addlw	16
  5816  007648  6ED6               	movwf	4054,c	;volatile
  5817  00764A                     i2l3731:
  5818                           
  5819                           ;main.c: 36: }
  5820                           ;main.c: 38: if (PIR1bits.RCIF) { INTCONbits.TMR0IE = 0;
  5821  00764A  AA9E               	btfss	3998,5,c	;volatile
  5822  00764C  D0ED               	goto	i2l610
  5823  00764E  9AF2               	bcf	intcon,5,c	;volatile
  5824                           
  5825                           ;main.c: 39: PIR1bits.RCIF=0;
  5826  007650  9A9E               	bcf	3998,5,c	;volatile
  5827                           
  5828                           ;main.c: 40: comando[n] = ReadUSART();
  5829  007652  503B               	movf	_n,w,c
  5830  007654  0D01               	mullw	1
  5831  007656  0100               	movlb	0	; () banked
  5832  007658  0E7E               	movlw	low _comando
  5833  00765A  24F3               	addwf	prodl,w,c
  5834  00765C  6ED9               	movwf	fsr2l,c
  5835  00765E  0100               	movlb	0	; () banked
  5836  007660  0E00               	movlw	high _comando
  5837  007662  20F4               	addwfc	prodh,w,c
  5838  007664  6EDA               	movwf	fsr2h,c
  5839  007666  ECC5  F031         	call	_ReadUSART	;wreg free
  5840  00766A  6EDF               	movwf	indf2,c
  5841                           
  5842                           ;main.c: 41: if (comando[n]==79) {flagb=1;n=0;}
  5843  00766C  503B               	movf	_n,w,c
  5844  00766E  0D01               	mullw	1
  5845  007670  0100               	movlb	0	; () banked
  5846  007672  0E7E               	movlw	low _comando
  5847  007674  24F3               	addwf	prodl,w,c
  5848  007676  6ED9               	movwf	fsr2l,c
  5849  007678  0100               	movlb	0	; () banked
  5850  00767A  0E00               	movlw	high _comando
  5851  00767C  20F4               	addwfc	prodh,w,c
  5852  00767E  6EDA               	movwf	fsr2h,c
  5853  007680  0E4F               	movlw	79
  5854  007682  62DF               	cpfseq	indf2,c
  5855  007684  D008               	goto	i2l598
  5856                           
  5857                           ; BSR set to: 0
  5858  007686  0E00               	movlw	0
  5859  007688  6E2A               	movwf	_flagb+1,c
  5860  00768A  0E01               	movlw	1
  5861  00768C  6E29               	movwf	_flagb,c
  5862                           
  5863                           ; BSR set to: 0
  5864  00768E  6E05               	movwf	??_interrupcao& (0+255),c
  5865  007690  0E00               	movlw	0
  5866  007692  6E3B               	movwf	_n,c
  5867  007694  5005               	movf	??_interrupcao& (0+255),w,c
  5868  007696                     i2l598:
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;main.c: 43: if (m>13 && comando[0]==65) {m=n; flag=1;}
  5872  007696  0E0D               	movlw	13
  5873  007698  643A               	cpfsgt	_m,c
  5874  00769A  D00F               	goto	i2l3749
  5875                           
  5876                           ; BSR set to: 0
  5877  00769C  0100               	movlb	0	; () banked
  5878  00769E  0100               	movlb	0	; () banked
  5879  0076A0  517E               	movf	_comando& (0+255),w,b
  5880  0076A2  0A41               	xorlw	65
  5881  0076A4  A4D8               	btfss	status,2,c
  5882  0076A6  D009               	goto	i2l3749
  5883                           
  5884                           ; BSR set to: 0
  5885  0076A8  C03B  F03A         	movff	_n,_m
  5886                           
  5887                           ; BSR set to: 0
  5888  0076AC  0E00               	movlw	0
  5889  0076AE  0100               	movlb	0	; () banked
  5890  0076B0  0100               	movlb	0	; () banked
  5891  0076B2  6FA1               	movwf	(_flag+1)& (0+255),b
  5892  0076B4  0E01               	movlw	1
  5893  0076B6  0100               	movlb	0	; () banked
  5894  0076B8  6FA0               	movwf	_flag& (0+255),b
  5895  0076BA                     i2l3749:
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;main.c: 45: if (comando[n]=='R'){n=0;comando[0] = 'R';}
  5899  0076BA  503B               	movf	_n,w,c
  5900  0076BC  0D01               	mullw	1
  5901  0076BE  0100               	movlb	0	; () banked
  5902  0076C0  0E7E               	movlw	low _comando
  5903  0076C2  24F3               	addwf	prodl,w,c
  5904  0076C4  6ED9               	movwf	fsr2l,c
  5905  0076C6  0100               	movlb	0	; () banked
  5906  0076C8  0E00               	movlw	high _comando
  5907  0076CA  20F4               	addwfc	prodh,w,c
  5908  0076CC  6EDA               	movwf	fsr2h,c
  5909  0076CE  0E52               	movlw	82
  5910  0076D0  62DF               	cpfseq	indf2,c
  5911  0076D2  D00A               	goto	i2l3753
  5912                           
  5913                           ; BSR set to: 0
  5914  0076D4  6E05               	movwf	??_interrupcao& (0+255),c
  5915  0076D6  0E00               	movlw	0
  5916  0076D8  6E3B               	movwf	_n,c
  5917  0076DA  5005               	movf	??_interrupcao& (0+255),w,c
  5918  0076DC  6E05               	movwf	??_interrupcao& (0+255),c
  5919  0076DE  0E52               	movlw	82
  5920  0076E0  0100               	movlb	0	; () banked
  5921  0076E2  0100               	movlb	0	; () banked
  5922  0076E4  6F7E               	movwf	_comando& (0+255),b
  5923  0076E6  5005               	movf	??_interrupcao& (0+255),w,c
  5924  0076E8                     i2l3753:
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;main.c: 47: if (n>=3 && comando[0]=='R') {
  5928  0076E8  0E02               	movlw	2
  5929  0076EA  643B               	cpfsgt	_n,c
  5930  0076EC  D01D               	goto	i2l3765
  5931                           
  5932                           ; BSR set to: 0
  5933  0076EE  0100               	movlb	0	; () banked
  5934  0076F0  0100               	movlb	0	; () banked
  5935  0076F2  517E               	movf	_comando& (0+255),w,b
  5936  0076F4  0A52               	xorlw	82
  5937  0076F6  A4D8               	btfss	status,2,c
  5938  0076F8  D017               	goto	i2l3765
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;main.c: 48: comand[1]= comando[1];
  5942  0076FA  C07F  F061         	movff	_comando+1,_comand+1
  5943                           
  5944                           ;main.c: 49: comand[2]= comando[2];
  5945  0076FE  C080  F062         	movff	_comando+2,_comand+2
  5946                           
  5947                           ;main.c: 50: comand[3]= comando[3];
  5948  007702  C081  F063         	movff	_comando+3,_comand+3
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;main.c: 51: n=0; comando[0] = 32;
  5952  007706  6E05               	movwf	??_interrupcao& (0+255),c
  5953  007708  0E00               	movlw	0
  5954  00770A  6E3B               	movwf	_n,c
  5955  00770C  5005               	movf	??_interrupcao& (0+255),w,c
  5956  00770E  6E05               	movwf	??_interrupcao& (0+255),c
  5957  007710  0E20               	movlw	32
  5958  007712  0100               	movlb	0	; () banked
  5959  007714  0100               	movlb	0	; () banked
  5960  007716  6F7E               	movwf	_comando& (0+255),b
  5961  007718  5005               	movf	??_interrupcao& (0+255),w,c
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;main.c: 52: inverte_saida(31759); INTCONbits.TMR0IE = 1;
  5965  00771A  0E7C               	movlw	124
  5966  00771C  6E02               	movwf	i2inverte_saida@pino+1,c
  5967  00771E  0E0F               	movlw	15
  5968  007720  6E01               	movwf	i2inverte_saida@pino,c
  5969  007722  ECAE  F035         	call	i2_inverte_saida	;wreg free
  5970  007726  8AF2               	bsf	intcon,5,c	;volatile
  5971  007728                     i2l3765:
  5972                           
  5973                           ;main.c: 53: }
  5974                           ;main.c: 54: ++n; m=n; if(n>=29){n=0;}
  5975  007728  2A3B               	incf	_n,f,c
  5976  00772A  C03B  F03A         	movff	_n,_m
  5977  00772E  0E1C               	movlw	28
  5978  007730  643B               	cpfsgt	_n,c
  5979  007732  D068               	goto	i2l3811
  5980  007734  6E05               	movwf	??_interrupcao& (0+255),c
  5981  007736  0E00               	movlw	0
  5982  007738  6E3B               	movwf	_n,c
  5983  00773A  5005               	movf	??_interrupcao& (0+255),w,c
  5984  00773C  D063               	goto	i2l3811
  5985  00773E                     i2l3773:
  5986  00773E  0E00               	movlw	0
  5987  007740  0100               	movlb	0	; () banked
  5988  007742  0100               	movlb	0	; () banked
  5989  007744  6FA1               	movwf	(_flag+1)& (0+255),b
  5990  007746  0E00               	movlw	0
  5991  007748  0100               	movlb	0	; () banked
  5992  00774A  6FA0               	movwf	_flag& (0+255),b
  5993  00774C  0E00               	movlw	0
  5994  00774E  6E26               	movwf	_chegou+1,c
  5995  007750  0E01               	movlw	1
  5996  007752  6E25               	movwf	_chegou,c
  5997                           
  5998                           ; BSR set to: 0
  5999  007754  6E05               	movwf	??_interrupcao& (0+255),c
  6000  007756  0E00               	movlw	0
  6001  007758  6E3A               	movwf	_m,c
  6002  00775A  5005               	movf	??_interrupcao& (0+255),w,c
  6003  00775C                     i2l3777:
  6004                           
  6005                           ; BSR set to: 0
  6006  00775C  0E00               	movlw	0
  6007  00775E  0100               	movlb	0	; () banked
  6008  007760  0100               	movlb	0	; () banked
  6009  007762  6FA1               	movwf	(_flag+1)& (0+255),b
  6010  007764  0E00               	movlw	0
  6011  007766  0100               	movlb	0	; () banked
  6012  007768  6FA0               	movwf	_flag& (0+255),b
  6013  00776A  6E05               	movwf	??_interrupcao& (0+255),c
  6014  00776C  0E00               	movlw	0
  6015  00776E  6E3B               	movwf	_n,c
  6016  007770  5005               	movf	??_interrupcao& (0+255),w,c
  6017                           
  6018                           ; BSR set to: 0
  6019  007772  0E00               	movlw	0
  6020  007774  6E24               	movwf	_c+1,c
  6021  007776  0E01               	movlw	1
  6022  007778  6E23               	movwf	_c,c
  6023                           
  6024                           ; BSR set to: 0
  6025  00777A  0E7C               	movlw	124
  6026  00777C  6E02               	movwf	i2nivel_alto@pino+1,c
  6027  00777E  0E0F               	movlw	15
  6028  007780  6E01               	movwf	i2nivel_alto@pino,c
  6029  007782  ECB4  F036         	call	i2_nivel_alto	;wreg free
  6030  007786  0E00               	movlw	0
  6031  007788  6E28               	movwf	_envia+1,c
  6032  00778A  0E01               	movlw	1
  6033  00778C  D012               	goto	L11
  6034  00778E                     i2l3785:
  6035  00778E  0E00               	movlw	0
  6036  007790  0100               	movlb	0	; () banked
  6037  007792  0100               	movlb	0	; () banked
  6038  007794  6FA1               	movwf	(_flag+1)& (0+255),b
  6039  007796  0E00               	movlw	0
  6040  007798  0100               	movlb	0	; () banked
  6041  00779A  6FA0               	movwf	_flag& (0+255),b
  6042                           
  6043                           ; BSR set to: 0
  6044  00779C  6E05               	movwf	??_interrupcao& (0+255),c
  6045  00779E  0E00               	movlw	0
  6046  0077A0  6E3B               	movwf	_n,c
  6047  0077A2  5005               	movf	??_interrupcao& (0+255),w,c
  6048                           
  6049                           ; BSR set to: 0
  6050  0077A4  0E7C               	movlw	124
  6051  0077A6  6E02               	movwf	i2nivel_baixo@pino+1,c
  6052  0077A8  0E0F               	movlw	15
  6053  0077AA  6E01               	movwf	i2nivel_baixo@pino,c
  6054  0077AC  ECE4  F037         	call	i2_nivel_baixo	;wreg free
  6055  0077B0  D025               	goto	L13
  6056  0077B2                     L11:
  6057  0077B2  6E27               	movwf	_envia,c
  6058                           
  6059                           ;main.c: 62: break;
  6060  0077B4  D039               	goto	i2l610
  6061  0077B6                     i2l3793:
  6062  0077B6  0E00               	movlw	0
  6063  0077B8  0100               	movlb	0	; () banked
  6064  0077BA  0100               	movlb	0	; () banked
  6065  0077BC  6FA1               	movwf	(_flag+1)& (0+255),b
  6066  0077BE  0E00               	movlw	0
  6067  0077C0  0100               	movlb	0	; () banked
  6068  0077C2  6FA0               	movwf	_flag& (0+255),b
  6069                           
  6070                           ; BSR set to: 0
  6071  0077C4  6E05               	movwf	??_interrupcao& (0+255),c
  6072  0077C6  0E00               	movlw	0
  6073  0077C8  6E3B               	movwf	_n,c
  6074  0077CA  5005               	movf	??_interrupcao& (0+255),w,c
  6075                           
  6076                           ; BSR set to: 0
  6077  0077CC  0E7C               	movlw	124
  6078  0077CE  6E02               	movwf	i2nivel_alto@pino+1,c
  6079  0077D0  0E0F               	movlw	15
  6080  0077D2  6E01               	movwf	i2nivel_alto@pino,c
  6081  0077D4  ECB4  F036         	call	i2_nivel_alto	;wreg free
  6082  0077D8  D011               	goto	L13
  6083  0077DA                     i2l3801:
  6084  0077DA  0E00               	movlw	0
  6085  0077DC  0100               	movlb	0	; () banked
  6086  0077DE  0100               	movlb	0	; () banked
  6087  0077E0  6FA1               	movwf	(_flag+1)& (0+255),b
  6088  0077E2  0E00               	movlw	0
  6089  0077E4  0100               	movlb	0	; () banked
  6090  0077E6  6FA0               	movwf	_flag& (0+255),b
  6091                           
  6092                           ; BSR set to: 0
  6093  0077E8  6E05               	movwf	??_interrupcao& (0+255),c
  6094  0077EA  0E00               	movlw	0
  6095  0077EC  6E3B               	movwf	_n,c
  6096  0077EE  5005               	movf	??_interrupcao& (0+255),w,c
  6097                           
  6098                           ; BSR set to: 0
  6099  0077F0  0E7C               	movlw	124
  6100  0077F2  6E02               	movwf	i2inverte_saida@pino+1,c
  6101  0077F4  0E0F               	movlw	15
  6102  0077F6  6E01               	movwf	i2inverte_saida@pino,c
  6103  0077F8  ECAE  F035         	call	i2_inverte_saida	;wreg free
  6104  0077FC                     L13:
  6105  0077FC  0E00               	movlw	0
  6106  0077FE  6E28               	movwf	_envia+1,c
  6107  007800  0E00               	movlw	0
  6108  007802  D7D7               	goto	L11
  6109  007804                     i2l3811:
  6110  007804  0100               	movlb	0	; () banked
  6111  007806  0100               	movlb	0	; () banked
  6112  007808  517E               	movf	_comando& (0+255),w,b
  6113                           
  6114                           ; Switch size 1, requested type "space"
  6115                           ; Number of cases is 5, Range of values is 68 to 84
  6116                           ; switch strategies available:
  6117                           ; Name         Instructions Cycles
  6118                           ; simple_byte           16     9 (average)
  6119                           ;	Chosen strategy is simple_byte
  6120  00780A  0A44               	xorlw	68	; case 68
  6121  00780C  B4D8               	btfsc	status,2,c
  6122  00780E  D7BF               	goto	i2l3785
  6123  007810  0A08               	xorlw	8	; case 76
  6124  007812  B4D8               	btfsc	status,2,c
  6125  007814  D7A3               	goto	i2l3777
  6126  007816  0A03               	xorlw	3	; case 79
  6127  007818  B4D8               	btfsc	status,2,c
  6128  00781A  D791               	goto	i2l3773
  6129  00781C  0A1F               	xorlw	31	; case 80
  6130  00781E  B4D8               	btfsc	status,2,c
  6131  007820  D7CA               	goto	i2l3793
  6132  007822  0A04               	xorlw	4	; case 84
  6133  007824  B4D8               	btfsc	status,2,c
  6134  007826  D7D9               	goto	i2l3801
  6135  007828                     i2l610:
  6136  007828  C014  FFF5         	movff	??_interrupcao+15,tablat
  6137  00782C  C013  FFF8         	movff	??_interrupcao+14,tblptru
  6138  007830  C012  FFF7         	movff	??_interrupcao+13,tblptrh
  6139  007834  C011  FFF6         	movff	??_interrupcao+12,tblptrl
  6140  007838  C010  FFF4         	movff	??_interrupcao+11,prodh
  6141  00783C  C00F  FFF3         	movff	??_interrupcao+10,prodl
  6142  007840  C00E  FFDA         	movff	??_interrupcao+9,fsr2h
  6143  007844  C00D  FFD9         	movff	??_interrupcao+8,fsr2l
  6144  007848  C00C  FFE2         	movff	??_interrupcao+7,fsr1h
  6145  00784C  C00B  FFE1         	movff	??_interrupcao+6,fsr1l
  6146  007850  C00A  FFEA         	movff	??_interrupcao+5,fsr0h
  6147  007854  C009  FFE9         	movff	??_interrupcao+4,fsr0l
  6148  007858  C008  FFFB         	movff	??_interrupcao+3,pclatu
  6149  00785C  C007  FFFA         	movff	??_interrupcao+2,pclath
  6150  007860  0011               	retfie		f
  6151  007862                     __end_of_interrupcao:
  6152                           	opt stack 0
  6153                           pclatu	equ	0xFFB
  6154                           pclath	equ	0xFFA
  6155                           tblptru	equ	0xFF8
  6156                           tblptrh	equ	0xFF7
  6157                           tblptrl	equ	0xFF6
  6158                           tablat	equ	0xFF5
  6159                           prodh	equ	0xFF4
  6160                           prodl	equ	0xFF3
  6161                           intcon	equ	0xFF2
  6162                           intcon2	equ	0xFF1
  6163                           intcon3	equ	0xFF0
  6164                           postinc0	equ	0xFEE
  6165                           fsr0h	equ	0xFEA
  6166                           fsr0l	equ	0xFE9
  6167                           wreg	equ	0xFE8
  6168                           postdec1	equ	0xFE5
  6169                           fsr1h	equ	0xFE2
  6170                           fsr1l	equ	0xFE1
  6171                           indf2	equ	0xFDF
  6172                           fsr2h	equ	0xFDA
  6173                           fsr2l	equ	0xFD9
  6174                           status	equ	0xFD8
  6175                           
  6176 ;; *************** function i2_nivel_baixo *****************
  6177 ;; Defined at:
  6178 ;;		line 199 in file "SanUSB48X.h"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  pino            2    0[COMRAM] unsigned int 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;		None               void
  6185 ;; Registers used:
  6186 ;;		wreg, status,2, status,0
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6192 ;;      Params:         2       0       0       0       0       0       0       0       0
  6193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6194 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6195 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6196 ;;Total ram usage:        4 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_interrupcao
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text30
  6206  006FC8                     __ptext30:
  6207                           	opt stack 0
  6208  006FC8                     i2_nivel_baixo:
  6209                           	opt stack 23
  6210                           
  6211                           ;SanUSB48X.h: 201: switch(pino){
  6212                           
  6213                           ;incstack = 0
  6214  006FC8  D048               	goto	i2l3589
  6215  006FCA                     i2l205:
  6216  006FCA  9092               	bcf	3986,0,c	;volatile
  6217  006FCC  9080               	bcf	3968,0,c	;volatile
  6218  006FCE  D096               	goto	i2l228
  6219  006FD0                     i2l207:
  6220  006FD0  9292               	bcf	3986,1,c	;volatile
  6221  006FD2  9280               	bcf	3968,1,c	;volatile
  6222  006FD4  D093               	goto	i2l228
  6223  006FD6                     i2l208:
  6224  006FD6  9492               	bcf	3986,2,c	;volatile
  6225  006FD8  9480               	bcf	3968,2,c	;volatile
  6226  006FDA  D090               	goto	i2l228
  6227  006FDC                     i2l209:
  6228  006FDC  9692               	bcf	3986,3,c	;volatile
  6229  006FDE  9680               	bcf	3968,3,c	;volatile
  6230  006FE0  D08D               	goto	i2l228
  6231  006FE2                     i2l210:
  6232  006FE2  9892               	bcf	3986,4,c	;volatile
  6233  006FE4  9880               	bcf	3968,4,c	;volatile
  6234  006FE6  D08A               	goto	i2l228
  6235  006FE8                     i2l211:
  6236  006FE8  9A92               	bcf	3986,5,c	;volatile
  6237  006FEA  9A80               	bcf	3968,5,c	;volatile
  6238  006FEC  D087               	goto	i2l228
  6239  006FEE                     i2l3581:
  6240  006FEE  0E00               	movlw	0
  6241  006FF0  6E92               	movwf	3986,c	;volatile
  6242  006FF2  0E00               	movlw	0
  6243  006FF4  6E89               	movwf	3977,c	;volatile
  6244  006FF6  D082               	goto	i2l228
  6245  006FF8                     i2l213:
  6246  006FF8  9093               	bcf	3987,0,c	;volatile
  6247  006FFA  9081               	bcf	3969,0,c	;volatile
  6248  006FFC  D07F               	goto	i2l228
  6249  006FFE                     i2l214:
  6250  006FFE  9293               	bcf	3987,1,c	;volatile
  6251  007000  9281               	bcf	3969,1,c	;volatile
  6252  007002  D07C               	goto	i2l228
  6253  007004                     i2l215:
  6254  007004  9493               	bcf	3987,2,c	;volatile
  6255  007006  9481               	bcf	3969,2,c	;volatile
  6256  007008  D079               	goto	i2l228
  6257  00700A                     i2l216:
  6258  00700A  9693               	bcf	3987,3,c	;volatile
  6259  00700C  9681               	bcf	3969,3,c	;volatile
  6260  00700E  D076               	goto	i2l228
  6261  007010                     i2l217:
  6262  007010  9893               	bcf	3987,4,c	;volatile
  6263  007012  9881               	bcf	3969,4,c	;volatile
  6264  007014  D073               	goto	i2l228
  6265  007016                     i2l218:
  6266  007016  9A93               	bcf	3987,5,c	;volatile
  6267  007018  9A81               	bcf	3969,5,c	;volatile
  6268  00701A  D070               	goto	i2l228
  6269  00701C                     i2l219:
  6270  00701C  9C93               	bcf	3987,6,c	;volatile
  6271  00701E  9C81               	bcf	3969,6,c	;volatile
  6272  007020  D06D               	goto	i2l228
  6273  007022                     i2l220:
  6274  007022  9E93               	bcf	3987,7,c	;volatile
  6275  007024  9E81               	bcf	3969,7,c	;volatile
  6276  007026  D06A               	goto	i2l228
  6277  007028                     i2l3583:
  6278  007028  0E00               	movlw	0
  6279  00702A  6E93               	movwf	3987,c	;volatile
  6280  00702C  0E00               	movlw	0
  6281  00702E  6E8A               	movwf	3978,c	;volatile
  6282  007030  D065               	goto	i2l228
  6283  007032                     i2l222:
  6284  007032  9094               	bcf	3988,0,c	;volatile
  6285  007034  9082               	bcf	3970,0,c	;volatile
  6286  007036  D062               	goto	i2l228
  6287  007038                     i2l223:
  6288  007038  9294               	bcf	3988,1,c	;volatile
  6289  00703A  9282               	bcf	3970,1,c	;volatile
  6290  00703C  D05F               	goto	i2l228
  6291  00703E                     i2l224:
  6292  00703E  9494               	bcf	3988,2,c	;volatile
  6293  007040  9482               	bcf	3970,2,c	;volatile
  6294  007042  D05C               	goto	i2l228
  6295  007044                     i2l225:
  6296  007044  9C94               	bcf	3988,6,c	;volatile
  6297  007046  9C82               	bcf	3970,6,c	;volatile
  6298  007048  D059               	goto	i2l228
  6299  00704A                     i2l226:
  6300  00704A  9E94               	bcf	3988,7,c	;volatile
  6301  00704C  9E82               	bcf	3970,7,c	;volatile
  6302  00704E  D056               	goto	i2l228
  6303  007050                     i2l3585:
  6304  007050  0E00               	movlw	0
  6305  007052  6E94               	movwf	3988,c	;volatile
  6306  007054  0E00               	movlw	0
  6307  007056  6E8B               	movwf	3979,c	;volatile
  6308  007058  D051               	goto	i2l228
  6309  00705A                     i2l3589:
  6310  00705A  C001  F003         	movff	i2nivel_baixo@pino,??i2_nivel_baixo
  6311  00705E  C002  F004         	movff	i2nivel_baixo@pino+1,??i2_nivel_baixo+1
  6312                           
  6313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6314                           ; Switch size 1, requested type "space"
  6315                           ; Number of cases is 2, Range of values is 15 to 124
  6316                           ; switch strategies available:
  6317                           ; Name         Instructions Cycles
  6318                           ; simple_byte            7     4 (average)
  6319                           ;	Chosen strategy is simple_byte
  6320  007062  5004               	movf	??i2_nivel_baixo+1,w,c
  6321  007064  0A0F               	xorlw	15	; case 15
  6322  007066  B4D8               	btfsc	status,2,c
  6323  007068  D004               	goto	i2l5357
  6324  00706A  0A73               	xorlw	115	; case 124
  6325  00706C  B4D8               	btfsc	status,2,c
  6326  00706E  D00C               	goto	i2l5359
  6327  007070  D045               	goto	i2l228
  6328  007072                     i2l5357:
  6329                           
  6330                           ; Switch size 1, requested type "space"
  6331                           ; Number of cases is 3, Range of values is 128 to 130
  6332                           ; switch strategies available:
  6333                           ; Name         Instructions Cycles
  6334                           ; simple_byte           10     6 (average)
  6335                           ;	Chosen strategy is simple_byte
  6336  007072  5003               	movf	??i2_nivel_baixo,w,c
  6337  007074  0A80               	xorlw	128	; case 128
  6338  007076  B4D8               	btfsc	status,2,c
  6339  007078  D7BA               	goto	i2l3581
  6340  00707A  0A01               	xorlw	1	; case 129
  6341  00707C  B4D8               	btfsc	status,2,c
  6342  00707E  D7D4               	goto	i2l3583
  6343  007080  0A03               	xorlw	3	; case 130
  6344  007082  B4D8               	btfsc	status,2,c
  6345  007084  D7E5               	goto	i2l3585
  6346  007086  D03A               	goto	i2l228
  6347  007088                     i2l5359:
  6348                           
  6349                           ; Switch size 1, requested type "space"
  6350                           ; Number of cases is 19, Range of values is 0 to 23
  6351                           ; switch strategies available:
  6352                           ; Name         Instructions Cycles
  6353                           ; simple_byte           58    30 (average)
  6354                           ;	Chosen strategy is simple_byte
  6355  007088  5003               	movf	??i2_nivel_baixo,w,c
  6356  00708A  0A00               	xorlw	0	; case 0
  6357  00708C  B4D8               	btfsc	status,2,c
  6358  00708E  D79D               	goto	i2l205
  6359  007090  0A01               	xorlw	1	; case 1
  6360  007092  B4D8               	btfsc	status,2,c
  6361  007094  D79D               	goto	i2l207
  6362  007096  0A03               	xorlw	3	; case 2
  6363  007098  B4D8               	btfsc	status,2,c
  6364  00709A  D79D               	goto	i2l208
  6365  00709C  0A01               	xorlw	1	; case 3
  6366  00709E  B4D8               	btfsc	status,2,c
  6367  0070A0  D79D               	goto	i2l209
  6368  0070A2  0A07               	xorlw	7	; case 4
  6369  0070A4  B4D8               	btfsc	status,2,c
  6370  0070A6  D79D               	goto	i2l210
  6371  0070A8  0A01               	xorlw	1	; case 5
  6372  0070AA  B4D8               	btfsc	status,2,c
  6373  0070AC  D79D               	goto	i2l211
  6374  0070AE  0A0D               	xorlw	13	; case 8
  6375  0070B0  B4D8               	btfsc	status,2,c
  6376  0070B2  D7A2               	goto	i2l213
  6377  0070B4  0A01               	xorlw	1	; case 9
  6378  0070B6  B4D8               	btfsc	status,2,c
  6379  0070B8  D7A2               	goto	i2l214
  6380  0070BA  0A03               	xorlw	3	; case 10
  6381  0070BC  B4D8               	btfsc	status,2,c
  6382  0070BE  D7A2               	goto	i2l215
  6383  0070C0  0A01               	xorlw	1	; case 11
  6384  0070C2  B4D8               	btfsc	status,2,c
  6385  0070C4  D7A2               	goto	i2l216
  6386  0070C6  0A07               	xorlw	7	; case 12
  6387  0070C8  B4D8               	btfsc	status,2,c
  6388  0070CA  D7A2               	goto	i2l217
  6389  0070CC  0A01               	xorlw	1	; case 13
  6390  0070CE  B4D8               	btfsc	status,2,c
  6391  0070D0  D7A2               	goto	i2l218
  6392  0070D2  0A03               	xorlw	3	; case 14
  6393  0070D4  B4D8               	btfsc	status,2,c
  6394  0070D6  D7A2               	goto	i2l219
  6395  0070D8  0A01               	xorlw	1	; case 15
  6396  0070DA  B4D8               	btfsc	status,2,c
  6397  0070DC  D7A2               	goto	i2l220
  6398  0070DE  0A1F               	xorlw	31	; case 16
  6399  0070E0  B4D8               	btfsc	status,2,c
  6400  0070E2  D7A7               	goto	i2l222
  6401  0070E4  0A01               	xorlw	1	; case 17
  6402  0070E6  B4D8               	btfsc	status,2,c
  6403  0070E8  D7A7               	goto	i2l223
  6404  0070EA  0A03               	xorlw	3	; case 18
  6405  0070EC  B4D8               	btfsc	status,2,c
  6406  0070EE  D7A7               	goto	i2l224
  6407  0070F0  0A04               	xorlw	4	; case 22
  6408  0070F2  B4D8               	btfsc	status,2,c
  6409  0070F4  D7A7               	goto	i2l225
  6410  0070F6  0A01               	xorlw	1	; case 23
  6411  0070F8  B4D8               	btfsc	status,2,c
  6412  0070FA  D7A7               	goto	i2l226
  6413  0070FC                     i2l228:
  6414  0070FC  0012               	return	
  6415  0070FE                     __end_ofi2_nivel_baixo:
  6416                           	opt stack 0
  6417                           pclatu	equ	0xFFB
  6418                           pclath	equ	0xFFA
  6419                           tblptru	equ	0xFF8
  6420                           tblptrh	equ	0xFF7
  6421                           tblptrl	equ	0xFF6
  6422                           tablat	equ	0xFF5
  6423                           prodh	equ	0xFF4
  6424                           prodl	equ	0xFF3
  6425                           intcon	equ	0xFF2
  6426                           intcon2	equ	0xFF1
  6427                           intcon3	equ	0xFF0
  6428                           postinc0	equ	0xFEE
  6429                           fsr0h	equ	0xFEA
  6430                           fsr0l	equ	0xFE9
  6431                           wreg	equ	0xFE8
  6432                           postdec1	equ	0xFE5
  6433                           fsr1h	equ	0xFE2
  6434                           fsr1l	equ	0xFE1
  6435                           indf2	equ	0xFDF
  6436                           fsr2h	equ	0xFDA
  6437                           fsr2l	equ	0xFD9
  6438                           status	equ	0xFD8
  6439                           
  6440 ;; *************** function i2_nivel_alto *****************
  6441 ;; Defined at:
  6442 ;;		line 169 in file "SanUSB48X.h"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;  pino            2    0[COMRAM] unsigned int 
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;		None
  6447 ;; Return value:  Size  Location     Type
  6448 ;;		None               void
  6449 ;; Registers used:
  6450 ;;		wreg, status,2, status,0
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6456 ;;      Params:         2       0       0       0       0       0       0       0       0
  6457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6458 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6459 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6460 ;;Total ram usage:        4 bytes
  6461 ;; Hardware stack levels used:    1
  6462 ;; This function calls:
  6463 ;;		Nothing
  6464 ;; This function is called by:
  6465 ;;		_interrupcao
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           	psect	text31
  6470  006D68                     __ptext31:
  6471                           	opt stack 0
  6472  006D68                     i2_nivel_alto:
  6473                           	opt stack 23
  6474                           
  6475                           ;SanUSB48X.h: 172: switch(pino){
  6476                           
  6477                           ;incstack = 0
  6478  006D68  D045               	goto	i2l3569
  6479  006D6A                     i2l178:
  6480  006D6A  9092               	bcf	3986,0,c	;volatile
  6481  006D6C  8080               	bsf	3968,0,c	;volatile
  6482  006D6E  D093               	goto	i2l201
  6483  006D70                     i2l180:
  6484  006D70  9292               	bcf	3986,1,c	;volatile
  6485  006D72  8280               	bsf	3968,1,c	;volatile
  6486  006D74  D090               	goto	i2l201
  6487  006D76                     i2l181:
  6488  006D76  9492               	bcf	3986,2,c	;volatile
  6489  006D78  8480               	bsf	3968,2,c	;volatile
  6490  006D7A  D08D               	goto	i2l201
  6491  006D7C                     i2l182:
  6492  006D7C  9692               	bcf	3986,3,c	;volatile
  6493  006D7E  8680               	bsf	3968,3,c	;volatile
  6494  006D80  D08A               	goto	i2l201
  6495  006D82                     i2l183:
  6496  006D82  9892               	bcf	3986,4,c	;volatile
  6497  006D84  8880               	bsf	3968,4,c	;volatile
  6498  006D86  D087               	goto	i2l201
  6499  006D88                     i2l184:
  6500  006D88  9A92               	bcf	3986,5,c	;volatile
  6501  006D8A  8A80               	bsf	3968,5,c	;volatile
  6502  006D8C  D084               	goto	i2l201
  6503  006D8E                     i2l3555:
  6504  006D8E  0E00               	movlw	0
  6505  006D90  6E92               	movwf	3986,c	;volatile
  6506  006D92  6889               	setf	3977,c	;volatile
  6507  006D94  D080               	goto	i2l201
  6508  006D96                     i2l186:
  6509  006D96  9093               	bcf	3987,0,c	;volatile
  6510  006D98  8081               	bsf	3969,0,c	;volatile
  6511  006D9A  D07D               	goto	i2l201
  6512  006D9C                     i2l187:
  6513  006D9C  9293               	bcf	3987,1,c	;volatile
  6514  006D9E  8281               	bsf	3969,1,c	;volatile
  6515  006DA0  D07A               	goto	i2l201
  6516  006DA2                     i2l188:
  6517  006DA2  9493               	bcf	3987,2,c	;volatile
  6518  006DA4  8481               	bsf	3969,2,c	;volatile
  6519  006DA6  D077               	goto	i2l201
  6520  006DA8                     i2l189:
  6521  006DA8  9693               	bcf	3987,3,c	;volatile
  6522  006DAA  8681               	bsf	3969,3,c	;volatile
  6523  006DAC  D074               	goto	i2l201
  6524  006DAE                     i2l190:
  6525  006DAE  9893               	bcf	3987,4,c	;volatile
  6526  006DB0  8881               	bsf	3969,4,c	;volatile
  6527  006DB2  D071               	goto	i2l201
  6528  006DB4                     i2l191:
  6529  006DB4  9A93               	bcf	3987,5,c	;volatile
  6530  006DB6  8A81               	bsf	3969,5,c	;volatile
  6531  006DB8  D06E               	goto	i2l201
  6532  006DBA                     i2l192:
  6533  006DBA  9C93               	bcf	3987,6,c	;volatile
  6534  006DBC  8C81               	bsf	3969,6,c	;volatile
  6535  006DBE  D06B               	goto	i2l201
  6536  006DC0                     i2l193:
  6537  006DC0  9E93               	bcf	3987,7,c	;volatile
  6538  006DC2  8E81               	bsf	3969,7,c	;volatile
  6539  006DC4  D068               	goto	i2l201
  6540  006DC6                     i2l3559:
  6541  006DC6  0E00               	movlw	0
  6542  006DC8  6E93               	movwf	3987,c	;volatile
  6543  006DCA  688A               	setf	3978,c	;volatile
  6544  006DCC  D064               	goto	i2l201
  6545  006DCE                     i2l195:
  6546  006DCE  9094               	bcf	3988,0,c	;volatile
  6547  006DD0  8082               	bsf	3970,0,c	;volatile
  6548  006DD2  D061               	goto	i2l201
  6549  006DD4                     i2l196:
  6550  006DD4  9294               	bcf	3988,1,c	;volatile
  6551  006DD6  8282               	bsf	3970,1,c	;volatile
  6552  006DD8  D05E               	goto	i2l201
  6553  006DDA                     i2l197:
  6554  006DDA  9494               	bcf	3988,2,c	;volatile
  6555  006DDC  8482               	bsf	3970,2,c	;volatile
  6556  006DDE  D05B               	goto	i2l201
  6557  006DE0                     i2l198:
  6558  006DE0  9C94               	bcf	3988,6,c	;volatile
  6559  006DE2  8C82               	bsf	3970,6,c	;volatile
  6560  006DE4  D058               	goto	i2l201
  6561  006DE6                     i2l199:
  6562  006DE6  9E94               	bcf	3988,7,c	;volatile
  6563  006DE8  8E82               	bsf	3970,7,c	;volatile
  6564  006DEA  D055               	goto	i2l201
  6565  006DEC                     i2l3563:
  6566  006DEC  0E00               	movlw	0
  6567  006DEE  6E94               	movwf	3988,c	;volatile
  6568  006DF0  688B               	setf	3979,c	;volatile
  6569  006DF2  D051               	goto	i2l201
  6570  006DF4                     i2l3569:
  6571  006DF4  C001  F003         	movff	i2nivel_alto@pino,??i2_nivel_alto
  6572  006DF8  C002  F004         	movff	i2nivel_alto@pino+1,??i2_nivel_alto+1
  6573                           
  6574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6575                           ; Switch size 1, requested type "space"
  6576                           ; Number of cases is 2, Range of values is 15 to 124
  6577                           ; switch strategies available:
  6578                           ; Name         Instructions Cycles
  6579                           ; simple_byte            7     4 (average)
  6580                           ;	Chosen strategy is simple_byte
  6581  006DFC  5004               	movf	??i2_nivel_alto+1,w,c
  6582  006DFE  0A0F               	xorlw	15	; case 15
  6583  006E00  B4D8               	btfsc	status,2,c
  6584  006E02  D004               	goto	i2l5361
  6585  006E04  0A73               	xorlw	115	; case 124
  6586  006E06  B4D8               	btfsc	status,2,c
  6587  006E08  D00C               	goto	i2l5363
  6588  006E0A  D045               	goto	i2l201
  6589  006E0C                     i2l5361:
  6590                           
  6591                           ; Switch size 1, requested type "space"
  6592                           ; Number of cases is 3, Range of values is 128 to 130
  6593                           ; switch strategies available:
  6594                           ; Name         Instructions Cycles
  6595                           ; simple_byte           10     6 (average)
  6596                           ;	Chosen strategy is simple_byte
  6597  006E0C  5003               	movf	??i2_nivel_alto,w,c
  6598  006E0E  0A80               	xorlw	128	; case 128
  6599  006E10  B4D8               	btfsc	status,2,c
  6600  006E12  D7BD               	goto	i2l3555
  6601  006E14  0A01               	xorlw	1	; case 129
  6602  006E16  B4D8               	btfsc	status,2,c
  6603  006E18  D7D6               	goto	i2l3559
  6604  006E1A  0A03               	xorlw	3	; case 130
  6605  006E1C  B4D8               	btfsc	status,2,c
  6606  006E1E  D7E6               	goto	i2l3563
  6607  006E20  D03A               	goto	i2l201
  6608  006E22                     i2l5363:
  6609                           
  6610                           ; Switch size 1, requested type "space"
  6611                           ; Number of cases is 19, Range of values is 0 to 23
  6612                           ; switch strategies available:
  6613                           ; Name         Instructions Cycles
  6614                           ; simple_byte           58    30 (average)
  6615                           ;	Chosen strategy is simple_byte
  6616  006E22  5003               	movf	??i2_nivel_alto,w,c
  6617  006E24  0A00               	xorlw	0	; case 0
  6618  006E26  B4D8               	btfsc	status,2,c
  6619  006E28  D7A0               	goto	i2l178
  6620  006E2A  0A01               	xorlw	1	; case 1
  6621  006E2C  B4D8               	btfsc	status,2,c
  6622  006E2E  D7A0               	goto	i2l180
  6623  006E30  0A03               	xorlw	3	; case 2
  6624  006E32  B4D8               	btfsc	status,2,c
  6625  006E34  D7A0               	goto	i2l181
  6626  006E36  0A01               	xorlw	1	; case 3
  6627  006E38  B4D8               	btfsc	status,2,c
  6628  006E3A  D7A0               	goto	i2l182
  6629  006E3C  0A07               	xorlw	7	; case 4
  6630  006E3E  B4D8               	btfsc	status,2,c
  6631  006E40  D7A0               	goto	i2l183
  6632  006E42  0A01               	xorlw	1	; case 5
  6633  006E44  B4D8               	btfsc	status,2,c
  6634  006E46  D7A0               	goto	i2l184
  6635  006E48  0A0D               	xorlw	13	; case 8
  6636  006E4A  B4D8               	btfsc	status,2,c
  6637  006E4C  D7A4               	goto	i2l186
  6638  006E4E  0A01               	xorlw	1	; case 9
  6639  006E50  B4D8               	btfsc	status,2,c
  6640  006E52  D7A4               	goto	i2l187
  6641  006E54  0A03               	xorlw	3	; case 10
  6642  006E56  B4D8               	btfsc	status,2,c
  6643  006E58  D7A4               	goto	i2l188
  6644  006E5A  0A01               	xorlw	1	; case 11
  6645  006E5C  B4D8               	btfsc	status,2,c
  6646  006E5E  D7A4               	goto	i2l189
  6647  006E60  0A07               	xorlw	7	; case 12
  6648  006E62  B4D8               	btfsc	status,2,c
  6649  006E64  D7A4               	goto	i2l190
  6650  006E66  0A01               	xorlw	1	; case 13
  6651  006E68  B4D8               	btfsc	status,2,c
  6652  006E6A  D7A4               	goto	i2l191
  6653  006E6C  0A03               	xorlw	3	; case 14
  6654  006E6E  B4D8               	btfsc	status,2,c
  6655  006E70  D7A4               	goto	i2l192
  6656  006E72  0A01               	xorlw	1	; case 15
  6657  006E74  B4D8               	btfsc	status,2,c
  6658  006E76  D7A4               	goto	i2l193
  6659  006E78  0A1F               	xorlw	31	; case 16
  6660  006E7A  B4D8               	btfsc	status,2,c
  6661  006E7C  D7A8               	goto	i2l195
  6662  006E7E  0A01               	xorlw	1	; case 17
  6663  006E80  B4D8               	btfsc	status,2,c
  6664  006E82  D7A8               	goto	i2l196
  6665  006E84  0A03               	xorlw	3	; case 18
  6666  006E86  B4D8               	btfsc	status,2,c
  6667  006E88  D7A8               	goto	i2l197
  6668  006E8A  0A04               	xorlw	4	; case 22
  6669  006E8C  B4D8               	btfsc	status,2,c
  6670  006E8E  D7A8               	goto	i2l198
  6671  006E90  0A01               	xorlw	1	; case 23
  6672  006E92  B4D8               	btfsc	status,2,c
  6673  006E94  D7A8               	goto	i2l199
  6674  006E96                     i2l201:
  6675  006E96  0012               	return	
  6676  006E98                     __end_ofi2_nivel_alto:
  6677                           	opt stack 0
  6678                           pclatu	equ	0xFFB
  6679                           pclath	equ	0xFFA
  6680                           tblptru	equ	0xFF8
  6681                           tblptrh	equ	0xFF7
  6682                           tblptrl	equ	0xFF6
  6683                           tablat	equ	0xFF5
  6684                           prodh	equ	0xFF4
  6685                           prodl	equ	0xFF3
  6686                           intcon	equ	0xFF2
  6687                           intcon2	equ	0xFF1
  6688                           intcon3	equ	0xFF0
  6689                           postinc0	equ	0xFEE
  6690                           fsr0h	equ	0xFEA
  6691                           fsr0l	equ	0xFE9
  6692                           wreg	equ	0xFE8
  6693                           postdec1	equ	0xFE5
  6694                           fsr1h	equ	0xFE2
  6695                           fsr1l	equ	0xFE1
  6696                           indf2	equ	0xFDF
  6697                           fsr2h	equ	0xFDA
  6698                           fsr2l	equ	0xFD9
  6699                           status	equ	0xFD8
  6700                           
  6701 ;; *************** function i2_inverte_saida *****************
  6702 ;; Defined at:
  6703 ;;		line 228 in file "SanUSB48X.h"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  pino            2    0[COMRAM] unsigned int 
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;		None
  6708 ;; Return value:  Size  Location     Type
  6709 ;;		None               void
  6710 ;; Registers used:
  6711 ;;		wreg, status,2, status,0
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6717 ;;      Params:         2       0       0       0       0       0       0       0       0
  6718 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6719 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6720 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6721 ;;Total ram usage:        4 bytes
  6722 ;; Hardware stack levels used:    1
  6723 ;; This function calls:
  6724 ;;		Nothing
  6725 ;; This function is called by:
  6726 ;;		_interrupcao
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730                           	psect	text32
  6731  006B5C                     __ptext32:
  6732                           	opt stack 0
  6733  006B5C                     i2_inverte_saida:
  6734                           	opt stack 23
  6735                           
  6736                           ;SanUSB48X.h: 230: switch(pino){
  6737                           
  6738                           ;incstack = 0
  6739  006B5C  D03C               	goto	i2l3603
  6740  006B5E                     i2l232:
  6741  006B5E  9092               	bcf	3986,0,c	;volatile
  6742  006B60  7080               	btg	3968,0,c	;volatile
  6743  006B62  D07E               	goto	i2l253
  6744  006B64                     i2l234:
  6745  006B64  9292               	bcf	3986,1,c	;volatile
  6746  006B66  7280               	btg	3968,1,c	;volatile
  6747  006B68  D07B               	goto	i2l253
  6748  006B6A                     i2l235:
  6749  006B6A  9492               	bcf	3986,2,c	;volatile
  6750  006B6C  7480               	btg	3968,2,c	;volatile
  6751  006B6E  D078               	goto	i2l253
  6752  006B70                     i2l236:
  6753  006B70  9692               	bcf	3986,3,c	;volatile
  6754  006B72  7680               	btg	3968,3,c	;volatile
  6755  006B74  D075               	goto	i2l253
  6756  006B76                     i2l237:
  6757  006B76  9892               	bcf	3986,4,c	;volatile
  6758  006B78  7880               	btg	3968,4,c	;volatile
  6759  006B7A  D072               	goto	i2l253
  6760  006B7C                     i2l238:
  6761  006B7C  9A92               	bcf	3986,5,c	;volatile
  6762  006B7E  7A80               	btg	3968,5,c	;volatile
  6763  006B80  D06F               	goto	i2l253
  6764  006B82                     i2l239:
  6765  006B82  9093               	bcf	3987,0,c	;volatile
  6766  006B84  7081               	btg	3969,0,c	;volatile
  6767  006B86  D06C               	goto	i2l253
  6768  006B88                     i2l240:
  6769  006B88  9293               	bcf	3987,1,c	;volatile
  6770  006B8A  7281               	btg	3969,1,c	;volatile
  6771  006B8C  D069               	goto	i2l253
  6772  006B8E                     i2l241:
  6773  006B8E  9493               	bcf	3987,2,c	;volatile
  6774  006B90  7481               	btg	3969,2,c	;volatile
  6775  006B92  D066               	goto	i2l253
  6776  006B94                     i2l242:
  6777  006B94  9693               	bcf	3987,3,c	;volatile
  6778  006B96  7681               	btg	3969,3,c	;volatile
  6779  006B98  D063               	goto	i2l253
  6780  006B9A                     i2l243:
  6781  006B9A  9893               	bcf	3987,4,c	;volatile
  6782  006B9C  7881               	btg	3969,4,c	;volatile
  6783  006B9E  D060               	goto	i2l253
  6784  006BA0                     i2l244:
  6785  006BA0  9A93               	bcf	3987,5,c	;volatile
  6786  006BA2  7A81               	btg	3969,5,c	;volatile
  6787  006BA4  D05D               	goto	i2l253
  6788  006BA6                     i2l245:
  6789  006BA6  9C93               	bcf	3987,6,c	;volatile
  6790  006BA8  7C81               	btg	3969,6,c	;volatile
  6791  006BAA  D05A               	goto	i2l253
  6792  006BAC                     i2l246:
  6793  006BAC  9E93               	bcf	3987,7,c	;volatile
  6794  006BAE  7E81               	btg	3969,7,c	;volatile
  6795  006BB0  D057               	goto	i2l253
  6796  006BB2                     i2l247:
  6797  006BB2  9094               	bcf	3988,0,c	;volatile
  6798  006BB4  7082               	btg	3970,0,c	;volatile
  6799  006BB6  D054               	goto	i2l253
  6800  006BB8                     i2l248:
  6801  006BB8  9294               	bcf	3988,1,c	;volatile
  6802  006BBA  7282               	btg	3970,1,c	;volatile
  6803  006BBC  D051               	goto	i2l253
  6804  006BBE                     i2l249:
  6805  006BBE  9494               	bcf	3988,2,c	;volatile
  6806  006BC0  7482               	btg	3970,2,c	;volatile
  6807  006BC2  D04E               	goto	i2l253
  6808  006BC4                     i2l250:
  6809  006BC4  9C94               	bcf	3988,6,c	;volatile
  6810  006BC6  7C82               	btg	3970,6,c	;volatile
  6811  006BC8  D04B               	goto	i2l253
  6812  006BCA                     i2l251:
  6813  006BCA  9E94               	bcf	3988,7,c	;volatile
  6814  006BCC  7E82               	btg	3970,7,c	;volatile
  6815  006BCE  D048               	goto	i2l253
  6816  006BD0                     i2l252:
  6817  006BD0  9E95               	bcf	3989,7,c	;volatile
  6818  006BD2  7E83               	btg	3971,7,c	;volatile
  6819  006BD4  D045               	goto	i2l253
  6820  006BD6                     i2l3603:
  6821  006BD6  C001  F003         	movff	i2inverte_saida@pino,??i2_inverte_saida
  6822  006BDA  C002  F004         	movff	i2inverte_saida@pino+1,??i2_inverte_saida+1
  6823                           
  6824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6825                           ; Switch size 1, requested type "space"
  6826                           ; Number of cases is 1, Range of values is 124 to 124
  6827                           ; switch strategies available:
  6828                           ; Name         Instructions Cycles
  6829                           ; simple_byte            4     3 (average)
  6830                           ;	Chosen strategy is simple_byte
  6831  006BDE  5004               	movf	??i2_inverte_saida+1,w,c
  6832  006BE0  0A7C               	xorlw	124	; case 124
  6833  006BE2  A4D8               	btfss	status,2,c
  6834  006BE4  D03D               	goto	i2l253
  6835                           
  6836                           ; Switch size 1, requested type "space"
  6837                           ; Number of cases is 20, Range of values is 0 to 31
  6838                           ; switch strategies available:
  6839                           ; Name         Instructions Cycles
  6840                           ; simple_byte           61    31 (average)
  6841                           ;	Chosen strategy is simple_byte
  6842  006BE6  5003               	movf	??i2_inverte_saida,w,c
  6843  006BE8  0A00               	xorlw	0	; case 0
  6844  006BEA  B4D8               	btfsc	status,2,c
  6845  006BEC  D7B8               	goto	i2l232
  6846  006BEE  0A01               	xorlw	1	; case 1
  6847  006BF0  B4D8               	btfsc	status,2,c
  6848  006BF2  D7B8               	goto	i2l234
  6849  006BF4  0A03               	xorlw	3	; case 2
  6850  006BF6  B4D8               	btfsc	status,2,c
  6851  006BF8  D7B8               	goto	i2l235
  6852  006BFA  0A01               	xorlw	1	; case 3
  6853  006BFC  B4D8               	btfsc	status,2,c
  6854  006BFE  D7B8               	goto	i2l236
  6855  006C00  0A07               	xorlw	7	; case 4
  6856  006C02  B4D8               	btfsc	status,2,c
  6857  006C04  D7B8               	goto	i2l237
  6858  006C06  0A01               	xorlw	1	; case 5
  6859  006C08  B4D8               	btfsc	status,2,c
  6860  006C0A  D7B8               	goto	i2l238
  6861  006C0C  0A0D               	xorlw	13	; case 8
  6862  006C0E  B4D8               	btfsc	status,2,c
  6863  006C10  D7B8               	goto	i2l239
  6864  006C12  0A01               	xorlw	1	; case 9
  6865  006C14  B4D8               	btfsc	status,2,c
  6866  006C16  D7B8               	goto	i2l240
  6867  006C18  0A03               	xorlw	3	; case 10
  6868  006C1A  B4D8               	btfsc	status,2,c
  6869  006C1C  D7B8               	goto	i2l241
  6870  006C1E  0A01               	xorlw	1	; case 11
  6871  006C20  B4D8               	btfsc	status,2,c
  6872  006C22  D7B8               	goto	i2l242
  6873  006C24  0A07               	xorlw	7	; case 12
  6874  006C26  B4D8               	btfsc	status,2,c
  6875  006C28  D7B8               	goto	i2l243
  6876  006C2A  0A01               	xorlw	1	; case 13
  6877  006C2C  B4D8               	btfsc	status,2,c
  6878  006C2E  D7B8               	goto	i2l244
  6879  006C30  0A03               	xorlw	3	; case 14
  6880  006C32  B4D8               	btfsc	status,2,c
  6881  006C34  D7B8               	goto	i2l245
  6882  006C36  0A01               	xorlw	1	; case 15
  6883  006C38  B4D8               	btfsc	status,2,c
  6884  006C3A  D7B8               	goto	i2l246
  6885  006C3C  0A1F               	xorlw	31	; case 16
  6886  006C3E  B4D8               	btfsc	status,2,c
  6887  006C40  D7B8               	goto	i2l247
  6888  006C42  0A01               	xorlw	1	; case 17
  6889  006C44  B4D8               	btfsc	status,2,c
  6890  006C46  D7B8               	goto	i2l248
  6891  006C48  0A03               	xorlw	3	; case 18
  6892  006C4A  B4D8               	btfsc	status,2,c
  6893  006C4C  D7B8               	goto	i2l249
  6894  006C4E  0A04               	xorlw	4	; case 22
  6895  006C50  B4D8               	btfsc	status,2,c
  6896  006C52  D7B8               	goto	i2l250
  6897  006C54  0A01               	xorlw	1	; case 23
  6898  006C56  B4D8               	btfsc	status,2,c
  6899  006C58  D7B8               	goto	i2l251
  6900  006C5A  0A08               	xorlw	8	; case 31
  6901  006C5C  B4D8               	btfsc	status,2,c
  6902  006C5E  D7B8               	goto	i2l252
  6903  006C60                     i2l253:
  6904  006C60  0012               	return	
  6905  006C62                     __end_ofi2_inverte_saida:
  6906                           	opt stack 0
  6907                           pclatu	equ	0xFFB
  6908                           pclath	equ	0xFFA
  6909                           tblptru	equ	0xFF8
  6910                           tblptrh	equ	0xFF7
  6911                           tblptrl	equ	0xFF6
  6912                           tablat	equ	0xFF5
  6913                           prodh	equ	0xFF4
  6914                           prodl	equ	0xFF3
  6915                           intcon	equ	0xFF2
  6916                           intcon2	equ	0xFF1
  6917                           intcon3	equ	0xFF0
  6918                           postinc0	equ	0xFEE
  6919                           fsr0h	equ	0xFEA
  6920                           fsr0l	equ	0xFE9
  6921                           wreg	equ	0xFE8
  6922                           postdec1	equ	0xFE5
  6923                           fsr1h	equ	0xFE2
  6924                           fsr1l	equ	0xFE1
  6925                           indf2	equ	0xFDF
  6926                           fsr2h	equ	0xFDA
  6927                           fsr2l	equ	0xFD9
  6928                           status	equ	0xFD8
  6929                           
  6930 ;; *************** function _ReadUSART *****************
  6931 ;; Defined at:
  6932 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\pic18\plib\USART\uread.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;		None
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  data            1    0[COMRAM] unsigned char 
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  1    wreg      unsigned char 
  6939 ;; Registers used:
  6940 ;;		wreg, status,2, status,0
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6946 ;;      Params:         0       0       0       0       0       0       0       0       0
  6947 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6948 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6949 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6950 ;;Total ram usage:        1 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; This function calls:
  6953 ;;		Nothing
  6954 ;; This function is called by:
  6955 ;;		_interrupcao
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           	psect	text33
  6960  00638A                     __ptext33:
  6961                           	opt stack 0
  6962  00638A                     _ReadUSART:
  6963                           	opt stack 23
  6964                           
  6965                           ;incstack = 0
  6966  00638A  0EF2               	movlw	242
  6967  00638C  1635               	andwf	_USART_Status,f,c
  6968  00638E  ACAB               	btfss	4011,6,c	;volatile
  6969  006390  D003               	goto	i2l630
  6970  006392  9035               	bcf	_USART_Status,0,c
  6971  006394  B0AB               	btfsc	4011,0,c	;volatile
  6972  006396  8035               	bsf	_USART_Status,0,c
  6973  006398                     i2l630:
  6974  006398  B4AB               	btfsc	4011,2,c	;volatile
  6975  00639A  8435               	bsf	_USART_Status,2,c
  6976  00639C  B2AB               	btfsc	4011,1,c	;volatile
  6977  00639E  8635               	bsf	_USART_Status,3,c
  6978  0063A0  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6979  0063A4  5001               	movf	ReadUSART@data,w,c
  6980  0063A6  0012               	return	
  6981  0063A8                     __end_of_ReadUSART:
  6982                           	opt stack 0
  6983                           pclatu	equ	0xFFB
  6984                           pclath	equ	0xFFA
  6985                           tblptru	equ	0xFF8
  6986                           tblptrh	equ	0xFF7
  6987                           tblptrl	equ	0xFF6
  6988                           tablat	equ	0xFF5
  6989                           prodh	equ	0xFF4
  6990                           prodl	equ	0xFF3
  6991                           intcon	equ	0xFF2
  6992                           intcon2	equ	0xFF1
  6993                           intcon3	equ	0xFF0
  6994                           postinc0	equ	0xFEE
  6995                           fsr0h	equ	0xFEA
  6996                           fsr0l	equ	0xFE9
  6997                           wreg	equ	0xFE8
  6998                           postdec1	equ	0xFE5
  6999                           fsr1h	equ	0xFE2
  7000                           fsr1l	equ	0xFE1
  7001                           indf2	equ	0xFDF
  7002                           fsr2h	equ	0xFDA
  7003                           fsr2l	equ	0xFD9
  7004                           status	equ	0xFD8
  7005                           pclatu	equ	0xFFB
  7006                           pclath	equ	0xFFA
  7007                           tblptru	equ	0xFF8
  7008                           tblptrh	equ	0xFF7
  7009                           tblptrl	equ	0xFF6
  7010                           tablat	equ	0xFF5
  7011                           prodh	equ	0xFF4
  7012                           prodl	equ	0xFF3
  7013                           intcon	equ	0xFF2
  7014                           intcon2	equ	0xFF1
  7015                           intcon3	equ	0xFF0
  7016                           postinc0	equ	0xFEE
  7017                           fsr0h	equ	0xFEA
  7018                           fsr0l	equ	0xFE9
  7019                           wreg	equ	0xFE8
  7020                           postdec1	equ	0xFE5
  7021                           fsr1h	equ	0xFE2
  7022                           fsr1l	equ	0xFE1
  7023                           indf2	equ	0xFDF
  7024                           fsr2h	equ	0xFDA
  7025                           fsr2l	equ	0xFD9
  7026                           status	equ	0xFD8
  7027                           
  7028                           	psect	text34
  7029  000000                     __ptext34:
  7030                           	opt stack 0
  7031                           pclatu	equ	0xFFB
  7032                           pclath	equ	0xFFA
  7033                           tblptru	equ	0xFF8
  7034                           tblptrh	equ	0xFF7
  7035                           tblptrl	equ	0xFF6
  7036                           tablat	equ	0xFF5
  7037                           prodh	equ	0xFF4
  7038                           prodl	equ	0xFF3
  7039                           intcon	equ	0xFF2
  7040                           intcon2	equ	0xFF1
  7041                           intcon3	equ	0xFF0
  7042                           postinc0	equ	0xFEE
  7043                           fsr0h	equ	0xFEA
  7044                           fsr0l	equ	0xFE9
  7045                           wreg	equ	0xFE8
  7046                           postdec1	equ	0xFE5
  7047                           fsr1h	equ	0xFE2
  7048                           fsr1l	equ	0xFE1
  7049                           indf2	equ	0xFDF
  7050                           fsr2h	equ	0xFDA
  7051                           fsr2l	equ	0xFD9
  7052                           status	equ	0xFD8
  7053                           
  7054                           	psect	rparam
  7055  0000                     pclatu	equ	0xFFB
  7056                           pclath	equ	0xFFA
  7057                           tblptru	equ	0xFF8
  7058                           tblptrh	equ	0xFF7
  7059                           tblptrl	equ	0xFF6
  7060                           tablat	equ	0xFF5
  7061                           prodh	equ	0xFF4
  7062                           prodl	equ	0xFF3
  7063                           intcon	equ	0xFF2
  7064                           intcon2	equ	0xFF1
  7065                           intcon3	equ	0xFF0
  7066                           postinc0	equ	0xFEE
  7067                           fsr0h	equ	0xFEA
  7068                           fsr0l	equ	0xFE9
  7069                           wreg	equ	0xFE8
  7070                           postdec1	equ	0xFE5
  7071                           fsr1h	equ	0xFE2
  7072                           fsr1l	equ	0xFE1
  7073                           indf2	equ	0xFDF
  7074                           fsr2h	equ	0xFDA
  7075                           fsr2l	equ	0xFD9
  7076                           status	equ	0xFD8


Data Sizes:
    Strings     184
    Constant    117
    Data        10
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      75
    BANK0           160     19      91
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sendr@st	PTR unsigned char  size(2) Largest target is 20
		 -> icm(CODE[15]), icg(CODE[9]), icr(CODE[9]), icn(CODE[17]), 
		 -> icb(CODE[9]), icp(CODE[3]), icms(CODE[19]), icgs(CODE[20]), 
		 -> icrs(CODE[11]), atc(CODE[5]), 

    sendrw@st	PTR unsigned char  size(2) Largest target is 111
		 -> STR_5(CODE[16]), STR_4(CODE[19]), STR_3(CODE[19]), STR_2(CODE[19]), 
		 -> STR_1(CODE[111]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    _taxa_serial->___lldiv
    _sendrw->_swputc
    _sendnum->___lwdiv
    ___lwmod->___lwdiv
    _le_AD10bits->_tempo_ms
    _clock_int_48MHz->___lwdiv
    ___lwdiv->_le_AD10bits
    _bt_ini->_tempo_ms
    _configBR6->_tempo_ms
    _resetBT->_tempo_ms
    _ATC->_tempo_ms
    _tempo_ms->___wmul
    _sendr->_sputc

Critical Paths under _interrupcao in COMRAM

    _interrupcao->i2_inverte_saida
    _interrupcao->i2_nivel_alto
    _interrupcao->i2_nivel_baixo

Critical Paths under _main in BANK0

    _main->_taxa_serial
    _sendnum->___lwmod
    ___lwmod->___lwdiv
    _clock_int_48MHz->___lwdiv

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   58144
                                             16 BANK0      3     3      0
                            ___lwdiv
                             ___wmul
                             _bt_ini
                    _clock_int_48MHz
                  _habilita_canal_AD
               _habilita_interrupcao
                      _inverte_saida
                        _le_AD10bits
                            _sendnum
                             _sendrw
                        _taxa_serial
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (1) _taxa_serial                                         16    12      4     568
                                              0 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     395
                                             20 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _sendrw                                               4     2      2     478
                                             21 COMRAM     4     2      2
                             _swputc
 ---------------------------------------------------------------------------------
 (1) _sendnum                                              2     0      2    2785
                                             13 BANK0      2     0      2
                            ___lwdiv
                            ___lwmod
                        _le_AD10bits (ARG)
                             _swputc
 ---------------------------------------------------------------------------------
 (2) _swputc                                               1     1      0      31
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1002
                                              7 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _le_AD10bits                                          3     1      2    5136
                                             30 COMRAM     3     1      2
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (1) _habilita_interrupcao                                 4     2      2     108
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _habilita_canal_AD                                    1     1      0      31
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _clock_int_48MHz                                      0     0      0    1783
                            ___awmod
                            ___lwdiv
                          _le_eeprom
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1165
                                             33 COMRAM     1     1      0
                                              0 BANK0      7     3      4
                            ___awmod (ARG)
                             ___wmul (ARG)
                        _le_AD10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     587
                                             20 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _bt_ini                                               1     1      0   37447
                                             30 COMRAM     1     1      0
                          _configBR6
                     _escreve_eeprom
                      _inverte_saida
                          _le_eeprom
                              _sendr
                              _sputc
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (2) _le_eeprom                                            1     1      0      31
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _escreve_eeprom                                       2     1      1     447
                                             20 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _configBR6                                            0     0      0   27852
                      _inverte_saida
                      _modoAttention
                         _modoNormal
                              _sendr
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (3) _modoNormal                                           0     0      0    9362
                        _nivel_baixo
                            _resetBT
 ---------------------------------------------------------------------------------
 (4) _resetBT                                              0     0      0    9086
                      _inverte_saida
                              _sendr
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (4) _nivel_baixo                                          4     2      2     276
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _modoAttention                                        0     0      0    9404
                                _ATC
                         _nivel_alto
 ---------------------------------------------------------------------------------
 (4) _nivel_alto                                           4     2      2     318
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _ATC                                                  0     0      0    9086
                      _inverte_saida
                              _sendr
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (1) _tempo_ms                                             4     2      2    5105
                                             26 COMRAM     4     2      2
                        _Delay1KTCYx
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1156
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _sendr                                                4     2      2    1633
                                             23 COMRAM     4     2      2
                              _sputc
 ---------------------------------------------------------------------------------
 (2) _sputc                                                3     3      0      31
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _inverte_saida                                        4     2      2    2348
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupcao                                         16    16      0     375
                                              4 COMRAM    16    16      0
                          _ReadUSART
                    i2_inverte_saida
                       i2_nivel_alto
                      i2_nivel_baixo
 ---------------------------------------------------------------------------------
 (8) i2_nivel_baixo                                        4     2      2     126
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_nivel_alto                                         4     2      2     152
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_inverte_saida                                      4     2      2      74
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___awmod (ARG)
     ___wmul (ARG)
     _le_AD10bits (ARG)
       _tempo_ms
         _Delay1KTCYx
         ___wmul
   ___wmul
   _bt_ini
     _configBR6
       _inverte_saida
       _modoAttention
         _ATC
           _inverte_saida
           _sendr
             _sputc
           _tempo_ms
             _Delay1KTCYx
             ___wmul
         _nivel_alto
       _modoNormal
         _nivel_baixo
         _resetBT
           _inverte_saida
           _sendr
             _sputc
           _tempo_ms
             _Delay1KTCYx
             ___wmul
       _sendr
         _sputc
       _tempo_ms
         _Delay1KTCYx
         ___wmul
     _escreve_eeprom
     _inverte_saida
     _le_eeprom
     _sendr
       _sputc
     _sputc
     _tempo_ms
       _Delay1KTCYx
       ___wmul
   _clock_int_48MHz
     ___awmod
     ___lwdiv
       ___awmod (ARG)
       ___wmul (ARG)
       _le_AD10bits (ARG)
         _tempo_ms
           _Delay1KTCYx
           ___wmul
     _le_eeprom
   _habilita_canal_AD
   _habilita_interrupcao
   _inverte_saida
   _le_AD10bits
     _tempo_ms
       _Delay1KTCYx
       ___wmul
   _sendnum
     ___lwdiv
       ___awmod (ARG)
       ___wmul (ARG)
       _le_AD10bits (ARG)
         _tempo_ms
           _Delay1KTCYx
           ___wmul
     ___lwmod
       ___lwdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
         _le_AD10bits (ARG)
           _tempo_ms
             _Delay1KTCYx
             ___wmul
     _le_AD10bits (ARG)
       _tempo_ms
         _Delay1KTCYx
         ___wmul
     _swputc (ARG)
   _sendrw
     _swputc
   _taxa_serial
     ___lldiv
   _tempo_ms
     _Delay1KTCYx
     ___wmul

 _interrupcao (ROOT)
   _ReadUSART
   i2_inverte_saida
   i2_nivel_alto
   i2_nivel_baixo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      5B       5       56.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      4B       1       78.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A6      20        0.0%
DATA                 0      0      A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Sat Jul 11 15:11:05 2015

                            _G 0045                              _R 0042                              _c 0023  
                            _e 0048                              _i 002D                              _k 0039  
                            _m 003A                              _n 003B                              _w 0033  
                            _y 0040                              _z 0041                             _Fe 0044  
                           _c1 0036                             _po 0049                             _rr 004A  
                           _ru 004B            ___wmul@multiplicand 0017           __end_ofi2_nivel_alto 6E98  
            ??_clock_int_48MHz 0023                            l201 6FC6                            l210 7118  
                          l211 711E                            l220 7158                            l140 6A18  
                          l213 712E                            l205 7100                            l222 7168  
                          l214 7134                            l142 6A1E                            l150 6AB4  
                          l223 716E                            l215 713A                            l207 7106  
                          l143 6A24                            l240 6C8E                            l232 6C64  
                          l224 7174                            l216 7140                            l208 710C  
                          l144 6A2A                            l241 6C94                            l225 717A  
                          l217 7146                            l209 7112                            l145 6A30  
                          l250 6CCA                            l242 6C9A                            l234 6C6A  
                          l226 7180                            l218 714C                            l146 6A36  
                          l251 6CD0                            l243 6CA0                            l235 6C70  
                          l219 7152                            l147 6A3C                            l252 6CD6  
                          l244 6CA6                            l236 6C76                            l180 6EA0  
                          l500 64EC                            l228 7232                            l148 6A42  
                          l245 6CAC                            l237 6C7C                            l253 6D66  
                          l181 6EA6                            l149 6A46                            l246 6CB2  
                          l238 6C82                            l190 6EDE                            l182 6EAC  
                          l430 7392                            l247 6CB8                            l239 6C88  
                          l191 6EE4                            l183 6EB2                            l248 6CBE  
                          l192 6EEA                            l184 6EB8                            l328 68C8  
                          l249 6CC4                            l193 6EF0          __end_of_inverte_saida 6D68  
                          l186 6EC6                            l178 6E9A                            l506 6738  
                          l195 6EFE                            l187 6ECC                            l196 6F04  
                          l188 6ED2                            l197 6F0A                            l189 6ED8  
                          l286 653E                            l198 6F10                            l199 6F16  
                          l367 63C4                            l391 6346                            l376 65DA  
                          l537 7ECE                            l397 63CE                            l845 6356  
                          _ATC 6430                            _PR2 000FCB                            _REG 0046  
                          _icb 7F23                            _atc 7F3E                            _icg 7F2C  
                          _icm 7F09                            _icn 7EF8                            _icp 7F43  
                          _icr 7F35                            _ind 0038                   ___awmod@sign 001B  
      __end_ofi2_inverte_saida 6C62                            prod 000FF3                            wreg 000FE8  
        __end_ofi2_nivel_baixo 70FE                           ?_ATC 0001                           l1147 6B52  
                         l1157 6840                           l1078 67AE                           l5005 7402  
                         l4231 6CDC                           l4241 654C                           l5051 752C  
                         l4253 65A8                           l4245 6556                           l4261 6EF6  
                         l4421 6930                           l4413 6902                           l5053 7534  
                         l4271 6F24                           l4335 64D8                           l4423 6938  
                         l5047 7526                           l4249 6582                           l4265 6F1C  
                         l4257 6EBE                           l4353 671E                           l4425 693C  
                         l4433 695A                           l4417 691E                           l4505 6A4C  
                         l4283 7124                           l4291 7190                           l4531 6858  
                         l4451 6770                           l4285 715E                           l4349 6704  
                         l4437 6968                           l4429 6950                           l5341 6A8C  
                         l4541 686C                           l4533 685C                           l5351 6F3C  
                         l4287 7186                           l4703 7AAA                           l4471 6AF0  
                         l5343 6A96                           l4543 6870                           l4535 6860  
                         l4551 68B8                           l4527 6850                           l4447 6760  
                         l5353 6F52                           l4801 7CCA                           l4481 6B3E  
                         l4473 6AF8                           l5345 6AA6                           l4545 6874  
                         l4537 6864                           l4529 6854                           l4449 676C  
                         l5347 71A8                           l5339 6A70                           l4539 6868  
                         l4491 67F0                           l4459 67A0                           l5349 71BE  
                         l4653 7998                           l4469 6ADE                           l4549 687A  
                         l4493 67F8                           l4581 6658                           l4823 7D44  
                         l4815 7D10                           l4591 72E2                           l4753 7BBC  
                         l4497 682C                           l4489 67DE                           l4577 6632  
                         l4851 7DE4                           l4827 7D5E                           l4819 7D2A  
                         l4763 7BFC                           l4595 733A                           l4587 728C  
                         l4845 7DBE                           l4855 7DFE                           l4767 7C16  
                         l4759 7BE2                           l4769 7C22                           l4859 7E18  
                         l4885 7E9A                           l4879 7E74                           l4889 7EB4  
                         STR_1 7F46                           STR_2 7FC8                           STR_3 7FDB  
                         STR_4 7FB5                           STR_5 7FEE                           _LATA 000F89  
                         _LATB 000F8A                           _LATC 000F8B                           u2180 63DC  
                         u2194 63EA                           u2195 63E6                           u2188 63DE  
                         u2967 6358           __size_of_le_AD10bits 008C                           _flag 00A0  
                         _icgs 7ED1                           _icms 7EE5                           _icrs 7F18  
                         _main 73BC                           _temp 003D                           _time 0031  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9        __size_of_escreve_eeprom 0022                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 1018  
                        ??_ATC 001F              inverte_saida@pino 0015                    _Delay1KTCYx 6352  
                        ?_main 0001                          _ADRES 000FC3                          _EEADR 000FA9  
              __end_of___awmod 6972                __end_of___lldiv 67C0                          _T0CON 000FD5  
                        _T2CON 000FCA                __end_of___lwdiv 6B5C                          i2l201 6E96  
              __end_of___lwmod 684A                          i2l210 6FE2                          i2l211 6FE8  
                        i2l220 7022                          i2l213 6FF8                          i2l205 6FCA  
                        i2l222 7032                          i2l214 6FFE                          i2l223 7038  
                        i2l215 7004                          i2l207 6FD0                          i2l240 6B88  
                        i2l232 6B5E                          i2l224 703E                          i2l216 700A  
                        i2l208 6FD6                          i2l241 6B8E                          i2l225 7044  
                        i2l217 7010                          i2l209 6FDC                          i2l250 6BC4  
                        i2l242 6B94                          i2l234 6B64                          i2l226 704A  
                        i2l218 7016                          i2l251 6BCA                          i2l243 6B9A  
                        i2l235 6B6A                          i2l219 701C                          i2l252 6BD0  
                        i2l244 6BA0                          i2l236 6B70                          i2l180 6D70  
                        i2l228 70FC                          i2l245 6BA6                          i2l237 6B76  
                        i2l253 6C60                          i2l181 6D76                          i2l246 6BAC  
                        i2l238 6B7C                          i2l190 6DAE                          i2l182 6D7C  
                        i2l247 6BB2                          i2l239 6B82                          i2l191 6DB4  
                        i2l183 6D82                          i2l248 6BB8                          i2l192 6DBA  
                        i2l184 6D88                          i2l249 6BBE                          i2l193 6DC0  
                        i2l186 6D96                          i2l178 6D6A                          i2l610 7828  
                        i2l195 6DCE                          i2l187 6D9C                          i2l196 6DD4  
                        i2l188 6DA2                          i2l197 6DDA                          i2l189 6DA8  
                        i2l630 6398                          i2l198 6DE0                          i2l199 6DE6  
                        i2l598 7696                          _RCREG 000FAE                          _RCSTA 000FAB  
                        _REGad 0047                          _TMR0H 000FD7                          _TMR1H 000FCF  
                        _TMR0L 000FD6                          _TMR3H 000FB3                          _TMR1L 000FCE  
                        _TMR3L 000FB2                          _SPBRG 000FAF                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TXREG 000FAD  
                        _TXSTA 000FAC                          _flagb 0029                          _flagc 002B  
                        _envia 0027                          _sendr 6578                          _valor 003E  
                        _sputc 63CA                __end_of_resetBT 64AC                __end_of_sendnum 73BC  
                        tablat 000FF5                          status 000FD8  __size_of_habilita_interrupcao 00A4  
              __initialization 64EE                   ?_interrupcao 0001                   __end_of_icgs 7EE5  
                 __end_of_icms 7EF8                   __end_of_icrs 7F23                   __end_of_main 7568  
                       ??_main 00B8                  __activetblptr 000002               ?i2_inverte_saida 0001  
                 ?_nivel_baixo 0015                         _ADCON0 000FC2                         _ADCON1 000FC1  
                       _ADCON2 000FC0                         _ADRESH 000FC4                         _EEDATA 000FA8  
                       _CCPR1L 000FBE                         _CCPR2L 000FBB                         _EECON1 000FA6  
                       _EECON2 000FA7                         ?_sendr 0018                         ?_sputc 0001  
                       i2l3603 6BD6                         i2l3711 75B4                         i2l3801 77DA  
                       i2l3721 7608                         i2l3563 6DEC                         i2l3555 6D8E  
                       i2l3811 7804                         i2l3723 7614                         i2l3715 75D8  
                       i2l3731 764A                         i2l3581 6FEE                         i2l3717 75E4  
                       i2l3559 6DC6                         i2l3583 7028                         i2l3727 7638  
                       i2l5361 6E0C                         i2l3569 6DF4                         i2l3585 7050  
                       i2l3753 76E8                         i2l3729 7644                         i2l5363 6E22  
                       i2l5357 7072                         i2l3589 705A                         i2l3773 773E  
                       i2l3765 7728                         i2l3749 76BA                         i2l5359 7088  
                       i2l3793 77B6                         i2l3785 778E                         i2l3777 775C  
           __size_of_ReadUSART 001E                         _SPBRGH 000FB0                   ?_taxa_serial 00A8  
        __size_ofi2_nivel_alto 0130                         ___wmul 63F6                      ??___awmod 0019  
                       _chegou 0025                      ??___lldiv 001D                         _flagNM 00A2  
                       _bt_ini 7862                      ??___lwdiv 0022                         _comand 0060  
                    ??___lwmod 00B3                         clear_0 64F4                         clear_1 6500  
              ___awmod@divisor 0017                         _sendrw 6628                ___awmod@counter 001A  
                       _vorbei 00A6                         _swputc 6342                   __pdataCOMRAM 0042  
             __end_of_tempo_ms 6578                   __mediumconst 7ED0                      ??_resetBT 001F  
                       tblptrh 000FF7                         tblptrl 000FF6                      ??_sendnum 0023  
                       tblptru 000FF8                         sputc@c 0017                     __accesstop 0060  
      __end_of__initialization 6526                   i2_nivel_alto 6D68                 _escreve_eeprom 63A8  
              _clock_int_48MHz 65D0                 __pcstackCOMRAM 0001                  __end_of_sendr 65D0  
                __end_of_sputc 63F6              __end_of_ReadUSART 63A8       habilita_interrupcao@tipo 0015  
            _habilita_canal_AD 6364         __size_of_modoAttention 0042             ?_habilita_canal_AD 0001  
           __size_of_configBR6 005A                  ReadUSART@data 0001             __size_of_le_eeprom 0014  
                      ??_sendr 001A                        ??_sputc 0015         __end_of_escreve_eeprom 63CA  
                   __pbssBANK0 0060            ??_habilita_canal_AD 0015                        ?___wmul 0015  
                      ?_bt_ini 0001           __size_of_interrupcao 685A                        _CCP1CON 000FBD  
                      _CCP2CON 000FBA                   ?_Delay1KTCYx 0001                        _BAUDCON 000FB8  
    __end_of_habilita_canal_AD 6376                        ?_sendrw 0016                        ?_swputc 0001  
         __size_of_nivel_baixo 0136                  ??_le_AD10bits 0021                ?_escreve_eeprom 0015  
      __end_of_clock_int_48MHz 6628                  _modoAttention 64AC         __size_of_inverte_saida 0106  
                      __Hparam 0000                        __Lparam 0000              __end_of_configBR6 66DA  
                   _incrementa 009C                      ?_tempo_ms 001B         __size_ofi2_nivel_baixo 0136  
            __end_of_le_eeprom 638A           __size_of_taxa_serial 00A0                        ___awmod 68D6  
                      ___lldiv 673A                __size_of___wmul 003A                        ___lwdiv 6AB6  
                      ___lwmod 67C0                __size_of_bt_ini 066E                        __pcinit 64EE  
                      __ramtop 0800                __size_of_sendrw 0058                        __ptext0 73BC  
                      __ptext1 6972                        __ptext2 673A                        __ptext3 6628  
                      __ptext4 7234                        __ptext5 6342                        __ptext6 67C0  
                      __ptext7 684A                        __ptext8 6A12                        __ptext9 6364  
                      _comando 007E                      _T0CONbits 000FD5                   __size_of_ATC 003E  
                    _T1CONbits 000FCD                __size_of_swputc 0010                      _T2CONbits 000FCA  
 __end_of_habilita_interrupcao 6AB6                      _T3CONbits 000FB1               ___awmod@dividend 0015  
                   _modoNormal 66DA                        _resetBT 646E                        _sendnum 7234  
               __pintcode_body 7568           end_of_initialization 6526                     _nivel_alto 6E98  
                __Lmediumconst 7ED0                        int_func 7568                 ?_modoAttention 0001  
          __end_of_le_AD10bits 68D6                ___lldiv@divisor 0019                        sendr@st 0018  
              ___lldiv@counter 0022                     ??_tempo_ms 001D                      _RCSTAbits 000FAB  
                      postdec1 000FE5                        postinc0 000FEE              i2nivel_baixo@pino 0001  
   __size_of_habilita_canal_AD 0012                      _PORTAbits 000F80                      _PORTBbits 000F81  
                    _PORTCbits 000F82                      _PORTDbits 000F83                      _PORTEbits 000F84  
                      swputc@c 0015                  _inverte_saida 6C62                      _TRISAbits 000F92  
                    _TRISBbits 000F93                      _TRISCbits 000F94                      _TRISDbits 000F95  
                i2_nivel_baixo 6FC8               ?_clock_int_48MHz 0001       __size_ofi2_inverte_saida 0106  
                    _TXSTAbits 000FAC                le_AD10bits@conv 0021                 __end_of___wmul 6430  
                  _BAUDCONbits 000FB8                  __pidataCOMRAM 6338                 __end_of_bt_ini 7ED0  
               ?_inverte_saida 0015           __size_of_Delay1KTCYx 0012                 __end_of_sendrw 6680  
                  ?_modoNormal 0001                 __end_of_swputc 6352            start_initialization 64EE  
                    _ReadUSART 638A                    __end_of_ATC 646E                 ?i2_nivel_baixo 0001  
                  __end_of_icb 7F2C                    __end_of_atc 7F43                    __end_of_icg 7F35  
                  __end_of_icm 7F18                    __end_of_icn 7F09                    __end_of_icp 7F46  
                  __end_of_icr 7F3E                    _le_AD10bits 684A                ??_modoAttention 001F  
                  ?_nivel_alto 0015           _habilita_interrupcao 6A12                       ??___wmul 0019  
                     ??_bt_ini 001F                       ??_sendrw 0018                       ??_swputc 0015  
                  __pbssCOMRAM 0023                     ?_ReadUSART 0001               ??_escreve_eeprom 0016  
                __pcstackBANK0 00A8            __end_of__stringdata 7FFE                Delay1KTCYx@unit 0015  
        ?_habilita_interrupcao 0015                      _main$2576 00B9               ___lwdiv@dividend 00A8  
                ??_interrupcao 0005            __size_of_modoNormal 0060              ??i2_inverte_saida 0003  
                sendnum@sannum 00B5                      __pintcode 1008                  __pmediumconst 7ED0  
                     ?___awmod 0015                       ?___lldiv 0015                       ?___lwdiv 00A8  
                     ?___lwmod 00AF              __size_of_tempo_ms 0048                      _configBR6 6680  
                    _flagstart 00A4                ??_inverte_saida 0017                      _le_eeprom 6376  
          __size_of_nivel_alto 0130                ??i2_nivel_baixo 0003                  ??_nivel_baixo 0017  
                     ?_resetBT 0001                       ?_sendnum 00B5               ___lwdiv@quotient 00AD  
               __size_of_sendr 0058                 __size_of_sputc 002C                 ___wmul@product 0019  
                     _IPR1bits 000F9F                       _PIE1bits 000F9D                       _PIE2bits 000FA0  
                ??_taxa_serial 00AC                       _PIR1bits 000F9E                       _RCONbits 000FD0  
                   ?_configBR6 0001             escreve_eeprom@dado 0015                     ?_le_eeprom 0001  
          __end_of_interrupcao 7862                     _ADCON0bits 000FC2                    __stringdata 7F46  
                   _ADCON2bits 000FC0              ___wmul@multiplier 0015               i2nivel_alto@pino 0001  
                  ??_ReadUSART 0001                    _INTCON2bits 000FF1                    _INTCON3bits 000FF0  
                    copy_data0 651A            i2inverte_saida@pino 0001            __end_of_nivel_baixo 7234  
                ?i2_nivel_alto 0001         ??_habilita_interrupcao 0017                     _EECON1bits 000FA6  
                     __Hrparam 0000                nivel_baixo@pino 0015                       __Lrparam 0000  
       habilita_canal_AD@canal 0015               __size_of___awmod 009C            __end_of_taxa_serial 6A12  
             __size_of___lldiv 0086               __size_of___lwdiv 00A6               __size_of___lwmod 008A  
                 ??_modoNormal 001F                ___lwdiv@divisor 00AA                ___lwdiv@counter 00AC  
             __size_of_resetBT 003E                       __ptext10 65D0                       __ptext11 6AB6  
                     __ptext20 64AC                       __ptext12 68D6                       __ptext21 6E98  
                     __ptext13 7862                       __ptext30 6FC8                       __ptext22 6430  
                     __ptext14 6376                       __ptext31 6D68                       __ptext23 6530  
                     __ptext15 63A8                       __ptext32 6B5C                       __ptext24 63F6  
                     __ptext16 6680                       __ptext33 638A                       __ptext25 6352  
                     __ptext17 66DA                       __ptext34 0000                       __ptext26 6578  
                     __ptext18 646E                       __ptext27 63CA                       __ptext19 70FE  
                     __ptext28 6C62               __size_of_sendnum 0188                       _endereco 0037  
                 ?_le_AD10bits 001F                 ??i2_nivel_alto 0003                   ??_nivel_alto 0017  
              taxa_serial@taxa 00A8                  __size_of_main 01AC                       _valorbcd 003F  
     __size_of_clock_int_48MHz 0058                    _interrupcao 1008                      tempo_ms@i 001B  
                     _tempo_ms 6530                      tempo_ms@k 001D             __end_of_modoNormal 673A  
            le_eeprom@endereco 0015                       _numquant 003C                  ??_Delay1KTCYx 0015  
                  ??_configBR6 001F                    ??_le_eeprom 0015             __end_of_nivel_alto 6FC8  
                   _INTCONbits 000FF2                    _nivel_baixo 70FE         taxa_serial@baud_sanusb 00B4  
              i2_inverte_saida 6B5C                       intlevel2 0000               ___lwmod@dividend 00AF  
               nivel_alto@pino 0015               ___lldiv@dividend 0015          __end_of_modoAttention 64EE  
                     sendrw@st 0016                    _taxa_serial 6972         escreve_eeprom@endereco 0016  
                  _temperatura 002F               ___lldiv@quotient 001E                ___lwmod@divisor 00B1  
          __end_of_Delay1KTCYx 6364                ___lwmod@counter 00B4                     _WDTCONbits 000FD1  
                 _USART_Status 0035  
